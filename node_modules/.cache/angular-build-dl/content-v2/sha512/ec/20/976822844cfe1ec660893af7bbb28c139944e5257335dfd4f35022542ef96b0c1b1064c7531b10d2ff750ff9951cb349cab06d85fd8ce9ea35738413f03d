function _defineProperties(t,T){for(var e=0;e<T.length;e++){var E=T[e];E.enumerable=E.enumerable||!1,E.configurable=!0,"value"in E&&(E.writable=!0),Object.defineProperty(t,E.key,E)}}function _createClass(t,T,e){return T&&_defineProperties(t.prototype,T),e&&_defineProperties(t,e),t}function _classCallCheck(t,T){if(!(t instanceof T))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{mWic:function(t,T,e){"use strict";e.r(T);var E=e("8Y7J"),n=function t(){_classCallCheck(this,t)},I=e("pMnS"),D=e("MKJQ"),o=e("sZkV"),A=e("SVse"),S=e("6GXZ"),_=function t(){_classCallCheck(this,t)},l=e("kwUn"),i=function(){function t(T,e,E,n){var I=this;_classCallCheck(this,t),this.platform=T,this.sqlite=e,this.userService=E,this.router=n,this.database_name="AUDIT_DB.db",this.store=new _,this.platform.ready().then((function(){I.createDB()})).catch((function(t){console.log(t)}))}return _createClass(t,[{key:"GotoNewAudit",value:function(){this.router.navigate(["new-audit"])}},{key:"createDB",value:function(){var t=this;console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then((function(T){t.databaseObj=T,t.getRows(),t.CreateAllTables(),t.create_storetable()})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"getRows",value:function(){var t=this;this.databaseObj.executeSql("SELECT * FROM USER_TB",[]).then((function(T){if(t.row_data=[],T.rows.length>0)for(var e=0;e<T.rows.length;e++)t.row_data.push(T.rows.item(e)),console.log(t.row_data[e].toString())})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ngOnInit",value:function(){}},{key:"Get_Sync",value:function(){this.get_all_store_api(),this.Delelete_All_data(),this.Get_AllAudit()}},{key:"Get_AllAudit",value:function(){var t=this,T="00"+this.row_data[0].EMP_ID.toString();console.log("auditor id: "+T);try{this.userService.Get_Audit_By_Auditor(T).subscribe((function(T){if(console.log(T),t.yser_ss=T,console.log(t.yser_ss.Audits[0].AuditName),console.log(t.yser_ss.Audits[0].AuditId),t.yser_ss.Audits.length>0)for(var e=t.yser_ss,E=0;E<=t.yser_ss.Audits.length-1;E++)console.log(t.yser_ss),t.Get_all_Audit_with_question(e.Audits[E].AuditId)}))}catch(e){alert("Please Check Connection")}}},{key:"Get_all_Audit_with_question",value:function(t){var T=this;try{this.userService.Get_Audit_By_Id(t).subscribe((function(t){T.auditResponce=t,T.datafrom_server()}))}catch(e){alert("Please Check Connection")}}},{key:"datafrom_server",value:function(){if(console.log("NEW AUDIT iNSERTION"),console.log(this.auditResponce),console.log(this.auditResponce.StatusFl),this.createAudit(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.AuditName,this.auditResponce.Audt.AuditTypeId.toString(),this.auditResponce.Audt.AuditType,this.auditResponce.Audt.AuditStage,this.auditResponce.Audt.AuditPoints.toString(),this.auditResponce.Audt.QuestionCount.toString()),this.auditResponce.Audt.Sections.length>0)for(var t=0;t<=this.auditResponce.Audt.Sections.length-1;t++)if(this.createSection(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].ParentSectionId.toString(),this.auditResponce.Audt.Sections[t].SectionName,this.auditResponce.Audt.Sections[t].SectionDesc,this.auditResponce.Audt.Sections[t].SectionOrder.toString(),this.auditResponce.Audt.Sections[t].SectionPoint.toString(),this.auditResponce.Audt.Sections[t].TQuestionCount.toString(),this.auditResponce.Audt.Sections[t].QuestionCount.toString(),this.auditResponce.Audt.Sections[t].CQuestionCount.toString()),this.auditResponce.Audt.Sections[t].Questions.length>0)for(var T=0;T<=this.auditResponce.Audt.Sections[t].Questions.length-1;T++){if(this.createQuestion(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionTypeId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionName.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionType,this.auditResponce.Audt.Sections[t].Questions[T].QuestionOrder.toString(),this.auditResponce.Audt.Sections[t].Questions[T].IsNC,this.auditResponce.Audt.Sections[t].Questions[T].QuestionPoint.toString()),console.log("insering question"),console.log(this.auditResponce.Audt.Sections[t].Questions[T].QuestionName),console.log(this.auditResponce.Audt.Sections[t].Questions[T].QuestionType),"Choice"==this.auditResponce.Audt.Sections[t].Questions[T].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[T].Choice.length>0)for(var e=0;e<this.auditResponce.Audt.Sections[t].Questions[T].Choice.length-1;e++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Choice[e].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Choice[e].Choice,this.auditResponce.Audt.Sections[t].Questions[T].Choice[e].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Choice[e].Comments.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Choice[e].IsNegative);if("Yes/No"==this.auditResponce.Audt.Sections[t].Questions[T].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[T].YesNo.length>0)for(var E=0;E<this.auditResponce.Audt.Sections[t].Questions[T].YesNo.length-1;E++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].YesNo[E].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].YesNo[E].Choice,this.auditResponce.Audt.Sections[t].Questions[T].YesNo[E].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[T].YesNo[E].Comments,this.auditResponce.Audt.Sections[t].Questions[T].YesNo[E].IsNegative);if("Standard"==this.auditResponce.Audt.Sections[t].Questions[T].QuestionType&&0!=this.auditResponce.Audt.Sections[t].Questions[T].Standard.Id&&(this.createQStandard(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Standard.Type,this.auditResponce.Audt.Sections[t].Questions[T].Standard.MinRange,this.auditResponce.Audt.Sections[t].Questions[T].Standard.MaxRange,this.auditResponce.Audt.Sections[t].Questions[T].Standard.Fix,this.auditResponce.Audt.Sections[t].Questions[T].Standard.UoM,this.auditResponce.Audt.Sections[t].Questions[T].Standard.Field,this.auditResponce.Audt.Sections[t].Questions[T].Standard.Multiple),this.auditResponce.Audt.Sections[t].Questions[T].Standard.PreDefinedValues.length>0))for(var n=0;n<this.auditResponce.Audt.Sections[t].Questions[T].Standard.PreDefinedValues.length-1;n++)this.createQStandardPreDefined(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Standard.PreDefinedValues[n].Id.toString(),this.auditResponce.Audt.Sections[t].Questions[T].Standard.PreDefinedValues[n].Name.toString())}}},{key:"CreateAllTables",value:function(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,AUDIT_TYPE_ID integer not null,AUDIT_TYPE text not null,AUDIT_STAGE text not null,AUDIT_PT integer not null,QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table Audit Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS SECTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS_REQUIRED text not null,IS_NEGATIVE text not null);",[]).then((function(){console.log("Table QUESTION_CHOICE_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_STANDARD_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,STANDARD_TYPE text not null,MIN_RANGE text,MAX_RANGE text,FIX text,UOM text,FIELD_LABEL text,IS_PREDEFINED text);",[]).then((function(){console.log("Table QUESTION_STANDARD_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_STANDARD_PREDEFINED_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_OPTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,SCORABLE_FL text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_RANGE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS_REQUIRED text not null);",[]).then((function(){console.log("Table QUESTION_STANDARD_PREDEFINED_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_FIELDS_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,FIELD_NAME text not null,FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null);",[]).then((function(){console.log("Table QUESTION_FIELDS_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_VALUE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,VALUE_ID not null,VALUE_NAME text not null,DEFAULT_VALUE text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,CHOICE_ID not null,CHOICE_TEXT text not null,CHOICE_PT integer not null);",[]).then((function(){console.log("Table FIELDS_VALUE_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_TB(ATTEMPTED_ID integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,STR_CODE text not null,STR_NAME text not null,USER_ID text not null,STR_MANAGER text not null,AUDIT_DT text not null,AUDIT_STATUS text not null,UNIQUE_ID text not null,AUDIT_FINDINGS text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,QUESTION_ANSWERED integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_SECTION Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null,MARKS_SCORED integer not null,QUESTION_STATUS text not null,QUESTION_COMMENT text not null,IMAGE_NAME text not null,IS_INCLUDED text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_CHOICE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,FIELD_VALUE text,COMMENTS text,CHOICE_VALUE text,POINTS integer not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null,VALUE_OBSERVED text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_OPTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,OPTION_TEXT_VALUE text not null,POINTS integer not null,ISSCORABLE text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_OPTION Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_RANGE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_RANGE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_RECIVING_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,UNLOAD_START_TIME text,UNLOAD_END_TIME text,VEHICLE_NO text,TEMPERATURE text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_RECIVING_QUESTIONS Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,OTHER_FIELD_ID integer not null,OTHER_FIELD_NAME text not null,OTHER_FIELD_TYPE text not null,OTHER_FIELD_ISKEY text not null,OTHER_FIELD_VALUE_ID integer not null,OTHER_FIELD_VALUE text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE Table IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,CHOICE_FIELD_ID integer not null,CHOIC_FIELD_NAME text not null,CHOICE_FIELD_TYPE text not null,CHOICE_FIELD_ISKEY text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,CHOICE_PT integer not null,CHECKED Text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ERROR_LOG(ID integer primary key autoincrement,SCREEN_NAME text not null,FUNCTION_NAME text not null,EXCEPTION text not null);",[]).then((function(){console.log("Table AUDIT_ERROR_LOG Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,STR_CODE text not null,UNIQUE_ID text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_IMAGES_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"create_storetable",value:function(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS STORE_TB(_id integer primary key autoincrement,STR_CODE text not null,STR_NAME text not null);",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"get_all_store_api",value:function(){var t=this,T=this.row_data[0].BU_ID.toString(),e="00"+this.row_data[0].EMP_ID.toString();this.store.StrCode=T,this.store.StrName=e,console.log(this.store),this.userService.Get_All_Store(this.store).subscribe((function(T){if(t.storeResponse=T,console.log(t.storeResponse),t.storeResponse.Stores.length>0)for(var e=0;e<=t.storeResponse.Stores.length-1;e++)console.log(t.yser_ss),t.insert_store(t.storeResponse.Stores[e].StrCode,t.storeResponse.Stores[e].StrName)}))}},{key:"insert_store",value:function(t,T){var e=this;this.databaseObj.executeSql("INSERT INTO STORE_TB(STR_CODE,STR_NAME) VALUES('"+t+"','"+T+"')",[]).then((function(){e.getstore()})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"getstore",value:function(){var t=this;this.databaseObj.executeSql("SELECT * FROM STORE_TB",[]).then((function(T){if(t.row_store=[],console.log(T),T.rows.length>0)for(var e=0;e<T.rows.length;e++)t.row_store.push(T.rows.item(e))})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteStore",value:function(){this.databaseObj.executeSql("DELETE FROM STORE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"AttemptedOpenAuditCount",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB t WHERE AUDIT_ID="+t+" AND AUDIT_STATUS='Open' AND STR_CODE='"+T+"'",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)e.count_AttemptedOpenAuditCount.push(t.rows.item(T))})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"Delelete_All_data",value:function(){this.databaseObj.executeSql("DELETE FROM AUDIT_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM SECTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteAudit",value:function(t){this.databaseObj.executeSql("DELETE FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteSection",value:function(t){this.databaseObj.executeSql("DELETE FROM SECTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQuestion",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQChoice",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQOption",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQRange",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQField",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQFieldValue",value:function(t){this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQFieldChoice",value:function(t){this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAllAudits",value:function(){var t=this;this.databaseObj.executeSql("SELECT *  FROM AUDIT_TB",[]).then((function(T){if(t.row_store=[],console.log(T),T.rows.length>0){for(var e=0;e<T.rows.length;e++)t.AllAudits.push(T.rows.item(e));return t.AllAudits}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createAudit",value:function(t,T,e,E,n,I,D){this.databaseObj.executeSql("INSERT INTO AUDIT_TB (AUDIT_ID, AUDIT_NAME,AUDIT_TYPE_ID,AUDIT_TYPE,AUDIT_STAGE,AUDIT_PT, QUESTION_COUNT) VALUES("+t+",'"+T+"',"+e+",'"+E+"','"+n+"',"+I+","+D+")",[]).then((function(t){return console.log(t),!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createSection",value:function(t,T,e,E,n,I,D,o,A,S){this.databaseObj.executeSql("INSERT INTO SECTION_TB(AUDIT_ID, SECTION_ID, PARENT_SECTION_ID, SECTION_NAME, SECTION_DESC, SECTION_ORDER, SECTION_PT, T_QUESTION_COUNT, S_QUESTION_COUNT, C_QUESTION_COUNT ) VALUES("+t+","+T+","+e+",'"+E+"','"+n+"',"+I+","+D+","+o+","+A+","+S+")",[]).then((function(t){return console.log(t),!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQuestion",value:function(t,T,e,E,n,I,D,o,A){this.databaseObj.executeSql("INSERT INTO QUESTION_TB(AUDIT_ID, SECTION_ID, QUESTION_ID, QUESTION_TYPE_ID, QUESTION_NAME, QUESTION_TYPE, QUESTION_ORDER, IS_CRITICAL, QUESTION_MARKS) VALUES("+t+","+T+","+e+","+E+",'"+n+"','"+I+"',"+D+",'"+o+"',"+A+")",[]).then((function(t){return console.log(t),!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQChoice",value:function(t,T,e,E,n,I,D,o){this.databaseObj.executeSql("INSERT INTO QUESTION_CHOICE_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,CHOICE_ID,CHOICE_TEXT,POINTS,COMMENTS_REQUIRED,IS_NEGATIVE) VALUES("+t+","+T+","+e+","+E+",'"+n+"',"+I+",'"+D+"','"+o+"')",[]).then((function(t){return console.log(t),!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createAttemptedAudit",value:function(t,T,e,E,n,I,D,o,A,S){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_TB(AUDIT_ID, AUDIT_NAME, STR_CODE, STR_NAME, USER_ID,STR_MANAGER, AUDIT_DT, AUDIT_STATUS,UNIQUE_ID,AUDIT_FINDINGS ) VALUES("+t+","+T+","+e+","+E+",'"+n+"',"+I+",'"+D+"','"+o+","+A+","+S+"')",[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditForStore",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT * AUDIT_ATTEMPTED_TB where AUDIT_ID="+t+" AND STR_CODE='"+T+"' ORDER BY ATTEMPTED_ID DESC",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.AttemptedAuditForStore.push(t.rows.item(T));return e.AttemptedAuditForStore}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createAttemptedSectionBySQL",value:function(t,T){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,QUESTION_ANSWERED,S_QUESTION_COUNT,C_QUESTION_COUNT) SELECT "+t+",AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,'',S_QUESTION_COUNT,C_QUESTION_COUNT FROM SECTION_TB WHERE AUDIT_ID="+T,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createAttemptedQuestionBySQL",value:function(t,T){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IMAGE_NAME,IS_INCLUDED,IMAGE_PUSHED) SELECT "+t+",AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,0,'Open','','','Yes','Yes' FROM QUESTION_TB WHERE AUDIT_ID="+T,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedSection",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.S_QUESTION_COUNT>0",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.AttemptedSection.push(t.rows.item(T));return e.AttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedOpenAuditByUser",value:function(t){var T=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='"+t+"' AND AUDIT_STATUS='Open'",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AttemptedOpenAuditByUser.push(t.rows.item(e));return T.AttemptedOpenAuditByUser}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditBySQL",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T,[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.AttemptedAuditBySQL.push(t.rows.item(T));return e.AttemptedAuditBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedSectionQuestionBySQL",value:function(t,T,e,E){var n=this;if("Audit"==t?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+e,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)n.AttemptedSectionQuestionBySQL.push(t.rows.item(T))})).catch((function(t){alert("error "+JSON.stringify(t))})):"Section"==t?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+e+" AND A.SECTION_ID="+E,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)n.AttemptedSectionQuestionBySQL.push(t.rows.item(T))})).catch((function(t){alert("error "+JSON.stringify(t))})):"Question"==t?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+e+" AND B.QUESTION_ID="+E,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)n.AttemptedSectionQuestionBySQL.push(t.rows.item(T))})).catch((function(t){alert("error "+JSON.stringify(t))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+e+" AND 1=2",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)n.AttemptedSectionQuestionBySQL.push(t.rows.item(T))})).catch((function(t){alert("error "+JSON.stringify(t))})),this.AttemptedSectionQuestionBySQL.length>0)return this.AttemptedSectionQuestionBySQL}},{key:"fetchAttemptedCompletedAuditByUser",value:function(t){var T=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='"+t+"' AND AUDIT_STATUS='Close'",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AttemptedCompletedAuditByUser.push(t.rows.item(e));return T.AttemptedCompletedAuditByUser}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchImageNotPushedAttemptedQuestionBySQL",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT AUDIT_ID,SECTION_ID,QUESTION_ID,0 AS KEY_FIELD_VALUE_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE QUESTION_STATUS='Done' AND ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null' UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTION_FIELD X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+T+" UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.VALUE_ID AS KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+T,[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.ImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(T));return e.ImageNotPushedAttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedOpenAuditCount",value:function(){var t=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB t WHERE AUDIT_STATUS='Open'",[]).then((function(T){if(t.row_store=[],console.log(T),T.rows.length>0){for(var e=0;e<T.rows.length;e++)t.Count_AttemptedOpenAuditCount.push(T.rows.item(e));return t.Count_AttemptedOpenAuditCount}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deletAttemptedAuditById",value:function(t){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_RECIVING_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_OPTION WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionBySQL",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+" ORDER BY QUESTION_ORDER",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.AttemptedQuestionBySQL.push(t.rows.item(T));return E.AttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionChoiceBySQL",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+T+" AND A.QUESTION_ID="+e,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.AttemptedQuestionBySQL.push(t.rows.item(T));return E.AttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditPrevQuestionBySQL",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+T+" AND AUDIT_ID="+e+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+T+" AND AUDIT_ID="+e+" AND QUESTION_ID="+E+"))",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.AttemptedAuditPrevQuestionBySQL.push(t.rows.item(T));return n.AttemptedAuditPrevQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchPrevAttemptedSection",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+T+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+"))",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.PrevAttemptedSection.push(t.rows.item(T));return E.PrevAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditNextQuestionBySQL",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+T+" AND AUDIT_ID="+e+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+T+" AND AUDIT_ID="+e+" AND QUESTION_ID="+E+"))",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.AttemptedAuditNextQuestionBySQL.push(t.rows.item(T));return n.AttemptedAuditNextQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchNextAttemptedSection",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+T+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+")",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.NextAttemptedSection.push(t.rows.item(T));return E.NextAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionById",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.QuestionById.push(t.rows.item(T));return E.QuestionById}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionBased",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+t+" AND QUESTION_ID="+e,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.QuestionBased.push(t.rows.item(T));return E.QuestionBased}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionBasedValues",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e+" AND STANDARD_ID="+E,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.QuestionBasedValues.push(t.rows.item(T));return n.QuestionBasedValues}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionChoice",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND QUESTION_ID="+e,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.QuestionChoice.push(t.rows.item(T));return E.QuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchTopAttemptedSection",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.QuestionChoice.push(t.rows.item(T));return e.QuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchSLAttemptedSection",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+e+" AND PARENT_SECTION_ID="+T,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.SLAttemptedSection_check.push(t.rows.item(T));return E.SLAttemptedSection_check}})).catch((function(t){alert("error "+JSON.stringify(t))})),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+T+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.SLAttemptedSection.push(t.rows.item(T));return E.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.SECTION_ID="+T+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.SLAttemptedSection.push(t.rows.item(T));return E.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+T+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.SLAttemptedSection.push(t.rows.item(T));return E.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchGenericImageNotPushedAttemptedQuestionBySQL",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.GenericImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(T));return e.GenericImageNotPushedAttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"DeleteGenericImages",value:function(t,T){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+T,[])}},{key:"SaveGenericImage",value:function(t,T,e,E,n,I){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+t+","+e+",'"+E+"','"+T+"','"+n+"','No')",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"UpdateAuditFindings",value:function(t,T,e,E){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+E.replace("'","''")+"' WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND UNIQUE_ID='"+T+"'",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"GetAuditFindings",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND UNIQUE_ID='"+T+"'",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.AuditFindings.push(t.rows.item(T));return E.AuditFindings}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createQStandard",value:function(t,T,e,E,n,I,D,o,A,S,_){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+t+","+T+","+e+","+E+",'"+n+"','"+I+"','"+D+"','"+o+"','"+A+"','"+S+"','"+_+"')",[]).then((function(){console.log("data inserted")})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQStandardPreDefined",value:function(t,T,e,E,n,I){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+t+","+T+","+e+","+E+","+n+",'"+I+"')",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionStandardBySQL",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ID="+e,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.AttemptedQuestionStandardBySQL.push(t.rows.item(T));return E.AttemptedQuestionStandardBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionStandardValueBySQL",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ID="+e+" AND STANDARD_ID="+E,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.AttemptedQuestionStandardValueBySQL.push(t.rows.item(T));return n.AttemptedQuestionStandardValueBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkAudit",value:function(t){var T=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.CheckAudit.push(t.rows.item(e));return T.CheckAudit}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkSection",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM SECTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T,[]).then((function(t){if(e.CheckSection=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.CheckSection.push(t.rows.item(T));return e.CheckSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestion",value:function(t,T,e){var E=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e,[]).then((function(t){if(E.CheckQuestion=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)E.CheckQuestion.push(t.rows.item(T));return E.CheckQuestion}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionChoice",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e+" AND CHOICE_ID="+E,[]).then((function(t){if(n.CheckQuestionChoice=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.CheckQuestionChoice.push(t.rows.item(T));return n.CheckQuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionStandard",value:function(t,T,e,E){var n=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e+" AND STANDARD_ID="+E,[]).then((function(t){if(n.CheckQuestionStandard=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)n.CheckQuestionStandard.push(t.rows.item(T));return n.CheckQuestionStandard}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionStandardPreDefined",value:function(t,T,e,E,n){var I=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+T+" AND QUESTION_ID="+e+" AND STANDARD_ID="+E+" AND VALUE_ID="+n,[]).then((function(t){if(I.CheckQuestionStandardPreDefined=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)I.CheckQuestionStandardPreDefined.push(t.rows.item(T));return I.CheckQuestionStandardPreDefined}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkAttemptAudit",value:function(t){var T=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_ID="+t,[]).then((function(t){if(T.CheckAttemptAudit=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.CheckAttemptAudit.push(t.rows.item(e));return T.CheckAttemptAudit}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createSection1",value:function(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,QUESTION_ANSWERED,S_QUESTION_COUNT,C_QUESTION_COUNT) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,'' AS QUESTION_ANSWERED,A.S_QUESTION_COUNT,A.C_QUESTION_COUNT FROM SECTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_SECTION C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID WHERE A.AUDIT_ID="+t+" AND C.SECTION_ID IS NULL",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createQuestion1",value:function(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IMAGE_NAME,IS_INCLUDED,IMAGE_PUSHED) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.QUESTION_TYPE_ID,A.QUESTION_NAME,A.QUESTION_TYPE,A.QUESTION_ORDER,A.IS_CRITICAL,A.QUESTION_MARKS,0 AS MARKS_SCORED,'Open' AS QUESTION_STATUS,'' AS QUESTION_COMMENT,'' AS IMAGE_NAME,'Yes' AS IS_INCLUDED,'Yes' AS IMAGE_PUSHED FROM QUESTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_QUESTIONS C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID AND A.QUESTION_ID=C.QUESTION_ID WHERE A.AUDIT_ID="+t+" AND C.QUESTION_ID IS NULL",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ValidateUser",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+T+"'",[]).then((function(t){if(e.ValidateUser_arry=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.ValidateUser_arry.push(t.rows.item(T));return e.ValidateUser_arry}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"GetUsrDetails",value:function(t,T){var e=this;this.databaseObj.executeSql("SELECT * FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+T+"'",[]).then((function(t){if(e.GetUsrDetails_arry=[],console.log(t),t.rows.length>0){for(var T=0;T<t.rows.length;T++)e.GetUsrDetails_arry.push(t.rows.item(T));return e.GetUsrDetails_arry}})).catch((function(t){alert("error "+JSON.stringify(t))}))}}]),t}(),N=e("iInd"),u=E.mb({encapsulation:0,styles:[["ion-content.background[_ngcontent-%COMP%]{--ion-background-color:black!important}.div_button[_ngcontent-%COMP%]{background-color:#fff}.main_div[_ngcontent-%COMP%]{margin-top:5em;margin-left:1em;margin-right:1em}"]],data:{}});function r(t){return E.Fb(0,[(t()(),E.ob(0,0,null,null,1,"li",[["style","background-color: white;"]],null,null,null,null,null)),(t()(),E.Eb(1,null,["",""]))],null,(function(t,T){t(T,1,0,T.context.$implicit.EMP_NAME)}))}function O(t){return E.Fb(0,[(t()(),E.ob(0,0,null,null,6,"ion-header",[],null,null,null,D.q,D.e)),E.nb(1,49152,null,0,o.y,[E.h,E.k,E.x],null,null),(t()(),E.ob(2,0,null,0,4,"ion-toolbar",[],null,null,null,D.x,D.l)),E.nb(3,49152,null,0,o.wb,[E.h,E.k,E.x],null,null),(t()(),E.ob(4,0,null,0,2,"ion-title",[],null,null,null,D.w,D.k)),E.nb(5,49152,null,0,o.ub,[E.h,E.k,E.x],null,null),(t()(),E.Eb(-1,0,["DashBoard "])),(t()(),E.ob(7,0,null,null,51,"ion-content",[["class","background"]],null,null,null,D.o,D.c)),E.nb(8,49152,null,0,o.r,[E.h,E.k,E.x],null,null),(t()(),E.ob(9,0,null,0,49,"div",[["class","main_div"]],null,null,null,null,null)),(t()(),E.ob(10,0,null,null,2,"ul",[],null,null,null,null,null)),(t()(),E.db(16777216,null,null,1,null,r)),E.nb(12,278528,null,0,A.h,[E.L,E.I,E.q],{ngForOf:[0,"ngForOf"]},null),(t()(),E.ob(13,0,null,null,44,"table",[],null,null,null,null,null)),(t()(),E.ob(14,0,null,null,43,"tbody",[],null,null,null,null,null)),(t()(),E.ob(15,0,null,null,11,"tr",[],null,null,null,null,null)),(t()(),E.ob(16,0,null,null,4,"td",[["width","48%"]],null,null,null,null,null)),(t()(),E.ob(17,0,null,null,3,"div",[],null,null,null,null,null)),(t()(),E.ob(18,0,null,null,2,"ion-button",[["color","danger"],["expand","full"]],null,[[null,"click"]],(function(t,T,e){var E=!0;return"click"===T&&(E=!1!==t.component.Get_Sync()&&E),E}),D.n,D.b)),E.nb(19,49152,null,0,o.h,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(t()(),E.Eb(-1,0,["Sync Definition"])),(t()(),E.ob(21,0,null,null,0,"td",[["width","3%"]],null,null,null,null,null)),(t()(),E.ob(22,0,null,null,4,"td",[["width","49%"]],null,null,null,null,null)),(t()(),E.ob(23,0,null,null,3,"div",[],null,null,null,null,null)),(t()(),E.ob(24,0,null,null,2,"ion-button",[["color","danger"],["expand","full"]],null,null,null,D.n,D.b)),E.nb(25,49152,null,0,o.h,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(t()(),E.Eb(-1,0,["Open Audits"])),(t()(),E.ob(27,0,null,null,4,"tr",[],null,null,null,null,null)),(t()(),E.ob(28,0,null,null,1,"td",[["width","48%"]],null,null,null,null,null)),(t()(),E.Eb(-1,null,["\xa0"])),(t()(),E.ob(30,0,null,null,0,"td",[["width","3%"]],null,null,null,null,null)),(t()(),E.ob(31,0,null,null,0,"td",[["width","49%"]],null,null,null,null,null)),(t()(),E.ob(32,0,null,null,11,"tr",[],null,null,null,null,null)),(t()(),E.ob(33,0,null,null,4,"td",[["width","48%"]],null,null,null,null,null)),(t()(),E.ob(34,0,null,null,3,"div",[],null,null,null,null,null)),(t()(),E.ob(35,0,null,null,2,"ion-button",[["color","danger"],["expand","full"]],null,[[null,"click"]],(function(t,T,e){var E=!0;return"click"===T&&(E=!1!==t.component.GotoNewAudit()&&E),E}),D.n,D.b)),E.nb(36,49152,null,0,o.h,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(t()(),E.Eb(-1,0,["New Audit"])),(t()(),E.ob(38,0,null,null,0,"td",[["width","3%"]],null,null,null,null,null)),(t()(),E.ob(39,0,null,null,4,"td",[["width","49%"]],null,null,null,null,null)),(t()(),E.ob(40,0,null,null,3,"div",[],null,null,null,null,null)),(t()(),E.ob(41,0,null,null,2,"ion-button",[["color","danger"],["expand","full"]],null,null,null,D.n,D.b)),E.nb(42,49152,null,0,o.h,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(t()(),E.Eb(-1,0,["Completed Audits"])),(t()(),E.ob(44,0,null,null,4,"tr",[],null,null,null,null,null)),(t()(),E.ob(45,0,null,null,1,"td",[["width","48%"]],null,null,null,null,null)),(t()(),E.Eb(-1,null,["\xa0"])),(t()(),E.ob(47,0,null,null,0,"td",[["width","3%"]],null,null,null,null,null)),(t()(),E.ob(48,0,null,null,0,"td",[["width","49%"]],null,null,null,null,null)),(t()(),E.ob(49,0,null,null,8,"tr",[],null,null,null,null,null)),(t()(),E.ob(50,0,null,null,1,"td",[["width","48"]],null,null,null,null,null)),(t()(),E.ob(51,0,null,null,0,"div",[],null,null,null,null,null)),(t()(),E.ob(52,0,null,null,0,"td",[["width","3%"]],null,null,null,null,null)),(t()(),E.ob(53,0,null,null,4,"td",[["width","49%"]],null,null,null,null,null)),(t()(),E.ob(54,0,null,null,3,"div",[],null,null,null,null,null)),(t()(),E.ob(55,0,null,null,2,"ion-button",[["color","danger"],["expand","full"]],null,null,null,D.n,D.b)),E.nb(56,49152,null,0,o.h,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(t()(),E.Eb(-1,0,["Log Off"])),(t()(),E.ob(58,0,null,null,0,"div",[["class","div_button"]],null,null,null,null,null))],(function(t,T){t(T,12,0,T.component.row_data),t(T,19,0,"danger","full"),t(T,25,0,"danger","full"),t(T,36,0,"danger","full"),t(T,42,0,"danger","full"),t(T,56,0,"danger","full")}),null)}var s=E.kb("app-dash-board",i,(function(t){return E.Fb(0,[(t()(),E.ob(0,0,null,null,1,"app-dash-board",[],null,null,null,O,u)),E.nb(1,114688,null,0,i,[o.Cb,S.a,l.a,N.m],null,null)],(function(t,T){t(T,1,0)}),null)}),{},{},[]),c=e("s7LF"),a=function t(){_classCallCheck(this,t)};e.d(T,"DashBoardPageModuleNgFactory",(function(){return U}));var U=E.lb(n,[],(function(t){return E.xb([E.yb(512,E.j,E.W,[[8,[I.a,s]],[3,E.j],E.v]),E.yb(4608,A.j,A.i,[E.s,[2,A.p]]),E.yb(4608,c.o,c.o,[]),E.yb(4608,o.a,o.a,[E.x,E.g]),E.yb(4608,o.Ab,o.Ab,[o.a,E.j,E.p]),E.yb(4608,o.Db,o.Db,[o.a,E.j,E.p]),E.yb(1073742336,A.b,A.b,[]),E.yb(1073742336,c.n,c.n,[]),E.yb(1073742336,c.g,c.g,[]),E.yb(1073742336,o.yb,o.yb,[]),E.yb(1073742336,N.n,N.n,[[2,N.s],[2,N.m]]),E.yb(1073742336,a,a,[]),E.yb(1073742336,n,n,[]),E.yb(1024,N.k,(function(){return[[{path:"",component:i}]]}),[])])}))}}]);