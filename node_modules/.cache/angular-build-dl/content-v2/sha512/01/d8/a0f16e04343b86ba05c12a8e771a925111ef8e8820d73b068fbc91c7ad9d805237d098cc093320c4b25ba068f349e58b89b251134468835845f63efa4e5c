function _defineProperties(T,E){for(var I=0;I<E.length;I++){var D=E[I];D.enumerable=D.enumerable||!1,D.configurable=!0,"value"in D&&(D.writable=!0),Object.defineProperty(T,D.key,D)}}function _createClass(T,E,I){return E&&_defineProperties(T.prototype,E),I&&_defineProperties(T,I),T}function _classCallCheck(T,E){if(!(T instanceof E))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{WNRU:function(T,E,I){"use strict";I.r(E);var D=I("8Y7J"),t=function T(){_classCallCheck(this,T)},e=I("pMnS"),A=I("MKJQ"),S=I("s7LF"),_=I("sZkV"),n=I("SVse"),N=I("6GXZ"),l=I("xoVG"),O=I("kwUn"),u=function(){function T(E,I,D,t,e,A){var S=this;_classCallCheck(this,T),this.userService=E,this.router=I,this.network=D,this.platform=t,this.sqlite=e,this.activatedRoute=A,this.database_name="AUDIT_DB.db",this.activatedRoute.queryParams.subscribe((function(T){console.log(JSON.parse(T.value)),S.Query_data=JSON.parse(T.value),console.log("list page"),console.log(S.Query_data.AttemptedId)})),this.platform.ready().then((function(){S.createDB()})).catch((function(T){console.log(T)}))}return _createClass(T,[{key:"ngOnInit",value:function(){}},{key:"createDB",value:function(){var T=this;console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then((function(E){T.databaseObj=E,T.fetchAttemptedSection(Number(T.Query_data.AttemptedId),Number(T.Query_data.AuditId),Number(T.Query_data.SectionId)),T.fetchAttemptedQuestionBySQL(Number(T.Query_data.AttemptedId),Number(T.Query_data.AuditId),Number(T.Query_data.SectionId),Number(T.Query_data.QuestionID)),console.log("questionid: "+T.Query_data.QuestionID),T.fetchQuestionChoice(Number(T.Query_data.AuditId),Number(T.Query_data.SectionId),Number(T.Query_data.QuestionID))})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"Value_for_the_page",value:function(){if(this.AttemptedSection.length>0)for(var T=0;T<=this.AttemptedSection.length;T++)this.AttemptedSection[T].SECTION_ID===this.Query_data.SectionId&&(this.Attempted_id=this.AttemptedSection[T].ATTEMPTED_ID,this.Section_id=this.AttemptedSection[T].SECTION_ID,this.Section_Name=this.AttemptedSection[T].SECTION_NAME,this.Total_Question=this.AttemptedSection[T].T_QUESTION_COUNT)}},{key:"value_for_the_page_question",value:function(){if(this.AttemptedQuestionBySQL.length>0)for(var T=0;T<=this.AttemptedQuestionBySQL.length;T++)console.log("in the function value_for_the_page_question"),console.log(this.AttemptedQuestionBySQL[T].QUESTION_ID),console.log(this.AttemptedQuestionBySQL[T].QUESTION_NAME),this.AttemptedQuestionBySQL[T].QUESTION_ID===this.Query_data.QuestionID&&(this.Question_id=this.AttemptedQuestionBySQL[T].QUESTION_ID,this.Question_order=this.AttemptedQuestionBySQL[T].QUESTION_ORDER,this.Question_name=this.AttemptedQuestionBySQL[T].QUESTION_NAME,this.Question_type=this.AttemptedQuestionBySQL[T].QUESTION_TYPE,this.Question_Marks=this.AttemptedQuestionBySQL[T].QUESTION_MARKS);"Yes/No"==this.Question_type||"Choice"==this.Question_type?this.fetchQuestionChoice(Number(this.Query_data.AuditId),Number(this.Section_id),Number(this.Question_id)):"Standard"==this.Question_type&&this.fetchAttemptedQuestionStandardBySQL(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Question_id))}},{key:"fetchAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.S_QUESTION_COUNT>0",[]).then((function(T){if(D.AttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedSection.push(T.rows.item(E));console.log("section in choice"),console.log(D.AttemptedSection)}})).catch((function(T){console.log("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionBySQL",value:function(T,E,I,D){var t=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+" ORDER BY QUESTION_ORDER",[]).then((function(T){if(t.AttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)t.AttemptedQuestionBySQL.push(T.rows.item(E)),t.AttemptedQuestionBySQL[E].QUESTION_ID===t.Query_data.QuestionID&&(t.Question_id=t.AttemptedQuestionBySQL[E].QUESTION_ID,t.Question_order=t.AttemptedQuestionBySQL[E].QUESTION_ORDER,t.Question_name=t.AttemptedQuestionBySQL[E].QUESTION_NAME,t.Question_type=t.AttemptedQuestionBySQL[E].QUESTION_TYPE,t.Question_Marks=t.AttemptedQuestionBySQL[E].QUESTION_MARKS);console.log("question in choice Value_for_the_page"),console.log(t.AttemptedQuestionBySQL),t.Value_for_the_page(),t.value_for_the_page_question()}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionChoiceBySQL",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.QUESTION_ID="+I,[]).then((function(T){if(D.AttemptedQuestionChoiceBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedQuestionChoiceBySQL.push(T.rows.item(E));console.log("choice of the  question"),console.log(D.AttemptedQuestionChoiceBySQL)}})).catch((function(T){alert("error "+JSON.stringify(T))})),console.log("akshay")}},{key:"fetchAttemptedAuditPrevQuestionBySQL",value:function(T,E,I,D){var t=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND SECTION_ID="+E+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ID="+D+"))",[]).then((function(T){if(t.AttemptedAuditPrevQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)t.AttemptedAuditPrevQuestionBySQL.push(T.rows.item(E));return t.AttemptedAuditPrevQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchPrevAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+"))",[]).then((function(T){if(D.PrevAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.PrevAttemptedSection.push(T.rows.item(E));return D.PrevAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedAuditNextQuestionBySQL",value:function(T,E,I,D){var t=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND SECTION_ID="+E+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ID="+D+"))",[]).then((function(T){if(t.AttemptedAuditNextQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)t.AttemptedAuditNextQuestionBySQL.push(T.rows.item(E));return t.AttemptedAuditNextQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchNextAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+")",[]).then((function(T){if(D.NextAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.NextAttemptedSection.push(T.rows.item(E));return D.NextAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionById",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionById=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionById.push(T.rows.item(E));return D.QuestionById}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionBased",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+T+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionBased=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionBased.push(T.rows.item(E));return D.QuestionBased}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionBasedValues",value:function(T,E,I,D){var t=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+" AND QUESTION_ID="+I+" AND STANDARD_ID="+D,[]).then((function(T){if(t.QuestionBasedValues=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)t.QuestionBasedValues.push(T.rows.item(E));return t.QuestionBasedValues}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionChoice",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+T+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionChoice=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionChoice.push(T.rows.item(E));console.log("choice value of this question"),console.log(D.QuestionChoice)}})).catch((function(T){console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))}))}},{key:"fetchTopAttemptedSection",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then((function(T){if(I.TopAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.QuestionChoice.push(T.rows.item(E));return I.QuestionChoice}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchSLAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+I+" AND PARENT_SECTION_ID="+E,[]).then((function(T){if(D.SLAttemptedSection_check=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection_check.push(T.rows.item(E));return D.SLAttemptedSection_check}})).catch((function(T){alert("error "+JSON.stringify(T))})),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchGenericImageNotPushedAttemptedQuestionBySQL",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then((function(T){if(I.GenericImageNotPushedAttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.GenericImageNotPushedAttemptedQuestionBySQL.push(T.rows.item(E));return I.GenericImageNotPushedAttemptedQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"DeleteGenericImages",value:function(T,E){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+E,[])}},{key:"SaveGenericImage",value:function(T,E,I,D,t,e){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+T+","+I+",'"+D+"','"+E+"','"+t+"','No')",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"UpdateAuditFindings",value:function(T,E,I,D){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+D.replace("'","''")+"' WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND UNIQUE_ID='"+E+"'",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"GetAuditFindings",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND UNIQUE_ID='"+E+"'",[]).then((function(T){if(D.AuditFindings=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AuditFindings.push(T.rows.item(E));return D.AuditFindings}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"createQStandard",value:function(T,E,I,D,t,e,A,S,_,n,N){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+T+","+E+","+I+","+D+",'"+t+"','"+e+"','"+A+"','"+S+"','"+_+"','"+n+"','"+N+"')",[]).then((function(){console.log("data inserted")})).catch((function(T){console.log("error "+JSON.stringify(T))}))}},{key:"createQStandardPreDefined",value:function(T,E,I,D,t,e){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+T+","+E+","+I+","+D+","+t+",'"+e+"')",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionStandardBySQL",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND QUESTION_ID="+I,[]).then((function(T){if(D.AttemptedQuestionStandardBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedQuestionStandardBySQL.push(T.rows.item(E));console.log("standard for this qustion"),console.log(D.AttemptedQuestionStandardBySQL),D.fetchAttemptedQuestionStandardValueBySQL(Number(D.Attempted_id),Number(D.Query_data.AuditId),Number(D.Question_id),Number(D.AttemptedQuestionStandardBySQL[0].STANDARD_ID))}})).catch((function(T){console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionStandardValueBySQL",value:function(T,E,I,D){var t=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND QUESTION_ID="+I+" AND STANDARD_ID="+D,[]).then((function(T){if(t.AttemptedQuestionStandardValueBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)t.AttemptedQuestionStandardValueBySQL.push(T.rows.item(E));console.log("Attempted Question Standard Value"),console.log("AttemptedQuestionStandardValueBySQL")}})).catch((function(T){console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))}))}}]),T}(),o=I("iInd"),i=D.ob({encapsulation:0,styles:[[""]],data:{}});function s(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,12,"ion-radio-group",[["value","0"]],null,[[null,"ionBlur"],[null,"ionChange"]],(function(T,E,I){var t=!0;return"ionBlur"===E&&(t=!1!==D.Cb(T,3)._handleBlurEvent(I.target)&&t),"ionChange"===E&&(t=!1!==D.Cb(T,3)._handleChangeEvent(I.target)&&t),t}),A.z,A.l)),D.Db(5120,null,S.h,(function(T){return[T]}),[_.Fb]),D.pb(2,49152,null,0,_.V,[D.h,D.k,D.x],{value:[0,"value"]},null),D.pb(3,16384,null,0,_.Fb,[D.k],null,null),(T()(),D.qb(4,0,null,0,8,"ion-item",[],null,null,null,A.w,A.h)),D.pb(5,49152,null,0,_.E,[D.h,D.k,D.x],null,null),(T()(),D.qb(6,0,null,0,2,"ion-label",[],null,null,null,A.x,A.i)),D.pb(7,49152,null,0,_.K,[D.h,D.k,D.x],null,null),(T()(),D.Gb(8,0,["",""])),(T()(),D.qb(9,0,null,0,3,"ion-radio",[["color","tertiary"],["slot","start"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(T,E,I){var t=!0;return"ionBlur"===E&&(t=!1!==D.Cb(T,12)._handleBlurEvent(I.target)&&t),"ionSelect"===E&&(t=!1!==D.Cb(T,12)._handleIonSelect(I.target)&&t),t}),A.A,A.k)),D.Db(5120,null,S.h,(function(T){return[T]}),[_.Eb]),D.pb(11,49152,null,0,_.U,[D.h,D.k,D.x],{color:[0,"color"],value:[1,"value"]},null),D.pb(12,16384,null,0,_.Eb,[D.k],null,null)],(function(T,E){T(E,2,0,"0"),T(E,11,0,"tertiary",D.ub(1,"",E.context.$implicit.POINTS,""))}),(function(T,E){T(E,8,0,E.context.$implicit.CHOICE_TEXT)}))}function r(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,13,"ion-header",[],null,null,null,A.u,A.f)),D.pb(1,49152,null,0,_.y,[D.h,D.k,D.x],null,null),(T()(),D.qb(2,0,null,0,11,"div",[["style","background-color: black; align-content: center;"]],null,null,null,null,null)),(T()(),D.qb(3,0,null,null,10,"table",[["style","margin-left: 10px; margin-top: 5px; margin-bottom: 2px;"]],null,null,null,null,null)),(T()(),D.qb(4,0,null,null,9,"tbody",[],null,null,null,null,null)),(T()(),D.qb(5,0,null,null,8,"tr",[],null,null,null,null,null)),(T()(),D.qb(6,0,null,null,2,"td",[],null,null,null,null,null)),(T()(),D.qb(7,0,null,null,1,"span",[["style","margin-top:20px; margin-left: 5px; margin-top: 1px;"]],null,null,null,null,null)),(T()(),D.qb(8,0,null,null,0,"img",[["height","35"],["src","../../assets/tablez.png"],["width","35"]],null,null,null,null,null)),(T()(),D.qb(9,0,null,null,1,"td",[],null,null,null,null,null)),(T()(),D.Gb(-1,null,["\xa0"])),(T()(),D.qb(11,0,null,null,2,"td",[],null,null,null,null,null)),(T()(),D.qb(12,0,null,null,1,"span",[["style","color: white; margin-top: 1px;"]],null,null,null,null,null)),(T()(),D.Gb(-1,null,["Audit Choice Question"])),(T()(),D.qb(14,0,null,null,22,"ion-content",[],null,null,null,A.r,A.c)),D.pb(15,49152,null,0,_.r,[D.h,D.k,D.x],null,null),(T()(),D.qb(16,0,null,0,4,"div",[],null,null,null,null,null)),(T()(),D.qb(17,0,null,null,1,"h3",[["style","color: cornflowerblue;"]],null,null,null,null,null)),(T()(),D.Gb(18,null,["",""])),(T()(),D.qb(19,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(20,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(21,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),D.Gb(22,null,["Question "," of ",""])),(T()(),D.qb(23,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(24,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(25,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),D.Gb(26,null,[" Points: ","\xa0 \xa0\xa0\xa0 Score:"])),(T()(),D.qb(27,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(28,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),D.qb(29,0,null,0,2,"div",[],null,null,null,null,null)),(T()(),D.qb(30,0,null,null,1,"h4",[],null,null,null,null,null)),(T()(),D.Gb(31,null,[""," "])),(T()(),D.qb(32,0,null,0,4,"div",[],null,null,null,null,null)),(T()(),D.qb(33,0,null,null,3,"ion-list",[],null,null,null,A.y,A.j)),D.pb(34,49152,null,0,_.L,[D.h,D.k,D.x],null,null),(T()(),D.fb(16777216,null,0,1,null,s)),D.pb(36,278528,null,0,n.h,[D.L,D.I,D.q],{ngForOf:[0,"ngForOf"]},null)],(function(T,E){T(E,36,0,E.component.QuestionChoice)}),(function(T,E){var I=E.component;T(E,18,0,I.Section_Name),T(E,22,0,I.Question_order,I.Total_Question),T(E,26,0,I.Question_Marks),T(E,31,0,I.Question_name)}))}var U=D.mb("app-audit-choice-question",u,(function(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,1,"app-audit-choice-question",[],null,null,null,r,i)),D.pb(1,114688,null,0,u,[O.a,o.m,l.a,_.Cb,N.a,o.a],null,null)],(function(T,E){T(E,1,0)}),null)}),{},{},[]),C=function T(){_classCallCheck(this,T)};I.d(E,"AuditChoiceQuestionPageModuleNgFactory",(function(){return a}));var a=D.nb(t,[],(function(T){return D.zb([D.Ab(512,D.j,D.Y,[[8,[e.a,U]],[3,D.j],D.v]),D.Ab(4608,n.k,n.j,[D.s,[2,n.q]]),D.Ab(4608,S.n,S.n,[]),D.Ab(4608,_.a,_.a,[D.x,D.g]),D.Ab(4608,_.Ab,_.Ab,[_.a,D.j,D.p]),D.Ab(4608,_.Db,_.Db,[_.a,D.j,D.p]),D.Ab(1073742336,n.b,n.b,[]),D.Ab(1073742336,S.m,S.m,[]),D.Ab(1073742336,S.g,S.g,[]),D.Ab(1073742336,_.yb,_.yb,[]),D.Ab(1073742336,o.n,o.n,[[2,o.s],[2,o.m]]),D.Ab(1073742336,C,C,[]),D.Ab(1073742336,t,t,[]),D.Ab(1024,o.k,(function(){return[[{path:"",component:u}]]}),[])])}))}}]);