function _defineProperties(T,E){for(var I=0;I<E.length;I++){var D=E[I];D.enumerable=D.enumerable||!1,D.configurable=!0,"value"in D&&(D.writable=!0),Object.defineProperty(T,D.key,D)}}function _createClass(T,E,I){return E&&_defineProperties(T.prototype,E),I&&_defineProperties(T,I),T}function _classCallCheck(T,E){if(!(T instanceof E))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"+plB":function(T,E,I){"use strict";I.r(E);var D=I("8Y7J"),A=function T(){_classCallCheck(this,T)},t=I("pMnS"),S=I("SVse"),_=I("MKJQ"),e=I("sZkV"),N=I("6GXZ"),n=I("xoVG"),O=I("kwUn"),o=function(){function T(E,I,D,A,t,S){var _=this;_classCallCheck(this,T),this.userService=E,this.router=I,this.network=D,this.platform=A,this.sqlite=t,this.activatedRoute=S,this.database_name="AUDIT_DB.db",this.show_Section=!1,this.show_Question=!1,this.activatedRoute.queryParams.subscribe((function(T){console.log(JSON.parse(T.value)),_.Query_data=JSON.parse(T.value),console.log("list page"),console.log(_.Query_data.AttemptedId)})),this.platform.ready().then((function(){_.createDB()})).catch((function(T){console.log(T)}))}return _createClass(T,[{key:"ngOnInit",value:function(){}},{key:"createDB",value:function(){var T=this;console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then((function(E){T.databaseObj=E,T.fetchAttemptedAuditForStore(Number(T.Query_data.AuditId),String(T.Query_data.Storeid))})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedAuditForStore",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT * from AUDIT_ATTEMPTED_TB where AUDIT_ID="+T+" AND STR_CODE='"+E+"' ORDER BY ATTEMPTED_ID DESC",[]).then((function(T){if(I.AttemptedAuditForStore=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.AttemptedAuditForStore.push(T.rows.item(E));console.log(I.AttemptedAuditForStore)}})).catch((function(T){console.log("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedSection",value:function(T,E){var I=this;this.show_Section=!0,this.databaseObj.executeSql("SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.S_QUESTION_COUNT>0",[]).then((function(T){if(I.AttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.AttemptedSection.push(T.rows.item(E));console.log(I.AttemptedSection)}})).catch((function(T){console.log("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedOpenAuditByUser",value:function(T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='"+T+"' AND AUDIT_STATUS='Open'",[]).then((function(T){if(E.AttemptedOpenAuditByUser=[],console.log(T),T.rows.length>0){for(var I=0;I<T.rows.length;I++)E.AttemptedOpenAuditByUser.push(T.rows.item(I));return E.AttemptedOpenAuditByUser}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedAuditBySQL",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E,[]).then((function(T){if(I.AttemptedAuditBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.AttemptedAuditBySQL.push(T.rows.item(E));return I.AttemptedAuditBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedSectionQuestionBySQL",value:function(T,E,I,D){var A=this;if("Audit"==T?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+E+" AND A.AUDIT_ID="+I,[]).then((function(T){if(A.AttemptedSectionQuestionBySQL=[],console.log(T),T.rows.length>0)for(var E=0;E<T.rows.length;E++)A.AttemptedSectionQuestionBySQL.push(T.rows.item(E))})).catch((function(T){alert("error "+JSON.stringify(T))})):"Section"==T?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+E+" AND A.AUDIT_ID="+I+" AND A.SECTION_ID="+D,[]).then((function(T){if(A.AttemptedSectionQuestionBySQL=[],console.log(T),T.rows.length>0)for(var E=0;E<T.rows.length;E++)A.AttemptedSectionQuestionBySQL.push(T.rows.item(E))})).catch((function(T){alert("error "+JSON.stringify(T))})):"Question"==T?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+E+" AND A.AUDIT_ID="+I+" AND B.QUESTION_ID="+D,[]).then((function(T){if(A.AttemptedSectionQuestionBySQL=[],console.log(T),T.rows.length>0)for(var E=0;E<T.rows.length;E++)A.AttemptedSectionQuestionBySQL.push(T.rows.item(E))})).catch((function(T){alert("error "+JSON.stringify(T))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID="+E+" AND A.AUDIT_ID="+I+" AND 1=2",[]).then((function(T){if(A.AttemptedSectionQuestionBySQL=[],console.log(T),T.rows.length>0)for(var E=0;E<T.rows.length;E++)A.AttemptedSectionQuestionBySQL.push(T.rows.item(E))})).catch((function(T){alert("error "+JSON.stringify(T))})),this.AttemptedSectionQuestionBySQL.length>0)return this.AttemptedSectionQuestionBySQL}},{key:"fetchAttemptedQuestionBySQL",value:function(T,E,I){var D=this;this.show_Question=!0,console.log(T),console.log("Entered in fetched question"),this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+" ORDER BY QUESTION_ORDER",[]).then((function(T){if(D.AttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedQuestionBySQL.push(T.rows.item(E));return D.AttemptedQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionChoiceBySQL",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.QUESTION_ID="+I,[]).then((function(T){if(D.AttemptedQuestionChoiceBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedQuestionChoiceBySQL.push(T.rows.item(E));return D.AttemptedQuestionChoiceBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedAuditPrevQuestionBySQL",value:function(T,E,I,D){var A=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND SECTION_ID="+E+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ID="+D+"))",[]).then((function(T){if(A.AttemptedAuditPrevQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)A.AttemptedAuditPrevQuestionBySQL.push(T.rows.item(E));return A.AttemptedAuditPrevQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchPrevAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+"))",[]).then((function(T){if(D.PrevAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.PrevAttemptedSection.push(T.rows.item(E));return D.PrevAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedAuditNextQuestionBySQL",value:function(T,E,I,D){var A=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND SECTION_ID="+E+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+E+" AND AUDIT_ID="+I+" AND QUESTION_ID="+D+"))",[]).then((function(T){if(A.AttemptedAuditNextQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)A.AttemptedAuditNextQuestionBySQL.push(T.rows.item(E));return A.AttemptedAuditNextQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchNextAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+E+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+I+")",[]).then((function(T){if(D.NextAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.NextAttemptedSection.push(T.rows.item(E));return D.NextAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionById",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionById=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionById.push(T.rows.item(E));return D.QuestionById}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionBased",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+T+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionBased=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionBased.push(T.rows.item(E));return D.QuestionBased}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionBasedValues",value:function(T,E,I,D){var A=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+E+" AND QUESTION_ID="+I+" AND STANDARD_ID="+D,[]).then((function(T){if(A.QuestionBasedValues=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)A.QuestionBasedValues.push(T.rows.item(E));return A.QuestionBasedValues}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchQuestionChoice",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+T+" AND QUESTION_ID="+I,[]).then((function(T){if(D.QuestionBasedValues=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.QuestionChoice.push(T.rows.item(E));return D.QuestionChoice}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchTopAttemptedSection",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then((function(T){if(I.TopAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.QuestionChoice.push(T.rows.item(E));return I.QuestionChoice}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchSLAttemptedSection",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+I+" AND PARENT_SECTION_ID="+E,[]).then((function(T){if(D.SLAttemptedSection_check=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection_check.push(T.rows.item(E));return D.SLAttemptedSection_check}})).catch((function(T){alert("error "+JSON.stringify(T))})),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+E+" ORDER BY A.SECTION_ORDER",[]).then((function(T){if(D.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.SLAttemptedSection.push(T.rows.item(E));return D.SLAttemptedSection}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchGenericImageNotPushedAttemptedQuestionBySQL",value:function(T,E){var I=this;this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then((function(T){if(I.GenericImageNotPushedAttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)I.GenericImageNotPushedAttemptedQuestionBySQL.push(T.rows.item(E));return I.GenericImageNotPushedAttemptedQuestionBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"DeleteGenericImages",value:function(T,E){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+E,[])}},{key:"SaveGenericImage",value:function(T,E,I,D,A,t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+T+","+I+",'"+D+"','"+E+"','"+A+"','No')",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"UpdateAuditFindings",value:function(T,E,I,D){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+D.replace("'","''")+"' WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND UNIQUE_ID='"+E+"'",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"GetAuditFindings",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+I+" AND UNIQUE_ID='"+E+"'",[]).then((function(T){if(D.AuditFindings=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AuditFindings.push(T.rows.item(E));return D.AuditFindings}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"createQStandard",value:function(T,E,I,D,A,t,S,_,e,N,n){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+T+","+E+","+I+","+D+",'"+A+"','"+t+"','"+S+"','"+_+"','"+e+"','"+N+"','"+n+"')",[]).then((function(){console.log("data inserted")})).catch((function(T){console.log("error "+JSON.stringify(T))}))}},{key:"createQStandardPreDefined",value:function(T,E,I,D,A,t){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+T+","+E+","+I+","+D+","+A+",'"+t+"')",[]).then((function(){})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionStandardBySQL",value:function(T,E,I){var D=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND QUESTION_ID="+I,[]).then((function(T){if(D.AttemptedQuestionStandardBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)D.AttemptedQuestionStandardBySQL.push(T.rows.item(E));return D.AttemptedQuestionStandardBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}},{key:"fetchAttemptedQuestionStandardValueBySQL",value:function(T,E,I,D){var A=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND QUESTION_ID="+I+" AND STANDARD_ID="+D,[]).then((function(T){if(A.AttemptedQuestionStandardValueBySQL=[],console.log(T),T.rows.length>0){for(var E=0;E<T.rows.length;E++)A.AttemptedQuestionStandardValueBySQL.push(T.rows.item(E));return A.AttemptedQuestionStandardValueBySQL}})).catch((function(T){alert("error "+JSON.stringify(T))}))}}]),T}(),i=I("iInd"),U=D.ob({encapsulation:0,styles:[[""]],data:{}});function l(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,2,"div",[],null,null,null,null,null)),(T()(),D.qb(1,0,null,null,1,"div",[],null,null,null,null,null)),(T()(),D.Gb(2,null,["Question: "," "]))],null,(function(T,E){T(E,2,0,E.context.$implicit.QUESTION_NAME)}))}function M(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,2,"div",[],null,null,null,null,null)),(T()(),D.fb(16777216,null,null,1,null,l)),D.pb(2,278528,null,0,S.h,[D.L,D.I,D.q],{ngForOf:[0,"ngForOf"]},null)],(function(T,E){T(E,2,0,E.component.AttemptedQuestionBySQL)}),null)}function u(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,4,"div",[],null,null,null,null,null)),(T()(),D.qb(1,0,null,null,3,"div",[],null,[[null,"click"]],(function(T,E,I){var D=!0;return"click"===E&&(D=!1!==T.component.fetchAttemptedQuestionBySQL(T.context.$implicit.ATTEMPTED_ID,T.context.$implicit.AUDIT_ID,T.context.$implicit.SECTION_ID)&&D),D}),null,null)),(T()(),D.Gb(2,null,["Section: ",": "," "])),(T()(),D.fb(16777216,null,null,1,null,M)),D.pb(4,16384,null,0,S.i,[D.L,D.I],{ngIf:[0,"ngIf"]},null)],(function(T,E){T(E,4,0,E.component.show_Question)}),(function(T,E){T(E,2,0,E.context.$implicit.SECTION_NAME,E.context.$implicit.SECTION_DESC)}))}function r(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,2,"div",[],null,null,null,null,null)),(T()(),D.fb(16777216,null,null,1,null,u)),D.pb(2,278528,null,0,S.h,[D.L,D.I,D.q],{ngForOf:[0,"ngForOf"]},null)],(function(T,E){T(E,2,0,E.component.AttemptedSection)}),null)}function C(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,4,"div",[],null,null,null,null,null)),(T()(),D.qb(1,0,null,null,3,"div",[],null,[[null,"click"]],(function(T,E,I){var D=!0;return"click"===E&&(D=!1!==T.component.fetchAttemptedSection(T.context.$implicit.ATTEMPTED_ID,T.context.$implicit.AUDIT_ID)&&D),D}),null,null)),(T()(),D.Gb(2,null,["Audit: "," "])),(T()(),D.fb(16777216,null,null,1,null,r)),D.pb(4,16384,null,0,S.i,[D.L,D.I],{ngIf:[0,"ngIf"]},null)],(function(T,E){T(E,4,0,E.component.show_Section)}),(function(T,E){T(E,2,0,E.context.$implicit.AUDIT_NAME)}))}function s(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,6,"ion-header",[],null,null,null,_.s,_.f)),D.pb(1,49152,null,0,e.y,[D.h,D.k,D.x],null,null),(T()(),D.qb(2,0,null,0,4,"ion-toolbar",[],null,null,null,_.z,_.m)),D.pb(3,49152,null,0,e.wb,[D.h,D.k,D.x],null,null),(T()(),D.qb(4,0,null,0,2,"ion-title",[],null,null,null,_.y,_.l)),D.pb(5,49152,null,0,e.ub,[D.h,D.k,D.x],null,null),(T()(),D.Gb(-1,0,["ListAudit"])),(T()(),D.qb(7,0,null,null,3,"ion-content",[],null,null,null,_.p,_.c)),D.pb(8,49152,null,0,e.r,[D.h,D.k,D.x],null,null),(T()(),D.fb(16777216,null,0,1,null,C)),D.pb(10,278528,null,0,S.h,[D.L,D.I,D.q],{ngForOf:[0,"ngForOf"]},null)],(function(T,E){T(E,10,0,E.component.AttemptedAuditForStore)}),null)}var R=D.mb("app-list-audit",o,(function(T){return D.Hb(0,[(T()(),D.qb(0,0,null,null,1,"app-list-audit",[],null,null,null,s,U)),D.pb(1,114688,null,0,o,[O.a,i.m,n.a,e.Cb,N.a,i.a],null,null)],(function(T,E){T(E,1,0)}),null)}),{},{},[]),c=I("s7LF"),a=function T(){_classCallCheck(this,T)};I.d(E,"ListAuditPageModuleNgFactory",(function(){return P}));var P=D.nb(A,[],(function(T){return D.zb([D.Ab(512,D.j,D.Y,[[8,[t.a,R]],[3,D.j],D.v]),D.Ab(4608,S.k,S.j,[D.s,[2,S.q]]),D.Ab(4608,c.n,c.n,[]),D.Ab(4608,e.a,e.a,[D.x,D.g]),D.Ab(4608,e.Ab,e.Ab,[e.a,D.j,D.p]),D.Ab(4608,e.Db,e.Db,[e.a,D.j,D.p]),D.Ab(1073742336,S.b,S.b,[]),D.Ab(1073742336,c.m,c.m,[]),D.Ab(1073742336,c.g,c.g,[]),D.Ab(1073742336,e.yb,e.yb,[]),D.Ab(1073742336,i.n,i.n,[[2,i.s],[2,i.m]]),D.Ab(1073742336,a,a,[]),D.Ab(1073742336,A,A,[]),D.Ab(1024,i.k,(function(){return[[{path:"",component:o}]]}),[])])}))}}]);