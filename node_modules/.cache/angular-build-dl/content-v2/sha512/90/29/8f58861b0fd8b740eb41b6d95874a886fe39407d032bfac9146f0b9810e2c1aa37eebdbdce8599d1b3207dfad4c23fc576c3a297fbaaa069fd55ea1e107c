function _defineProperties(t,e){for(var n=0;n<e.length;n++){var T=e[n];T.enumerable=T.enumerable||!1,T.configurable=!0,"value"in T&&(T.writable=!0),Object.defineProperty(t,T.key,T)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{mWic:function(t,e,n){"use strict";n.r(e);var T=n("8Y7J"),E=function t(){_classCallCheck(this,t)},I=n("pMnS"),o=n("MKJQ"),D=n("sZkV"),l=n("SVse"),i=n("mrSG"),A=n("6GXZ"),S=n("9mtz"),_=n("kwUn"),r=n("ZNON"),u=n("b6o4"),N=n("u9AK"),s=function(){function t(e,n,T,E,I,o,D,l){var i=this;_classCallCheck(this,t),this.platform=e,this.sqlite=n,this.userService=T,this.router=E,this.networkServiceService=I,this.screenOrientation=o,this.ionLoader=D,this.activatedRoute=l,this.database_name="AUDIT_DB.db",this.showSpinner=!1,this.activatedRoute.queryParams.subscribe((function(t){i.setPortrait()})),this.store=new S.a,this.platform.ready().then((function(){i.setPortrait(),i.createDB()})).catch((function(t){console.log(t)}))}return _createClass(t,[{key:"showLoader",value:function(){var t=this;this.ionLoader.showLoader(),setTimeout((function(){t.hideLoader()}),128e3)}},{key:"hideLoader",value:function(){this.ionLoader.hideLoader(),window.location.reload()}},{key:"setPortrait",value:function(){this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT)}},{key:"unlockScreen",value:function(){}},{key:"checkconnection_serve",value:function(){this.check_status=this.networkServiceService.getCurrentNetworkStatus()}},{key:"logoff",value:function(){this.router.navigate(["home"])}},{key:"GotoNewAudit",value:function(){this.router.navigate(["new-audit"])}},{key:"GotoCloseAudit",value:function(){this.router.navigate(["close-audit"])}},{key:"GotoOpenAudit",value:function(){this.router.navigate(["open-audit"])}},{key:"createDB",value:function(){var t=this;console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then((function(e){t.databaseObj=e,t.getRows(),t.CreateAllTables(),t.create_storetable(),t.fetchAttemptedOpenAuditCount()})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"getRows",value:function(){var t=this;this.databaseObj.executeSql("SELECT * FROM USER_TB",[]).then((function(e){if(t.row_data=[],e.rows.length>0)for(var n=0;n<e.rows.length;n++)t.row_data.push(e.rows.item(n)),console.log(t.row_data[n].toString())})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ngOnInit",value:function(){this.setPortrait()}},{key:"Get_Sync",value:function(){return i.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.checkconnection_serve(),this.fetchAttemptedOpenAuditCount(),console.log("Total Count AttemptedOpen AuditCount"),console.log(this.Count_AttemptedOpenAuditCount),console.log(this.Count_AttemptedOpenAuditCount[0].CNT),0===this.Count_AttemptedOpenAuditCount[0].CNT?0===this.check_status?(this.get_all_store_api(),this.Delelete_All_data(),this.Get_AllAudit(),this.showLoader()):1===this.check_status&&alert("Please Check Connection"):alert("Please Close Open Audit");case 1:case"end":return t.stop()}}),t,this)})))}},{key:"Get_AllAudit",value:function(){var t=this,e=this.row_data[0].EMP_ID.toString();console.log("auditor id: "+e);try{this.userService.Get_Audit_By_Auditor(e).subscribe((function(e){if(console.log(e),t.yser_ss=e,console.log(t.yser_ss.Audits[0].AuditName),console.log(t.yser_ss.Audits[0].AuditId),t.yser_ss.Audits.length>0)for(var n=t.yser_ss,T=0;T<=t.yser_ss.Audits.length-1;T++)console.log(t.yser_ss),t.Get_all_Audit_with_question(n.Audits[T].AuditId)}))}catch(n){alert("Please Check Connection")}}},{key:"Get_all_Audit_with_question",value:function(t){var e=this;try{return this.userService.Get_Audit_By_Id(t).subscribe((function(t){e.auditResponce=t,e.datafrom_server()}))}catch(n){alert("Please Check Connection")}}},{key:"datafrom_server",value:function(){if(console.log("NEW AUDIT iNSERTION"),console.log(this.auditResponce),console.log(this.auditResponce.StatusFl),this.createAudit(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.AuditName,this.auditResponce.Audt.AuditTypeId.toString(),this.auditResponce.Audt.AuditType,this.auditResponce.Audt.AuditStage,this.auditResponce.Audt.AuditPoints.toString(),this.auditResponce.Audt.QuestionCount.toString()),this.auditResponce.Audt.Sections.length>0)for(var t=0;t<=this.auditResponce.Audt.Sections.length-1;t++)if(this.createSection(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].ParentSectionId.toString(),this.auditResponce.Audt.Sections[t].SectionName,this.auditResponce.Audt.Sections[t].SectionDesc,this.auditResponce.Audt.Sections[t].SectionOrder.toString(),this.auditResponce.Audt.Sections[t].SectionPoint.toString(),this.auditResponce.Audt.Sections[t].TQuestionCount.toString(),this.auditResponce.Audt.Sections[t].QuestionCount.toString(),this.auditResponce.Audt.Sections[t].CQuestionCount.toString()),this.auditResponce.Audt.Sections[t].Questions.length>0)for(var e=0;e<=this.auditResponce.Audt.Sections[t].Questions.length-1;e++){if(this.createQuestion(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionTypeId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionName.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionType,this.auditResponce.Audt.Sections[t].Questions[e].QuestionOrder.toString(),this.auditResponce.Audt.Sections[t].Questions[e].IsNC,this.auditResponce.Audt.Sections[t].Questions[e].QuestionPoint.toString()),console.log("insering question"),console.log(this.auditResponce.Audt.Sections[t].Questions[e].QuestionName),console.log(this.auditResponce.Audt.Sections[t].Questions[e].QuestionType),"Choice"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[e].Choice.length>0)for(var n=0;n<this.auditResponce.Audt.Sections[t].Questions[e].Choice.length-1;n++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[n].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[n].Choice,this.auditResponce.Audt.Sections[t].Questions[e].Choice[n].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[n].Comments.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[n].IsNegative);if("Yes/No"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[e].YesNo.length>0)for(var T=0;T<this.auditResponce.Audt.Sections[t].Questions[e].YesNo.length-1;T++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[T].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[T].Choice,this.auditResponce.Audt.Sections[t].Questions[e].YesNo[T].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[T].Comments,this.auditResponce.Audt.Sections[t].Questions[e].YesNo[T].IsNegative);if("Standard"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&0!=this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id&&(this.createQStandard(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Type,this.auditResponce.Audt.Sections[t].Questions[e].Standard.MinRange,this.auditResponce.Audt.Sections[t].Questions[e].Standard.MaxRange,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Fix,this.auditResponce.Audt.Sections[t].Questions[e].Standard.UoM,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Field,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Multiple),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues.length>0))for(var E=0;E<this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues.length-1;E++)this.createQStandardPreDefined(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues[E].Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues[E].Name.toString())}}},{key:"CreateAllTables",value:function(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,AUDIT_TYPE_ID integer not null,AUDIT_TYPE text not null,AUDIT_STAGE text not null,AUDIT_PT integer not null,QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table Audit Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS SECTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS_REQUIRED text not null,IS_NEGATIVE text not null);",[]).then((function(){console.log("Table QUESTION_CHOICE_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_STANDARD_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,STANDARD_TYPE text not null,MIN_RANGE text,MAX_RANGE text,FIX text,UOM text,FIELD_LABEL text,IS_PREDEFINED text);",[]).then((function(){console.log("Table QUESTION_STANDARD_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_STANDARD_PREDEFINED_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_OPTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,SCORABLE_FL text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_RANGE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS_REQUIRED text not null);",[]).then((function(){console.log("Table QUESTION_STANDARD_PREDEFINED_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_FIELDS_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,FIELD_NAME text not null,FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null);",[]).then((function(){console.log("Table QUESTION_FIELDS_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_VALUE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,VALUE_ID not null,VALUE_NAME text not null,DEFAULT_VALUE text not null);",[]).then((function(){console.log("Table section Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,CHOICE_ID not null,CHOICE_TEXT text not null,CHOICE_PT integer not null);",[]).then((function(){console.log("Table FIELDS_VALUE_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_TB(ATTEMPTED_ID integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,STR_CODE text not null,STR_NAME text not null,USER_ID text not null,STR_MANAGER text not null,AUDIT_DT text not null,AUDIT_STATUS text not null,UNIQUE_ID text not null,AUDIT_FINDINGS text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,QUESTION_ANSWERED integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_SECTION Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null,MARKS_SCORED integer not null,QUESTION_STATUS text not null,QUESTION_COMMENT text not null,IMAGE_NAME text not null,IS_INCLUDED text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_CHOICE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,FIELD_VALUE text,COMMENTS text,CHOICE_VALUE text,POINTS integer not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null,VALUE_OBSERVED text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_OPTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,OPTION_TEXT_VALUE text not null,POINTS integer not null,ISSCORABLE text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_OPTION Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_RANGE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTIONS_RANGE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_RECIVING_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,UNLOAD_START_TIME text,UNLOAD_END_TIME text,VEHICLE_NO text,TEMPERATURE text);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_RECIVING_QUESTIONS Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,OTHER_FIELD_ID integer not null,OTHER_FIELD_NAME text not null,OTHER_FIELD_TYPE text not null,OTHER_FIELD_ISKEY text not null,OTHER_FIELD_VALUE_ID integer not null,OTHER_FIELD_VALUE text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE Table IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,CHOICE_FIELD_ID integer not null,CHOIC_FIELD_NAME text not null,CHOICE_FIELD_TYPE text not null,CHOICE_FIELD_ISKEY text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,CHOICE_PT integer not null,CHECKED Text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ERROR_LOG(ID integer primary key autoincrement,SCREEN_NAME text not null,FUNCTION_NAME text not null,EXCEPTION text not null);",[]).then((function(){console.log("Table AUDIT_ERROR_LOG Created!")})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,STR_CODE text not null,UNIQUE_ID text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then((function(){console.log("Table AUDIT_ATTEMPTED_IMAGES_TB Created!")})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"create_storetable",value:function(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS STORE_TB(_id integer primary key autoincrement,STR_CODE text not null,STR_NAME text not null);",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"get_all_store_api",value:function(){var t=this,e=this.row_data[0].BU_ID.toString(),n="00"+this.row_data[0].EMP_ID.toString();this.store.StrCode=e,this.store.StrName=n,console.log(this.store),this.userService.Get_All_Store(this.store).subscribe((function(e){if(t.storeResponse=e,console.log(t.storeResponse),t.storeResponse.Stores.length>0)for(var n=0;n<=t.storeResponse.Stores.length-1;n++)console.log(t.yser_ss),t.insert_store(t.storeResponse.Stores[n].StrCode,t.storeResponse.Stores[n].StrName)}))}},{key:"insert_store",value:function(t,e){var n=this;this.databaseObj.executeSql("INSERT INTO STORE_TB(STR_CODE,STR_NAME) VALUES('"+t+"','"+e+"')",[]).then((function(){n.getstore()})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"getstore",value:function(){var t=this;this.databaseObj.executeSql("SELECT * FROM STORE_TB",[]).then((function(e){if(t.row_store=[],console.log(e),e.rows.length>0)for(var n=0;n<e.rows.length;n++)t.row_store.push(e.rows.item(n))})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteStore",value:function(){this.databaseObj.executeSql("DELETE FROM STORE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"AttemptedOpenAuditCount",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB t WHERE AUDIT_ID="+t+" AND AUDIT_STATUS='Open' AND STR_CODE='"+e+"'",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0)for(var e=0;e<t.rows.length;e++)n.count_AttemptedOpenAuditCount.push(t.rows.item(e))})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"Delelete_All_data",value:function(){this.databaseObj.executeSql("DELETE FROM AUDIT_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM SECTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteAudit",value:function(t){this.databaseObj.executeSql("DELETE FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteSection",value:function(t){this.databaseObj.executeSql("DELETE FROM SECTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQuestion",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQChoice",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQOption",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQRange",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQField",value:function(t){this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQFieldValue",value:function(t){this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deleteQFieldChoice",value:function(t){this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB WHERE AUDIT_ID="+t,[]).then((function(t){return console.log(t),!0})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAllAudits",value:function(){var t=this;this.databaseObj.executeSql("SELECT *  FROM AUDIT_TB",[]).then((function(e){if(t.row_store=[],console.log(e),e.rows.length>0){for(var n=0;n<e.rows.length;n++)t.AllAudits.push(e.rows.item(n));return t.AllAudits}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createAudit",value:function(t,e,n,T,E,I,o){this.databaseObj.executeSql("INSERT INTO AUDIT_TB (AUDIT_ID, AUDIT_NAME,AUDIT_TYPE_ID,AUDIT_TYPE,AUDIT_STAGE,AUDIT_PT, QUESTION_COUNT) VALUES("+t+",'"+e+"',"+n+",'"+T+"','"+E+"',"+I+","+o+")",[]).then((function(t){return console.log(t),!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createSection",value:function(t,e,n,T,E,I,o,D,l,i){this.databaseObj.executeSql("INSERT INTO SECTION_TB(AUDIT_ID, SECTION_ID, PARENT_SECTION_ID, SECTION_NAME, SECTION_DESC, SECTION_ORDER, SECTION_PT, T_QUESTION_COUNT, S_QUESTION_COUNT, C_QUESTION_COUNT ) VALUES("+t+","+e+","+n+",'"+T+"','"+E+"',"+I+","+o+","+D+","+l+","+i+")",[]).then((function(t){return!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQuestion",value:function(t,e,n,T,E,I,o,D,l){this.databaseObj.executeSql("INSERT INTO QUESTION_TB(AUDIT_ID, SECTION_ID, QUESTION_ID, QUESTION_TYPE_ID, QUESTION_NAME, QUESTION_TYPE, QUESTION_ORDER, IS_CRITICAL, QUESTION_MARKS) VALUES("+t+","+e+","+n+","+T+",'"+E+"','"+I+"',"+o+",'"+D+"',"+l+")",[]).then((function(t){return!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQChoice",value:function(t,e,n,T,E,I,o,D){this.databaseObj.executeSql("INSERT INTO QUESTION_CHOICE_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,CHOICE_ID,CHOICE_TEXT,POINTS,COMMENTS_REQUIRED,IS_NEGATIVE) VALUES("+t+","+e+","+n+","+T+",'"+E+"',"+I+",'"+o+"','"+D+"')",[]).then((function(t){return!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedCompletedAuditByUser",value:function(t){var e=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='"+t+"' AND AUDIT_STATUS='Close'",[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var n=0;n<t.rows.length;n++)e.AttemptedCompletedAuditByUser.push(t.rows.item(n));return e.AttemptedCompletedAuditByUser}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchImageNotPushedAttemptedQuestionBySQL",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT AUDIT_ID,SECTION_ID,QUESTION_ID,0 AS KEY_FIELD_VALUE_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE QUESTION_STATUS='Done' AND ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null' UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTION_FIELD X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+e+" UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.VALUE_ID AS KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+e,[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.ImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(e));return n.ImageNotPushedAttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedOpenAuditCount",value:function(){var t=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_STATUS='Open'",[]).then((function(e){if(t.Count_AttemptedOpenAuditCount=[],console.log(e),e.rows.length>0){for(var n=0;n<e.rows.length;n++)t.Count_AttemptedOpenAuditCount.push(e.rows.item(n));return console.log(t.Count_AttemptedOpenAuditCount),t.Count_AttemptedOpenAuditCount}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"deletAttemptedAuditById",value:function(t){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_RECIVING_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_OPTION WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))})),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t,[]).then((function(t){console.log(t)})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionBySQL",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+n+" ORDER BY QUESTION_ORDER",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AttemptedQuestionBySQL.push(t.rows.item(e));return T.AttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionChoiceBySQL",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.QUESTION_ID="+n,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AttemptedQuestionBySQL.push(t.rows.item(e));return T.AttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditPrevQuestionBySQL",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+n+" AND SECTION_ID="+e+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+n+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+n+" AND QUESTION_ID="+T+"))",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.AttemptedAuditPrevQuestionBySQL.push(t.rows.item(e));return E.AttemptedAuditPrevQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchPrevAttemptedSection",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+n+"))",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.PrevAttemptedSection.push(t.rows.item(e));return T.PrevAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedAuditNextQuestionBySQL",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+n+" AND SECTION_ID="+e+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+n+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+n+" AND QUESTION_ID="+T+"))",[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.AttemptedAuditNextQuestionBySQL.push(t.rows.item(e));return E.AttemptedAuditNextQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchNextAttemptedSection",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+n+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+n+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+n+")",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.NextAttemptedSection.push(t.rows.item(e));return T.NextAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionById",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.QuestionById.push(t.rows.item(e));return T.QuestionById}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionBased",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+t+" AND QUESTION_ID="+n,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.QuestionBased.push(t.rows.item(e));return T.QuestionBased}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionBasedValues",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n+" AND STANDARD_ID="+T,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.QuestionBasedValues.push(t.rows.item(e));return E.QuestionBasedValues}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchQuestionChoice",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND QUESTION_ID="+n,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.QuestionChoice.push(t.rows.item(e));return T.QuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchTopAttemptedSection",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.QuestionChoice.push(t.rows.item(e));return n.QuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchSLAttemptedSection",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+n+" AND PARENT_SECTION_ID="+e,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.SLAttemptedSection_check.push(t.rows.item(e));return T.SLAttemptedSection_check}})).catch((function(t){alert("error "+JSON.stringify(t))})),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.SLAttemptedSection.push(t.rows.item(e));return T.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.SLAttemptedSection.push(t.rows.item(e));return T.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.SLAttemptedSection.push(t.rows.item(e));return T.SLAttemptedSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchGenericImageNotPushedAttemptedQuestionBySQL",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then((function(t){if(n.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.GenericImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(e));return n.GenericImageNotPushedAttemptedQuestionBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"DeleteGenericImages",value:function(t,e){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+e,[])}},{key:"SaveGenericImage",value:function(t,e,n,T,E,I){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+t+","+n+",'"+T+"','"+e+"','"+E+"','No')",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"UpdateAuditFindings",value:function(t,e,n,T){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+T.replace("'","''")+"' WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+n+" AND UNIQUE_ID='"+e+"'",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"GetAuditFindings",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+n+" AND UNIQUE_ID='"+e+"'",[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AuditFindings.push(t.rows.item(e));return T.AuditFindings}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createQStandard",value:function(t,e,n,T,E,I,o,D,l,i,A){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+t+","+e+","+n+","+T+",'"+E+"','"+I+"','"+o+"','"+D+"','"+l+"','"+i+"','"+A+"')",[]).then((function(){return!0})).catch((function(t){console.log("error "+JSON.stringify(t))}))}},{key:"createQStandardPreDefined",value:function(t,e,n,T,E,I){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+t+","+e+","+n+","+T+","+E+",'"+I+"')",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionStandardBySQL",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND QUESTION_ID="+n,[]).then((function(t){if(T.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.AttemptedQuestionStandardBySQL.push(t.rows.item(e));return T.AttemptedQuestionStandardBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"fetchAttemptedQuestionStandardValueBySQL",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND QUESTION_ID="+n+" AND STANDARD_ID="+T,[]).then((function(t){if(E.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.AttemptedQuestionStandardValueBySQL.push(t.rows.item(e));return E.AttemptedQuestionStandardValueBySQL}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkAudit",value:function(t){var e=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then((function(t){if(e.row_store=[],console.log(t),t.rows.length>0){for(var n=0;n<t.rows.length;n++)e.CheckAudit.push(t.rows.item(n));return e.CheckAudit}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkSection",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM SECTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e,[]).then((function(t){if(n.CheckSection=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.CheckSection.push(t.rows.item(e));return n.CheckSection}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestion",value:function(t,e,n){var T=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n,[]).then((function(t){if(T.CheckQuestion=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)T.CheckQuestion.push(t.rows.item(e));return T.CheckQuestion}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionChoice",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n+" AND CHOICE_ID="+T,[]).then((function(t){if(E.CheckQuestionChoice=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.CheckQuestionChoice.push(t.rows.item(e));return E.CheckQuestionChoice}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionStandard",value:function(t,e,n,T){var E=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n+" AND STANDARD_ID="+T,[]).then((function(t){if(E.CheckQuestionStandard=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)E.CheckQuestionStandard.push(t.rows.item(e));return E.CheckQuestionStandard}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkQuestionStandardPreDefined",value:function(t,e,n,T,E){var I=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+n+" AND STANDARD_ID="+T+" AND VALUE_ID="+E,[]).then((function(t){if(I.CheckQuestionStandardPreDefined=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)I.CheckQuestionStandardPreDefined.push(t.rows.item(e));return I.CheckQuestionStandardPreDefined}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ChkAttemptAudit",value:function(t){var e=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_ID="+t,[]).then((function(t){if(e.CheckAttemptAudit=[],console.log(t),t.rows.length>0){for(var n=0;n<t.rows.length;n++)e.CheckAttemptAudit.push(t.rows.item(n));return e.CheckAttemptAudit}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createSection1",value:function(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,QUESTION_ANSWERED,S_QUESTION_COUNT,C_QUESTION_COUNT) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,'' AS QUESTION_ANSWERED,A.S_QUESTION_COUNT,A.C_QUESTION_COUNT FROM SECTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_SECTION C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID WHERE A.AUDIT_ID="+t+" AND C.SECTION_ID IS NULL",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"createQuestion1",value:function(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IMAGE_NAME,IS_INCLUDED,IMAGE_PUSHED) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.QUESTION_TYPE_ID,A.QUESTION_NAME,A.QUESTION_TYPE,A.QUESTION_ORDER,A.IS_CRITICAL,A.QUESTION_MARKS,0 AS MARKS_SCORED,'Open' AS QUESTION_STATUS,'' AS QUESTION_COMMENT,'' AS IMAGE_NAME,'Yes' AS IS_INCLUDED,'Yes' AS IMAGE_PUSHED FROM QUESTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_QUESTIONS C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID AND A.QUESTION_ID=C.QUESTION_ID WHERE A.AUDIT_ID="+t+" AND C.QUESTION_ID IS NULL",[]).then((function(){})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"ValidateUser",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+e+"'",[]).then((function(t){if(n.ValidateUser_arry=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.ValidateUser_arry.push(t.rows.item(e));return n.ValidateUser_arry}})).catch((function(t){alert("error "+JSON.stringify(t))}))}},{key:"GetUsrDetails",value:function(t,e){var n=this;this.databaseObj.executeSql("SELECT * FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+e+"'",[]).then((function(t){if(n.GetUsrDetails_arry=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)n.GetUsrDetails_arry.push(t.rows.item(e));return n.GetUsrDetails_arry}})).catch((function(t){alert("error "+JSON.stringify(t))}))}}]),t}(),O=n("iInd"),a=T.ob({encapsulation:0,styles:[["ion-content.background[_ngcontent-%COMP%]{--ion-background-color:black!important}.div_button[_ngcontent-%COMP%]{background-color:#fff}.main_div[_ngcontent-%COMP%]{margin-top:5em;margin-left:1em;margin-right:1em}"]],data:{}});function c(t){return T.Jb(0,[(t()(),T.qb(0,0,null,null,1,"ion-spinner",[["color","secondary"],["name","bubble"]],null,null,null,o.O,o.t)),T.pb(1,49152,null,0,D.nb,[T.h,T.k,T.x],{color:[0,"color"],name:[1,"name"]},null)],(function(t,e){t(e,1,0,"secondary","bubble")}),null)}function U(t){return T.Jb(0,[(t()(),T.qb(0,0,null,null,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),T.Hb(1,null,["User : ",""]))],null,(function(t,e){t(e,1,0,e.context.$implicit.EMP_NAME)}))}function C(t){return T.Jb(0,[(t()(),T.qb(0,0,null,null,13,"ion-header",[],null,null,null,o.D,o.i)),T.pb(1,49152,null,0,D.z,[T.h,T.k,T.x],null,null),(t()(),T.qb(2,0,null,0,11,"div",[["style","background-color: black; align-content: center;"]],null,null,null,null,null)),(t()(),T.qb(3,0,null,null,10,"table",[["style","margin-left: 10px; margin-top: 5px; margin-bottom: 2px;"]],null,null,null,null,null)),(t()(),T.qb(4,0,null,null,9,"tbody",[],null,null,null,null,null)),(t()(),T.qb(5,0,null,null,8,"tr",[],null,null,null,null,null)),(t()(),T.qb(6,0,null,null,2,"td",[],null,null,null,null,null)),(t()(),T.qb(7,0,null,null,1,"span",[["style","margin-top:20px; margin-left: 5px; margin-top: 1px;"]],null,null,null,null,null)),(t()(),T.qb(8,0,null,null,0,"img",[["height","35"],["src","../../assets/tablez.png"],["width","35"]],null,null,null,null,null)),(t()(),T.qb(9,0,null,null,1,"td",[],null,null,null,null,null)),(t()(),T.Hb(-1,null,["\xa0"])),(t()(),T.qb(11,0,null,null,2,"td",[],null,null,null,null,null)),(t()(),T.qb(12,0,null,null,1,"span",[["style","color: white; margin-top: 1px;"]],null,null,null,null,null)),(t()(),T.Hb(-1,null,["Home"])),(t()(),T.qb(14,0,null,null,31,"ion-content",[],null,null,null,o.z,o.e)),T.pb(15,49152,null,0,D.s,[T.h,T.k,T.x],null,null),(t()(),T.qb(16,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(17,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(18,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(19,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),T.qb(20,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,n){var T=!0;return"click"===e&&(T=!1!==t.component.Get_Sync()&&T),T}),o.w,o.b)),T.pb(21,49152,null,0,D.i,[T.h,T.k,T.x],{expand:[0,"expand"]},null),(t()(),T.Hb(-1,0,["Sync Definition"])),(t()(),T.qb(23,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.fb(16777216,null,0,1,null,c)),T.pb(25,16384,null,0,l.i,[T.L,T.I],{ngIf:[0,"ngIf"]},null),(t()(),T.qb(26,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),T.qb(27,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,n){var T=!0;return"click"===e&&(T=!1!==t.component.GotoNewAudit()&&T),T}),o.w,o.b)),T.pb(28,49152,null,0,D.i,[T.h,T.k,T.x],{expand:[0,"expand"]},null),(t()(),T.Hb(-1,0,["New Audit"])),(t()(),T.qb(30,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(31,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),T.qb(32,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,n){var T=!0;return"click"===e&&(T=!1!==t.component.GotoOpenAudit()&&T),T}),o.w,o.b)),T.pb(33,49152,null,0,D.i,[T.h,T.k,T.x],{expand:[0,"expand"]},null),(t()(),T.Hb(-1,0,["Open Audit(s)"])),(t()(),T.qb(35,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(36,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),T.qb(37,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,n){var T=!0;return"click"===e&&(T=!1!==t.component.GotoCloseAudit()&&T),T}),o.w,o.b)),T.pb(38,49152,null,0,D.i,[T.h,T.k,T.x],{expand:[0,"expand"]},null),(t()(),T.Hb(-1,0,["Compleated Audit(s)"])),(t()(),T.qb(40,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(41,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),T.qb(42,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,n){var T=!0;return"click"===e&&(T=!1!==t.component.logoff()&&T),T}),o.w,o.b)),T.pb(43,49152,null,0,D.i,[T.h,T.k,T.x],{expand:[0,"expand"]},null),(t()(),T.Hb(-1,0,["Log Off"])),(t()(),T.qb(45,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),T.qb(46,0,null,null,7,"ion-footer",[["class","ion-no-border"]],null,null,null,o.B,o.g)),T.pb(47,49152,null,0,D.x,[T.h,T.k,T.x],null,null),(t()(),T.fb(16777216,null,0,1,null,U)),T.pb(49,278528,null,0,l.h,[T.L,T.I,T.q],{ngForOf:[0,"ngForOf"]},null),(t()(),T.qb(50,0,null,0,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),T.Hb(-1,null,["Powered by : SoftEra Audit v3.0"])),(t()(),T.qb(52,0,null,0,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),T.Hb(-1,null,["Copyright \xa9 2020 SoftEra Technologies"]))],(function(t,e){var n=e.component;t(e,21,0,"full"),t(e,25,0,n.showSpinner),t(e,28,0,"full"),t(e,33,0,"full"),t(e,38,0,"full"),t(e,43,0,"full"),t(e,49,0,n.row_data)}),null)}var h=T.mb("app-dash-board",s,(function(t){return T.Jb(0,[(t()(),T.qb(0,0,null,null,1,"app-dash-board",[],null,null,null,C,a)),T.pb(1,114688,null,0,s,[D.Fb,A.a,_.a,O.m,r.a,u.a,N.a,O.a],null,null)],(function(t,e){t(e,1,0)}),null)}),{},{},[]),R=n("s7LF"),d=function t(){_classCallCheck(this,t)};n.d(e,"DashBoardPageModuleNgFactory",(function(){return M}));var M=T.nb(E,[],(function(t){return T.zb([T.Ab(512,T.j,T.Y,[[8,[I.a,h]],[3,T.j],T.v]),T.Ab(4608,l.k,l.j,[T.s,[2,l.r]]),T.Ab(4608,R.o,R.o,[]),T.Ab(4608,D.a,D.a,[T.x,T.g]),T.Ab(4608,D.Cb,D.Cb,[D.a,T.j,T.p]),T.Ab(4608,D.Gb,D.Gb,[D.a,T.j,T.p]),T.Ab(1073742336,l.b,l.b,[]),T.Ab(1073742336,R.n,R.n,[]),T.Ab(1073742336,R.g,R.g,[]),T.Ab(1073742336,D.zb,D.zb,[]),T.Ab(1073742336,O.n,O.n,[[2,O.s],[2,O.m]]),T.Ab(1073742336,d,d,[]),T.Ab(1073742336,E,E,[]),T.Ab(1024,O.k,(function(){return[[{path:"",component:s}]]}),[])])}))}}]);