{"version":3,"sources":["./src/app/dash-board/dash-board.page.html","./src/app/dash-board/dash-board-routing.module.ts","./src/app/dash-board/dash-board.module.ts","./src/app/dash-board/dash-board.page.scss","./src/app/dash-board/dash-board.page.ts"],"names":[],"mappings":"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","file":"dash-board-dash-board-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>DashBoard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n<ul>\\n  <li *ngFor=\\\"let element of row_data\\\">{{element.EMP_NAME}}</li>\\n</ul>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashBoardPage } from './dash-board.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashBoardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashBoardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashBoardPageRoutingModule } from './dash-board-routing.module';\n\nimport { DashBoardPage } from './dash-board.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashBoardPageRoutingModule\n  ],\n  declarations: [DashBoardPage]\n})\nexport class DashBoardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2gtYm9hcmQvZGFzaC1ib2FyZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\nimport { Platform, ToastController } from '@ionic/angular';\n@Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.page.html',\n  styleUrls: ['./dash-board.page.scss'],\n})\nexport class DashBoardPage implements OnInit {\n  databaseObj: SQLiteObject;\n  readonly database_name:string = \"AUDIT_DB.db\"; // DB name\n\n row_data : any [];\n  constructor(\n\n    private platform: Platform,\n    public sqlite: SQLite,\n  ) { \n    this.platform.ready().then(() => {\n      this.createDB();\n    }).catch(error => {\n      console.log(error);\n    });\n\n\n  }\n  createDB() {\n    console.log(\"database created\");\n    this.sqlite.create({\n      name: this.database_name,\n      location: 'default'\n    })\n      .then((db: SQLiteObject) => {\n        this.databaseObj = db;\n        alert('audit Database Created!');\n        this.getRows();\n      })\n      .catch(e => {\n        alert(\"error \" + JSON.stringify(e))\n      });\n    }\n\n    getRows() {\n      this.databaseObj.executeSql(\"SELECT * FROM USER_TB\", [])\n        .then((res) => {\n          this.row_data = [];\n          if (res.rows.length > 0) {\n            for (var i = 0; i < res.rows.length; i++) {\n              this.row_data.push(res.rows.item(i));\n              alert( this.row_data[i].toString())\n              console.log(this.row_data[i].toString());\n            }\n          }\n        })\n        .catch(e => {\n          alert(\"error \" + JSON.stringify(e))\n        });\n    }\n\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}