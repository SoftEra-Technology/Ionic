function _defineProperties(e,t){for(var T=0;T<t.length;T++){var E=t[T];E.enumerable=E.enumerable||!1,E.configurable=!0,"value"in E&&(E.writable=!0),Object.defineProperty(e,E.key,E)}}function _createClass(e,t,T){return t&&_defineProperties(e.prototype,t),T&&_defineProperties(e,T),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{WNRU:function(e,t,T){"use strict";T.r(t);var E=T("8Y7J"),n=function e(){_classCallCheck(this,e)},l=T("4XKt"),I=T("pMnS"),o=T("MKJQ"),A=T("sZkV"),i=T("s7LF"),D=T("SVse"),_=T("mrSG"),u=T("6GXZ"),S=T("xoVG"),N=T("kwUn"),s=T("Pn9U"),r=T("Hle8"),O=T("b6o4"),a=function(){function e(t,T,E,n,l,I,o,A,i){var D=this;_classCallCheck(this,e),this.userService=t,this.router=T,this.network=E,this.platform=n,this.sqlite=l,this.activatedRoute=I,this.camera=o,this.modalController=A,this.screenOrientation=i,this.database_name="AUDIT_DB.db",this.image="",this.selectedRadioGroupValue="0",this.Question_comment="",this.sImagePushed="No",this.sIncluded="Yes",this.sImageName="akshay.jpg",this.activatedRoute.queryParams.subscribe((function(e){console.log(JSON.parse(e.value)),D.Query_data=JSON.parse(e.value),console.log("list page"),console.log(D.Query_data.AttemptedId)})),this.platform.ready().then((function(){D.createDB(),D.unlockScreen(),D.setPortrait()})).catch((function(e){console.log(e)}))}return _createClass(e,[{key:"setPortrait",value:function(){this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT)}},{key:"unlockScreen",value:function(){this.screenOrientation.unlock()}},{key:"ngOnInit",value:function(){}},{key:"openCam",value:function(){var e=this;this.camera.getPicture({quality:100,destinationType:this.camera.DestinationType.FILE_URI,encodingType:this.camera.EncodingType.JPEG,mediaType:this.camera.MediaType.PICTURE}).then((function(t){e.imageData=t,e.image=window.Ionic.WebView.convertFileSrc(t)}),(function(e){console.log("error "+JSON.stringify(e))}))}},{key:"upload",value:function(){var e=(new Date).valueOf()+".jpeg",t=this.dataURItoBlob(this.imageData),T=new File([t],e,{type:"image/jpeg"});(new FormData).append("file",T)}},{key:"dataURItoBlob",value:function(e){for(var t=window.atob(e),T=new ArrayBuffer(t.length),E=new Uint8Array(T),n=0;n<t.length;n++)E[n]=t.charCodeAt(n);return new Blob([E],{type:"image/jpeg"})}},{key:"Previous_Question",value:function(){this.image="",1===this.Question_order?this.section_frist_order===this.Section_order?this.router.navigate(["/list-audit"],{queryParams:{value:JSON.stringify({AttemptedId:this.Attempted_id,AuditId:this.Query_data.AuditId,Storeid:this.Query_data.Store_id})}}):this.fetchPrevAttemptedSection(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id)):this.fetchAttemptedAuditPrevQuestionBySQL(Number(this.Attempted_id),Number(this.Section_id),Number(this.Query_data.AuditId),Number(this.Question_id))}},{key:"Review_page",value:function(){this.router.navigate(["/list-audit"],{queryParams:{value:JSON.stringify({AttemptedId:this.Attempted_id,AuditId:this.Query_data.AuditId,Storeid:this.Query_data.Store_id,refresh:"yes"})}})}},{key:"Next_Question",value:function(){console.log("section order"+this.Section_order),console.log(this.section_frist_order),console.log(this.Section_last_order),this.selectedPOINTS="",this.image="",this.Total_Question===this.Question_order?this.Section_last_order===this.Section_order?this.router.navigate(["/list-audit"],{queryParams:{value:JSON.stringify({AttemptedId:this.Attempted_id,AuditId:this.Query_data.AuditId,Storeid:this.Query_data.Store_id})}}):this.fetchNextAttemptedSection(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id)):this.fetchAttemptedAuditNextQuestionBySQL(Number(this.Attempted_id),Number(this.Section_id),Number(this.Query_data.AuditId),Number(this.Question_id))}},{key:"Add_Comment",value:function(){return _.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t,T=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.modalController.create({component:r.a,componentProps:{comment:this.Question_comment}});case 2:return(t=e.sent).onDidDismiss().then((function(e){console.log("data from model popup"),console.log(e);var t=e.data;console.log(t),T.Question_comment=t})),e.next=6,t.present();case 6:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e,this)})))}},{key:"View_Comment",value:function(){this.Add_Comment()}},{key:"createDB",value:function(){var e=this;console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then((function(t){e.databaseObj=t,e.fetchAttemptedSection(Number(e.Query_data.AttemptedId),Number(e.Query_data.AuditId),Number(e.Query_data.SectionId)),e.fetchAttemptedQuestionBySQL(Number(e.Query_data.AttemptedId),Number(e.Query_data.AuditId),Number(e.Query_data.SectionId),Number(e.Query_data.QuestionID)),console.log("questionid: "+e.Query_data.QuestionID),e.fetchQuestionChoice(Number(e.Query_data.AuditId),Number(e.Query_data.SectionId),Number(e.Query_data.QuestionID))})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"radioGroupChange",value:function(e){console.log("radioGroupChange",e.detail),this.selectedRadioGroup=e.detail,this.selectedRadioGroupValue=this.selectedRadioGroup.value,console.log(this.selectedRadioGroupValue),this.value_for_update_choice(this.selectedRadioGroupValue)}},{key:"Value_for_the_page",value:function(){if(this.AttemptedSection.length>0){this.section_frist_order=this.AttemptedSection[0].SECTION_ORDER,this.Section_last_order=this.AttemptedSection[this.AttemptedSection.length-1].SECTION_ORDER,this.Attempted_id=this.Query_data.AttemptedId;for(var e=0;e<=this.AttemptedSection.length;e++)this.AttemptedSection[e].SECTION_ID===this.Query_data.SectionId&&(this.Section_id=this.AttemptedSection[e].SECTION_ID,this.Section_Name=this.AttemptedSection[e].SECTION_NAME,this.Total_Question=this.AttemptedSection[e].T_QUESTION_COUNT,this.Section_order=this.AttemptedSection[e].SECTION_ORDER);this.value_for_the_page_question_choice()}}},{key:"value_for_the_page_question_choice",value:function(){"Yes/No"==this.Question_type||"Choice"==this.Question_type?(this.fetchQuestionChoice(Number(this.Query_data.AuditId),Number(this.Section_id),Number(this.Question_id)),"Done"==this.Question_Status&&this.fetchQuestionChoice_Answered(Number(this.Query_data.AuditId),Number(this.Section_id),Number(this.Question_id))):"Standard"==this.Question_type&&this.fetchAttemptedQuestionStandardBySQL(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Question_id))}},{key:"fetchAttemptedSection",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+e+" AND A.S_QUESTION_COUNT>0",[]).then((function(e){if(E.AttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.AttemptedSection.push(e.rows.item(t));console.log("section in choice"),console.log(E.AttemptedSection)}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedQuestionBySQL",value:function(e,t,T,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+" ORDER BY QUESTION_ORDER",[]).then((function(e){if(n.AttemptedQuestionBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)n.AttemptedQuestionBySQL.push(e.rows.item(t)),n.AttemptedQuestionBySQL[t].QUESTION_ID===n.Query_data.QuestionID&&(n.Question_id=n.AttemptedQuestionBySQL[t].QUESTION_ID,n.Question_order=n.AttemptedQuestionBySQL[t].QUESTION_ORDER,n.Question_name=n.AttemptedQuestionBySQL[t].QUESTION_NAME,n.Question_type=n.AttemptedQuestionBySQL[t].QUESTION_TYPE,n.Question_Marks=n.AttemptedQuestionBySQL[t].QUESTION_MARKS,n.Question_comment=n.AttemptedQuestionBySQL[t].QUESTION_COMMENT,n.Question_Status=n.AttemptedQuestionBySQL[t].QUESTION_STATUS,n.Value_for_the_page(),n.value_for_the_page_question_choice());console.log("question in choice Value_for_the_page"),console.log(n.AttemptedQuestionBySQL)}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedQuestionChoiceBySQL",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+e+" AND A.AUDIT_ID="+t+" AND A.QUESTION_ID="+T,[]).then((function(e){if(E.AttemptedQuestionChoiceBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.AttemptedQuestionChoiceBySQL.push(e.rows.item(t));console.log("choice of the  question"),console.log(E.AttemptedQuestionChoiceBySQL)}})).catch((function(e){console.log("error "+JSON.stringify(e))})),console.log("akshay")}},{key:"fetchAttemptedAuditPrevQuestionBySQL",value:function(e,t,T,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+T+" AND SECTION_ID="+t+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND SECTION_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND SECTION_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ID="+E+"))",[]).then((function(e){if(n.AttemptedAuditPrevQuestionBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)n.AttemptedAuditPrevQuestionBySQL.push(e.rows.item(t));return n.Question_id=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_ID,n.Question_order=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_ORDER,n.Question_name=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_NAME,n.Question_type=n.AttemptedQuestionBySQL[0].QUESTION_TYPE,n.Question_Marks=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_MARKS,n.Question_comment=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_COMMENT,n.Question_Status=n.AttemptedAuditPrevQuestionBySQL[0].QUESTION_STATUS,n.value_for_the_page_question_choice(),n.AttemptedAuditPrevQuestionBySQL}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchPrevAttemptedSection",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.T_QUESTION_COUNT,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+e+" AND A.AUDIT_ID="+t+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+"))",[]).then((function(e){if(E.PrevAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.PrevAttemptedSection.push(e.rows.item(t));E.Section_id=E.PrevAttemptedSection[0].SECTION_ID,E.Section_Name=E.PrevAttemptedSection[0].SECTION_NAME,E.Total_Question=E.PrevAttemptedSection[0].T_QUESTION_COUNT,E.Section_order=E.NextAttemptedSection[0].SECTION_ORDER,E.fetchAttemptedQuestionBySQLForSectionChange(Number(E.Query_data.AttemptedId),Number(E.Query_data.AuditId),Number(E.Section_id))}})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedAuditNextQuestionBySQL",value:function(e,t,T,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+T+" AND SECTION_ID="+t+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND SECTION_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND SECTION_ID="+t+" AND AUDIT_ID="+T+" AND QUESTION_ID="+E+"))",[]).then((function(e){if(n.AttemptedAuditNextQuestionBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)n.AttemptedAuditNextQuestionBySQL.push(e.rows.item(t));n.Question_id=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_ID,n.Question_order=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_ORDER,n.Question_name=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_NAME,n.Question_type=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_TYPE,n.Question_Marks=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_MARKS,n.Question_comment=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_COMMENT,n.Question_Status=n.AttemptedAuditNextQuestionBySQL[0].QUESTION_STATUS,n.value_for_the_page_question_choice()}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchNextAttemptedSection",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.T_QUESTION_COUNT,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+e+" AND A.AUDIT_ID="+t+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+")",[]).then((function(e){if(E.NextAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.NextAttemptedSection.push(e.rows.item(t));E.Attempted_id=E.Query_data.AttemptedId,E.Section_id=E.NextAttemptedSection[0].SECTION_ID,E.Section_Name=E.NextAttemptedSection[0].SECTION_NAME,E.Total_Question=E.NextAttemptedSection[0].T_QUESTION_COUNT,E.Section_order=E.NextAttemptedSection[0].SECTION_ORDER,E.fetchAttemptedQuestionBySQLForSectionChange(Number(E.Query_data.AttemptedId),Number(E.Query_data.AuditId),Number(E.Section_id))}})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedQuestionBySQLForSectionChange",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND SECTION_ID="+T+" ORDER BY QUESTION_ORDER",[]).then((function(e){if(E.AttemptedQuestionBySQLForSectionChange=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.AttemptedQuestionBySQLForSectionChange.push(e.rows.item(t));E.Question_id=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_ID,E.Question_order=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_ORDER,E.Question_name=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_NAME,E.Question_type=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_TYPE,E.Question_Marks=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_MARKS,E.Question_comment=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_COMMENT,E.Question_Status=E.AttemptedQuestionBySQLForSectionChange[0].QUESTION_STATUS,console.log("question in choice Value_for_the_page"),console.log(E.AttemptedQuestionBySQL),E.value_for_the_page_question_choice()}})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"fetchQuestionById",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+e+" AND SECTION_ID="+t+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+e+" AND SECTION_ID="+t+" AND QUESTION_ID="+T,[]).then((function(e){if(E.QuestionById=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.QuestionById.push(e.rows.item(t));return E.Value_for_the_page(),E.QuestionById}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchQuestionBased",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+e+" AND QUESTION_ID="+T,[]).then((function(e){if(E.QuestionBased=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.QuestionBased.push(e.rows.item(t));return E.QuestionBased}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchQuestionBasedValues",value:function(e,t,T,E){var n=this;this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+e+" AND SECTION_ID="+t+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E,[]).then((function(e){if(n.QuestionBasedValues=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)n.QuestionBasedValues.push(e.rows.item(t));return n.QuestionBasedValues}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchQuestionChoice",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+e+" AND QUESTION_ID="+T,[]).then((function(n){if(E.QuestionChoice=[],console.log(n),n.rows.length>0){for(var l=0;l<n.rows.length;l++)E.QuestionChoice.push(n.rows.item(l));console.log("choice value of this question"),console.log(E.QuestionChoice),E.fetchQuestionChoice_Answered(Number(e),Number(t),Number(T))}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchQuestionChoice_Answered",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT * FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE AUDIT_ID="+e+" AND QUESTION_ID="+T,[]).then((function(e){if(E.QuestionChoice_answered=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.QuestionChoice_answered.push(e.rows.item(t));E.selectedPOINTS="",E.Choice_selected_id="",E.selectedPOINTS=E.QuestionChoice_answered[0].POINTS,E.Choice_selected_id=E.QuestionChoice_answered[0].CHOICE_ID,console.log("choice value of this question"),console.log(E.QuestionChoice)}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchTopAttemptedSection",value:function(e,t){var T=this;this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+e+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then((function(e){if(T.TopAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)T.TopAttemptedSection.push(e.rows.item(t));return T.TopAttemptedSection}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchSLAttemptedSection",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+T+" AND PARENT_SECTION_ID="+t,[]).then((function(e){if(E.SLAttemptedSection_check=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.SLAttemptedSection_check.push(e.rows.item(t));return E.SLAttemptedSection_check}})).catch((function(e){console.log("error "+JSON.stringify(e))})),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+e+" AND A.PARENT_SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then((function(e){if(E.SLAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.SLAttemptedSection.push(e.rows.item(t));return E.SLAttemptedSection}})).catch((function(e){console.log("error "+JSON.stringify(e))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+e+" AND A.SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then((function(e){if(E.SLAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.SLAttemptedSection.push(e.rows.item(t));return E.SLAttemptedSection}})).catch((function(e){console.log("error "+JSON.stringify(e))})):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+e+" AND A.PARENT_SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then((function(e){if(E.SLAttemptedSection=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.SLAttemptedSection.push(e.rows.item(t));return E.SLAttemptedSection}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchGenericImageNotPushedAttemptedQuestionBySQL",value:function(e,t){var T=this;this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then((function(e){if(T.GenericImageNotPushedAttemptedQuestionBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)T.GenericImageNotPushedAttemptedQuestionBySQL.push(e.rows.item(t));return T.GenericImageNotPushedAttemptedQuestionBySQL}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"DeleteGenericImages",value:function(e,t){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t,[])}},{key:"SaveGenericImage",value:function(e,t,T,E,n,l){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+e+","+T+",'"+E+"','"+t+"','"+n+"','No')",[]).then((function(){})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"UpdateAuditFindings",value:function(e,t,T,E){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+E.replace("'","''")+"' WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+T+" AND UNIQUE_ID='"+t+"'",[]).then((function(){})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"GetAuditFindings",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+T+" AND UNIQUE_ID='"+t+"'",[]).then((function(e){if(E.AuditFindings=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.AuditFindings.push(e.rows.item(t));return E.AuditFindings}})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"createQStandard",value:function(e,t,T,E,n,l,I,o,A,i,D){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+e+","+t+","+T+","+E+",'"+n+"','"+l+"','"+I+"','"+o+"','"+A+"','"+i+"','"+D+"')",[]).then((function(){console.log("data inserted")})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"createQStandardPreDefined",value:function(e,t,T,E,n,l){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+e+","+t+","+T+","+E+","+n+",'"+l+"')",[]).then((function(){})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedQuestionStandardBySQL",value:function(e,t,T){var E=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND QUESTION_ID="+T,[]).then((function(e){if(E.AttemptedQuestionStandardBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)E.AttemptedQuestionStandardBySQL.push(e.rows.item(t));console.log("standard for this qustion"),console.log(E.AttemptedQuestionStandardBySQL),E.fetchAttemptedQuestionStandardValueBySQL(Number(E.Attempted_id),Number(E.Query_data.AuditId),Number(E.Question_id),Number(E.AttemptedQuestionStandardBySQL[0].STANDARD_ID))}})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"fetchAttemptedQuestionStandardValueBySQL",value:function(e,t,T,E){var n=this;this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+e+" AND AUDIT_ID="+t+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E,[]).then((function(e){if(n.AttemptedQuestionStandardValueBySQL=[],console.log(e),e.rows.length>0){for(var t=0;t<e.rows.length;t++)n.AttemptedQuestionStandardValueBySQL.push(e.rows.item(t));console.log("Attempted Question Standard Value"),console.log("AttemptedQuestionStandardValueBySQL")}})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"value_for_update_choice",value:function(e){for(var t=0;t<=this.QuestionChoice.length-1;t++)Number(this.QuestionChoice[t].CHOICE_ID)==Number(e)&&(this.selectedCHOICE_TEXT=this.QuestionChoice[t].CHOICE_TEXT,this.selectedCHOICE_ID=this.QuestionChoice[t].CHOICE_ID,this.selectedPOINTS=this.QuestionChoice[t].POINTS,console.log("choice seleted  id=="+this.QuestionChoice[t].CHOICE_ID));"0"===e&&(this.selectedCHOICE_TEXT="NA",this.selectedCHOICE_ID="0",this.selectedPOINTS="0",console.log("choice seleted  id=="+e)),this.fnGetSelectedValue()}},{key:"fnGetSelectedValue",value:function(){var e=this;this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId+" AND QUESTION_ID="+this.Question_id,[]).then((function(t){e.updateAuditAttemptedChoice(),console.log("delete alltempted question choice")})).catch((function(t){console.log("error "+JSON.stringify(t)),e.updateAuditAttemptedChoice()}))}},{key:"updateAuditAttemptedChoice",value:function(){var e=this;this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_QUESTIONS_CHOICE(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,CHOICE_ID,CHOICE_TEXT,POINTS,COMMENTS,CHOICE_VALUE) VALUES("+this.Attempted_id+","+this.Query_data.AuditId+","+this.Section_id+","+this.Question_id+",'"+this.Question_name+"',"+this.selectedCHOICE_ID+",'"+this.selectedCHOICE_TEXT+"',"+this.selectedPOINTS+",'"+this.Question_comment+"','"+this.selectedCHOICE_TEXT+"')",[]).then((function(t){console.log("updated alltempted question choice"),e.updateAuditSection(),e.updateAuditQuestion()})).catch((function(e){console.log("error "+JSON.stringify(e)),console.log("error "+JSON.stringify(e))}))}},{key:"updateAuditSection",value:function(){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_SECTION SET QUESTION_ANSWERED=(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId+" AND SECTION_ID="+this.Section_id+" AND QUESTION_STATUS='Done') WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId+" AND SECTION_ID="+this.Section_id,[]).then((function(e){console.log("updated alltempted section")})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"updateAuditQuestion",value:function(){var e=this;this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_QUESTIONS SET QUESTION_STATUS='Done',MARKS_SCORED="+this.selectedPOINTS+",QUESTION_COMMENT='"+this.Question_comment+"',IMAGE_NAME='"+this.sImageName+"',IS_INCLUDED='"+this.sIncluded+"',IMAGE_PUSHED='"+this.sImagePushed+"' WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId+" AND QUESTION_ID="+this.Question_id,[]).then((function(t){console.log("updated all Atempted questions status "),e.Update_Audit_Status()})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"Update_Audit_Status",value:function(){var e=this;this.databaseObj.executeSql("SELECT SUM(S_QUESTION_COUNT) AS QUESTION_COUNT,SUM(QUESTION_ANSWERED) AS QUESTION_ANSWERED FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId+" AND S_QUESTION_COUNT>0",[]).then((function(t){if(e.Compleated_audit=[],console.log(t),t.rows.length>0)for(var T=0;T<t.rows.length;T++)e.Compleated_audit.push(t.rows.item(T));var E=e.Compleated_audit[0].QUESTION_COUNT,n=e.Compleated_audit[0].QUESTION_ANSWERED;console.log("iQuestionCnt= "+E),console.log("iQuestionCnt= "+E),n===E&&e.Update_Audit(),console.log("check audit compleated or mot id ")})).catch((function(e){console.log("error "+JSON.stringify(e))}))}},{key:"Update_Audit",value:function(){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_STATUS='Close' WHERE ATTEMPTED_ID="+this.Attempted_id+" AND AUDIT_ID="+this.Query_data.AuditId,[]).then((function(e){console.log("updated Complated Audit")})).catch((function(e){console.log("error "+JSON.stringify(e))}))}}]),e}(),c=T("iInd"),d=E.ob({encapsulation:0,styles:[[""]],data:{}});function C(e){return E.Jb(0,[(e()(),E.qb(0,0,null,null,9,"div",[],null,null,null,null,null)),(e()(),E.qb(1,0,null,null,8,"ion-item",[],null,null,null,o.F,o.k)),E.pb(2,49152,null,0,A.F,[E.h,E.k,E.x],null,null),(e()(),E.qb(3,0,null,0,2,"ion-label",[],null,null,null,o.G,o.l)),E.pb(4,49152,null,0,A.L,[E.h,E.k,E.x],null,null),(e()(),E.Hb(5,0,["",""])),(e()(),E.qb(6,0,null,0,3,"ion-radio",[["color","tertiary"],["slot","start"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(e,t,T){var n=!0;return"ionBlur"===t&&(n=!1!==E.Cb(e,9)._handleBlurEvent(T.target)&&n),"ionSelect"===t&&(n=!1!==E.Cb(e,9)._handleIonSelect(T.target)&&n),n}),o.K,o.o)),E.Eb(5120,null,i.h,(function(e){return[e]}),[A.Gb]),E.pb(8,49152,null,0,A.V,[E.h,E.k,E.x],{color:[0,"color"],value:[1,"value"]},null),E.pb(9,16384,null,0,A.Gb,[E.k],null,null)],(function(e,t){e(t,8,0,"tertiary",E.ub(1,"",t.context.$implicit.CHOICE_ID,""))}),(function(e,t){e(t,5,0,t.context.$implicit.CHOICE_TEXT)}))}function U(e){return E.Jb(0,[(e()(),E.qb(0,0,null,null,8,"ion-item",[],null,null,null,o.F,o.k)),E.pb(1,49152,null,0,A.F,[E.h,E.k,E.x],null,null),(e()(),E.qb(2,0,null,0,2,"ion-label",[],null,null,null,o.G,o.l)),E.pb(3,49152,null,0,A.L,[E.h,E.k,E.x],null,null),(e()(),E.Hb(-1,0,["NA"])),(e()(),E.qb(5,0,null,0,3,"ion-radio",[["checked",""],["color","tertiary"],["slot","start"],["value","0"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(e,t,T){var n=!0;return"ionBlur"===t&&(n=!1!==E.Cb(e,8)._handleBlurEvent(T.target)&&n),"ionSelect"===t&&(n=!1!==E.Cb(e,8)._handleIonSelect(T.target)&&n),n}),o.K,o.o)),E.Eb(5120,null,i.h,(function(e){return[e]}),[A.Gb]),E.pb(7,49152,null,0,A.V,[E.h,E.k,E.x],{color:[0,"color"],value:[1,"value"]},null),E.pb(8,16384,null,0,A.Gb,[E.k],null,null)],(function(e,t){e(t,7,0,"tertiary","0")}),null)}function h(e){return E.Jb(0,[(e()(),E.qb(0,0,null,null,8,"ion-item",[],null,null,null,o.F,o.k)),E.pb(1,49152,null,0,A.F,[E.h,E.k,E.x],null,null),(e()(),E.qb(2,0,null,0,2,"ion-label",[],null,null,null,o.G,o.l)),E.pb(3,49152,null,0,A.L,[E.h,E.k,E.x],null,null),(e()(),E.Hb(-1,0,["NA"])),(e()(),E.qb(5,0,null,0,3,"ion-radio",[["color","tertiary"],["slot","start"],["value","0"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(e,t,T){var n=!0;return"ionBlur"===t&&(n=!1!==E.Cb(e,8)._handleBlurEvent(T.target)&&n),"ionSelect"===t&&(n=!1!==E.Cb(e,8)._handleIonSelect(T.target)&&n),n}),o.K,o.o)),E.Eb(5120,null,i.h,(function(e){return[e]}),[A.Gb]),E.pb(7,49152,null,0,A.V,[E.h,E.k,E.x],{color:[0,"color"],value:[1,"value"]},null),E.pb(8,16384,null,0,A.Gb,[E.k],null,null)],(function(e,t){e(t,7,0,"tertiary","0")}),null)}function Q(e){return E.Jb(0,[(e()(),E.qb(0,0,null,null,13,"ion-header",[],null,null,null,o.D,o.i)),E.pb(1,49152,null,0,A.z,[E.h,E.k,E.x],null,null),(e()(),E.qb(2,0,null,0,11,"div",[["style","background-color: black; align-content: center;"]],null,null,null,null,null)),(e()(),E.qb(3,0,null,null,10,"table",[["style","margin-left: 10px; margin-top: 5px; margin-bottom: 2px;"]],null,null,null,null,null)),(e()(),E.qb(4,0,null,null,9,"tbody",[],null,null,null,null,null)),(e()(),E.qb(5,0,null,null,8,"tr",[],null,null,null,null,null)),(e()(),E.qb(6,0,null,null,2,"td",[],null,null,null,null,null)),(e()(),E.qb(7,0,null,null,1,"span",[["style","margin-top:20px; margin-left: 5px; margin-top: 1px;"]],null,null,null,null,null)),(e()(),E.qb(8,0,null,null,0,"img",[["height","35"],["src","../../assets/tablez.png"],["width","35"]],null,null,null,null,null)),(e()(),E.qb(9,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),E.Hb(-1,null,["\xa0"])),(e()(),E.qb(11,0,null,null,2,"td",[],null,null,null,null,null)),(e()(),E.qb(12,0,null,null,1,"span",[["style","color: white; margin-top: 1px;"]],null,null,null,null,null)),(e()(),E.Hb(-1,null,["Audit Choice Question"])),(e()(),E.qb(14,0,null,null,31,"ion-content",[],null,null,null,o.z,o.e)),E.pb(15,49152,null,0,A.s,[E.h,E.k,E.x],null,null),(e()(),E.qb(16,0,null,0,4,"div",[],null,null,null,null,null)),(e()(),E.qb(17,0,null,null,1,"h3",[["style","color: cornflowerblue;"]],null,null,null,null,null)),(e()(),E.Hb(18,null,["",""])),(e()(),E.qb(19,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(20,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(21,0,null,0,3,"div",[],null,null,null,null,null)),(e()(),E.Hb(22,null,["Question "," of ",""])),(e()(),E.qb(23,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(24,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(25,0,null,0,3,"div",[],null,null,null,null,null)),(e()(),E.Hb(26,null,[" Points: ","\xa0 \xa0\xa0\xa0 \xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \xa0\xa0\xa0 \xa0\xa0\xa0\xa0\xa0\xa0 Score: ",""])),(e()(),E.qb(27,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(28,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),E.qb(29,0,null,0,2,"div",[],null,null,null,null,null)),(e()(),E.qb(30,0,null,null,1,"h4",[],null,null,null,null,null)),(e()(),E.Hb(31,null,[""," "])),(e()(),E.qb(32,0,null,0,13,"div",[],null,null,null,null,null)),(e()(),E.qb(33,0,null,null,11,"ion-list",[],null,null,null,o.H,o.m)),E.pb(34,49152,null,0,A.M,[E.h,E.k,E.x],null,null),(e()(),E.qb(35,0,null,0,9,"ion-radio-group",[["allow-empty-selection","false"],["name","radio-group"]],null,[[null,"ionChange"],[null,"ionBlur"]],(function(e,t,T){var n=!0,l=e.component;return"ionBlur"===t&&(n=!1!==E.Cb(e,38)._handleBlurEvent(T.target)&&n),"ionChange"===t&&(n=!1!==E.Cb(e,38)._handleChangeEvent(T.target)&&n),"ionChange"===t&&(n=!1!==l.radioGroupChange(T)&&n),n}),o.J,o.p)),E.Eb(5120,null,i.h,(function(e){return[e]}),[A.Hb]),E.pb(37,49152,null,0,A.W,[E.h,E.k,E.x],{name:[0,"name"],value:[1,"value"]},null),E.pb(38,16384,null,0,A.Hb,[E.k],null,null),(e()(),E.fb(16777216,null,0,1,null,C)),E.pb(40,278528,null,0,D.h,[E.L,E.I,E.q],{ngForOf:[0,"ngForOf"]},null),(e()(),E.fb(16777216,null,0,1,null,U)),E.pb(42,16384,null,0,D.i,[E.L,E.I],{ngIf:[0,"ngIf"]},null),(e()(),E.fb(16777216,null,0,1,null,h)),E.pb(44,16384,null,0,D.i,[E.L,E.I],{ngIf:[0,"ngIf"]},null),(e()(),E.qb(45,0,null,null,0,"img",[],[[8,"src",4]],null,null,null,null)),(e()(),E.qb(46,0,null,null,37,"ion-footer",[["class","ion-no-border"]],null,null,null,o.B,o.g)),E.pb(47,49152,null,0,A.x,[E.h,E.k,E.x],null,null),(e()(),E.qb(48,0,null,0,35,"ion-grid",[],null,null,null,o.C,o.h)),E.pb(49,49152,null,0,A.y,[E.h,E.k,E.x],null,null),(e()(),E.qb(50,0,null,0,16,"ion-row",[],null,null,null,o.L,o.q)),E.pb(51,49152,null,0,A.eb,[E.h,E.k,E.x],null,null),(e()(),E.qb(52,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(53,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(54,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.Add_Comment()&&E),E}),o.w,o.b)),E.pb(55,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["A Comm"])),(e()(),E.qb(57,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(58,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(59,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.View_Comment()&&E),E}),o.w,o.b)),E.pb(60,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["V Comm"])),(e()(),E.qb(62,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(63,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(64,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.openCam()&&E),E}),o.w,o.b)),E.pb(65,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["Img"])),(e()(),E.qb(67,0,null,0,16,"ion-row",[],null,null,null,o.L,o.q)),E.pb(68,49152,null,0,A.eb,[E.h,E.k,E.x],null,null),(e()(),E.qb(69,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(70,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(71,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.Previous_Question()&&E),E}),o.w,o.b)),E.pb(72,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["Previous"])),(e()(),E.qb(74,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(75,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(76,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.Review_page()&&E),E}),o.w,o.b)),E.pb(77,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["Review"])),(e()(),E.qb(79,0,null,0,4,"ion-col",[],null,null,null,o.y,o.d)),E.pb(80,49152,null,0,A.r,[E.h,E.k,E.x],null,null),(e()(),E.qb(81,0,null,0,2,"ion-button",[["color","medium"],["expand","full"]],null,[[null,"click"]],(function(e,t,T){var E=!0;return"click"===t&&(E=!1!==e.component.Next_Question()&&E),E}),o.w,o.b)),E.pb(82,49152,null,0,A.i,[E.h,E.k,E.x],{color:[0,"color"],expand:[1,"expand"]},null),(e()(),E.Hb(-1,0,["Next"]))],(function(e,t){var T=t.component;e(t,37,0,"radio-group",E.ub(1,"",T.Choice_selected_id,"")),e(t,40,0,T.QuestionChoice),e(t,42,0,0==T.Choice_selected_id),e(t,44,0,0!=T.Choice_selected_id),e(t,55,0,"medium","full"),e(t,60,0,"medium","full"),e(t,65,0,"medium","full"),e(t,72,0,"medium","full"),e(t,77,0,"medium","full"),e(t,82,0,"medium","full")}),(function(e,t){var T=t.component;e(t,18,0,T.Section_Name),e(t,22,0,T.Question_order,T.Total_Question),e(t,26,0,T.Question_Marks,T.selectedPOINTS),e(t,31,0,T.Question_name),e(t,45,0,E.ub(1,"",T.image,""))}))}var M=E.mb("app-audit-choice-question",a,(function(e){return E.Jb(0,[(e()(),E.qb(0,0,null,null,1,"app-audit-choice-question",[],null,null,null,Q,d)),E.pb(1,114688,null,0,a,[N.a,c.m,S.a,A.Eb,u.a,c.a,s.a,A.Bb,O.a],null,null)],(function(e,t){e(t,1,0)}),null)}),{},{},[]),R=T("zjAK"),m=function e(){_classCallCheck(this,e)};T.d(t,"AuditChoiceQuestionPageModuleNgFactory",(function(){return p}));var p=E.nb(n,[],(function(e){return E.zb([E.Ab(512,E.j,E.Y,[[8,[l.a,I.a,M]],[3,E.j],E.v]),E.Ab(4608,D.k,D.j,[E.s,[2,D.r]]),E.Ab(4608,i.o,i.o,[]),E.Ab(4608,A.a,A.a,[E.x,E.g]),E.Ab(4608,A.Bb,A.Bb,[A.a,E.j,E.p]),E.Ab(4608,A.Fb,A.Fb,[A.a,E.j,E.p]),E.Ab(4608,s.a,s.a,[]),E.Ab(1073742336,D.b,D.b,[]),E.Ab(1073742336,i.n,i.n,[]),E.Ab(1073742336,i.g,i.g,[]),E.Ab(1073742336,A.zb,A.zb,[]),E.Ab(1073742336,R.a,R.a,[]),E.Ab(1073742336,c.n,c.n,[[2,c.s],[2,c.m]]),E.Ab(1073742336,m,m,[]),E.Ab(1073742336,n,n,[]),E.Ab(1024,c.k,(function(){return[[{path:"",component:a}]]}),[])])}))}}]);