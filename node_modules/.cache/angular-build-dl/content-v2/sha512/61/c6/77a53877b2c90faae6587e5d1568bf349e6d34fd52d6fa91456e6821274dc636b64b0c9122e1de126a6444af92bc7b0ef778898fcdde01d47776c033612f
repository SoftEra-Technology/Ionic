(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{mWic:function(t,e,T){"use strict";T.r(e);var E=T("8Y7J");class n{}var I=T("pMnS"),D=T("MKJQ"),l=T("sZkV"),A=T("SVse"),S=T("mrSG"),_=T("6GXZ"),o=T("9mtz"),i=T("kwUn"),r=T("ZNON");class s{constructor(t,e,T,E,n){this.platform=t,this.sqlite=e,this.userService=T,this.router=E,this.networkServiceService=n,this.database_name="AUDIT_DB.db",this.showSpinner=!1,this.store=new o.a,this.platform.ready().then(()=>{this.createDB()}).catch(t=>{console.log(t)})}checkconnection_serve(){this.check_status=this.networkServiceService.getCurrentNetworkStatus()}logoff(){this.router.navigate(["home"])}GotoNewAudit(){this.router.navigate(["new-audit"])}GotoCloseAudit(){this.router.navigate(["close-audit"])}GotoOpenAudit(){this.router.navigate(["open-audit"])}createDB(){console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then(t=>{this.databaseObj=t,this.getRows(),this.CreateAllTables(),this.create_storetable(),this.fetchAttemptedOpenAuditCount()}).catch(t=>{alert("error "+JSON.stringify(t))})}getRows(){this.databaseObj.executeSql("SELECT * FROM USER_TB",[]).then(t=>{if(this.row_data=[],t.rows.length>0)for(var e=0;e<t.rows.length;e++)this.row_data.push(t.rows.item(e)),console.log(this.row_data[e].toString())}).catch(t=>{alert("error "+JSON.stringify(t))})}ngOnInit(){}Get_Sync(){return S.a(this,void 0,void 0,(function*(){this.checkconnection_serve(),this.fetchAttemptedOpenAuditCount(),console.log("Total Count AttemptedOpen AuditCount"),console.log(this.Count_AttemptedOpenAuditCount),console.log(this.Count_AttemptedOpenAuditCount[0].CNT),0===this.Count_AttemptedOpenAuditCount[0].CNT?0===this.check_status?(this.get_all_store_api(),this.Delelete_All_data(),this.showSpinner=!0,this.Get_AllAudit()):1===this.check_status&&alert("Please Check Connection"):alert("Please Close Open Audit")}))}Get_AllAudit(){var t="00"+this.row_data[0].EMP_ID.toString();console.log("auditor id: "+t);try{this.userService.Get_Audit_By_Auditor(t).subscribe(t=>{if(console.log(t),this.yser_ss=t,console.log(this.yser_ss.Audits[0].AuditName),console.log(this.yser_ss.Audits[0].AuditId),this.yser_ss.Audits.length>0)for(var e=this.yser_ss,T=0;T<=this.yser_ss.Audits.length-1;T++)console.log(this.yser_ss),this.Get_all_Audit_with_question(e.Audits[T].AuditId);this.showSpinner=!1})}catch(e){alert("Please Check Connection")}}Get_all_Audit_with_question(t){try{this.userService.Get_Audit_By_Id(t).subscribe(t=>{this.auditResponce=t,this.datafrom_server()})}catch(e){alert("Please Check Connection")}}datafrom_server(){if(console.log("NEW AUDIT iNSERTION"),console.log(this.auditResponce),console.log(this.auditResponce.StatusFl),this.createAudit(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.AuditName,this.auditResponce.Audt.AuditTypeId.toString(),this.auditResponce.Audt.AuditType,this.auditResponce.Audt.AuditStage,this.auditResponce.Audt.AuditPoints.toString(),this.auditResponce.Audt.QuestionCount.toString()),this.auditResponce.Audt.Sections.length>0)for(var t=0;t<=this.auditResponce.Audt.Sections.length-1;t++)if(this.createSection(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].ParentSectionId.toString(),this.auditResponce.Audt.Sections[t].SectionName,this.auditResponce.Audt.Sections[t].SectionDesc,this.auditResponce.Audt.Sections[t].SectionOrder.toString(),this.auditResponce.Audt.Sections[t].SectionPoint.toString(),this.auditResponce.Audt.Sections[t].TQuestionCount.toString(),this.auditResponce.Audt.Sections[t].QuestionCount.toString(),this.auditResponce.Audt.Sections[t].CQuestionCount.toString()),this.auditResponce.Audt.Sections[t].Questions.length>0)for(var e=0;e<=this.auditResponce.Audt.Sections[t].Questions.length-1;e++){if(this.createQuestion(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionTypeId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionName.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionType,this.auditResponce.Audt.Sections[t].Questions[e].QuestionOrder.toString(),this.auditResponce.Audt.Sections[t].Questions[e].IsNC,this.auditResponce.Audt.Sections[t].Questions[e].QuestionPoint.toString()),console.log("insering question"),console.log(this.auditResponce.Audt.Sections[t].Questions[e].QuestionName),console.log(this.auditResponce.Audt.Sections[t].Questions[e].QuestionType),"Choice"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[e].Choice.length>0)for(var T=0;T<this.auditResponce.Audt.Sections[t].Questions[e].Choice.length-1;T++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[T].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[T].Choice,this.auditResponce.Audt.Sections[t].Questions[e].Choice[T].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[T].Comments.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Choice[T].IsNegative);if("Yes/No"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&this.auditResponce.Audt.Sections[t].Questions[e].YesNo.length>0)for(var E=0;E<this.auditResponce.Audt.Sections[t].Questions[e].YesNo.length-1;E++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[E].ChoiceId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[E].Choice,this.auditResponce.Audt.Sections[t].Questions[e].YesNo[E].Marks.toString(),this.auditResponce.Audt.Sections[t].Questions[e].YesNo[E].Comments,this.auditResponce.Audt.Sections[t].Questions[e].YesNo[E].IsNegative);if("Standard"==this.auditResponce.Audt.Sections[t].Questions[e].QuestionType&&0!=this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id&&(this.createQStandard(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Type,this.auditResponce.Audt.Sections[t].Questions[e].Standard.MinRange,this.auditResponce.Audt.Sections[t].Questions[e].Standard.MaxRange,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Fix,this.auditResponce.Audt.Sections[t].Questions[e].Standard.UoM,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Field,this.auditResponce.Audt.Sections[t].Questions[e].Standard.Multiple),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues.length>0))for(var n=0;n<this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues.length-1;n++)this.createQStandardPreDefined(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[t].SectionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].QuestionId.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues[n].Id.toString(),this.auditResponce.Audt.Sections[t].Questions[e].Standard.PreDefinedValues[n].Name.toString())}}CreateAllTables(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,AUDIT_TYPE_ID integer not null,AUDIT_TYPE text not null,AUDIT_STAGE text not null,AUDIT_PT integer not null,QUESTION_COUNT integer not null);",[]).then(()=>{console.log("Table Audit Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS SECTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then(()=>{console.log("Table section Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null);",[]).then(()=>{console.log("Table section Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS_REQUIRED text not null,IS_NEGATIVE text not null);",[]).then(()=>{console.log("Table QUESTION_CHOICE_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_STANDARD_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,STANDARD_TYPE text not null,MIN_RANGE text,MAX_RANGE text,FIX text,UOM text,FIELD_LABEL text,IS_PREDEFINED text);",[]).then(()=>{console.log("Table QUESTION_STANDARD_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS QUESTION_STANDARD_PREDEFINED_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null);",[]).then(()=>{console.log("Table section Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_OPTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,SCORABLE_FL text not null);",[]).then(()=>{console.log("Table section Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_RANGE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS_REQUIRED text not null);",[]).then(()=>{console.log("Table QUESTION_STANDARD_PREDEFINED_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS QUESTION_FIELDS_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,FIELD_NAME text not null,FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null);",[]).then(()=>{console.log("Table QUESTION_FIELDS_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_VALUE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,VALUE_ID not null,VALUE_NAME text not null,DEFAULT_VALUE text not null);",[]).then(()=>{console.log("Table section Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS FIELDS_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,CHOICE_ID not null,CHOICE_TEXT text not null,CHOICE_PT integer not null);",[]).then(()=>{console.log("Table FIELDS_VALUE_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_TB(ATTEMPTED_ID integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,STR_CODE text not null,STR_NAME text not null,USER_ID text not null,STR_MANAGER text not null,AUDIT_DT text not null,AUDIT_STATUS text not null,UNIQUE_ID text not null,AUDIT_FINDINGS text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,QUESTION_ANSWERED integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_SECTION Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null,MARKS_SCORED integer not null,QUESTION_STATUS text not null,QUESTION_COMMENT text not null,IMAGE_NAME text not null,IS_INCLUDED text not null,IMAGE_PUSHED text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS_CHOICE Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,FIELD_VALUE text,COMMENTS text,CHOICE_VALUE text,POINTS integer not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null,VALUE_OBSERVED text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_OPTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,OPTION_TEXT_VALUE text not null,POINTS integer not null,ISSCORABLE text);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS_OPTION Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_RANGE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS text);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTIONS_RANGE Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_RECIVING_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,UNLOAD_START_TIME text,UNLOAD_END_TIME text,VEHICLE_NO text,TEMPERATURE text);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_RECIVING_QUESTIONS Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,OTHER_FIELD_ID integer not null,OTHER_FIELD_NAME text not null,OTHER_FIELD_TYPE text not null,OTHER_FIELD_ISKEY text not null,OTHER_FIELD_VALUE_ID integer not null,OTHER_FIELD_VALUE text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE Table IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,CHOICE_FIELD_ID integer not null,CHOIC_FIELD_NAME text not null,CHOICE_FIELD_TYPE text not null,CHOICE_FIELD_ISKEY text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,CHOICE_PT integer not null,CHECKED Text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE  IF NOT EXISTS AUDIT_ERROR_LOG(ID integer primary key autoincrement,SCREEN_NAME text not null,FUNCTION_NAME text not null,EXCEPTION text not null);",[]).then(()=>{console.log("Table AUDIT_ERROR_LOG Created!")}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,STR_CODE text not null,UNIQUE_ID text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);",[]).then(()=>{console.log("Table AUDIT_ATTEMPTED_IMAGES_TB Created!")}).catch(t=>{alert("error "+JSON.stringify(t))})}create_storetable(){this.databaseObj.executeSql("CREATE TABLE IF NOT EXISTS STORE_TB(_id integer primary key autoincrement,STR_CODE text not null,STR_NAME text not null);",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}get_all_store_api(){var t=this.row_data[0].BU_ID.toString(),e="00"+this.row_data[0].EMP_ID.toString();this.store.StrCode=t,this.store.StrName=e,console.log(this.store),this.userService.Get_All_Store(this.store).subscribe(t=>{if(this.storeResponse=t,console.log(this.storeResponse),this.storeResponse.Stores.length>0)for(var e=0;e<=this.storeResponse.Stores.length-1;e++)console.log(this.yser_ss),this.insert_store(this.storeResponse.Stores[e].StrCode,this.storeResponse.Stores[e].StrName)})}insert_store(t,e){this.databaseObj.executeSql("INSERT INTO STORE_TB(STR_CODE,STR_NAME) VALUES('"+t+"','"+e+"')",[]).then(()=>{this.getstore()}).catch(t=>{alert("error "+JSON.stringify(t))})}getstore(){this.databaseObj.executeSql("SELECT * FROM STORE_TB",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0)for(var e=0;e<t.rows.length;e++)this.row_store.push(t.rows.item(e))}).catch(t=>{alert("error "+JSON.stringify(t))})}deleteStore(){this.databaseObj.executeSql("DELETE FROM STORE_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))})}AttemptedOpenAuditCount(t,e){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB t WHERE AUDIT_ID="+t+" AND AUDIT_STATUS='Open' AND STR_CODE='"+e+"'",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0)for(var e=0;e<t.rows.length;e++)this.count_AttemptedOpenAuditCount.push(t.rows.item(e))}).catch(t=>{alert("error "+JSON.stringify(t))})}Delelete_All_data(){this.databaseObj.executeSql("DELETE FROM AUDIT_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM SECTION_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM QUESTION_STANDARD_PREDEFINED_TB",[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))})}deleteAudit(t){this.databaseObj.executeSql("DELETE FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteSection(t){this.databaseObj.executeSql("DELETE FROM SECTION_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQuestion(t){this.databaseObj.executeSql("DELETE FROM QUESTION_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQChoice(t){this.databaseObj.executeSql("DELETE FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQOption(t){this.databaseObj.executeSql("DELETE FROM QUESTION_OPTION_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQRange(t){this.databaseObj.executeSql("DELETE FROM QUESTION_RANGE_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQField(t){this.databaseObj.executeSql("DELETE FROM QUESTION_FIELDS_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQFieldValue(t){this.databaseObj.executeSql("DELETE FROM FIELDS_VALUE_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}deleteQFieldChoice(t){this.databaseObj.executeSql("DELETE FROM FIELDS_CHOICE_TB WHERE AUDIT_ID="+t,[]).then(t=>(console.log(t),!0)).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAllAudits(){this.databaseObj.executeSql("SELECT *  FROM AUDIT_TB",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AllAudits.push(t.rows.item(e));return this.AllAudits}}).catch(t=>{alert("error "+JSON.stringify(t))})}createAudit(t,e,T,E,n,I,D){this.databaseObj.executeSql("INSERT INTO AUDIT_TB (AUDIT_ID, AUDIT_NAME,AUDIT_TYPE_ID,AUDIT_TYPE,AUDIT_STAGE,AUDIT_PT, QUESTION_COUNT) VALUES("+t+",'"+e+"',"+T+",'"+E+"','"+n+"',"+I+","+D+")",[]).then(t=>(console.log(t),!0)).catch(t=>{console.log("error "+JSON.stringify(t))})}createSection(t,e,T,E,n,I,D,l,A,S){this.databaseObj.executeSql("INSERT INTO SECTION_TB(AUDIT_ID, SECTION_ID, PARENT_SECTION_ID, SECTION_NAME, SECTION_DESC, SECTION_ORDER, SECTION_PT, T_QUESTION_COUNT, S_QUESTION_COUNT, C_QUESTION_COUNT ) VALUES("+t+","+e+","+T+",'"+E+"','"+n+"',"+I+","+D+","+l+","+A+","+S+")",[]).then(t=>(console.log(t),!0)).catch(t=>{console.log("error "+JSON.stringify(t))})}createQuestion(t,e,T,E,n,I,D,l,A){this.databaseObj.executeSql("INSERT INTO QUESTION_TB(AUDIT_ID, SECTION_ID, QUESTION_ID, QUESTION_TYPE_ID, QUESTION_NAME, QUESTION_TYPE, QUESTION_ORDER, IS_CRITICAL, QUESTION_MARKS) VALUES("+t+","+e+","+T+","+E+",'"+n+"','"+I+"',"+D+",'"+l+"',"+A+")",[]).then(t=>(console.log(t),!0)).catch(t=>{console.log("error "+JSON.stringify(t))})}createQChoice(t,e,T,E,n,I,D,l){this.databaseObj.executeSql("INSERT INTO QUESTION_CHOICE_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,CHOICE_ID,CHOICE_TEXT,POINTS,COMMENTS_REQUIRED,IS_NEGATIVE) VALUES("+t+","+e+","+T+","+E+",'"+n+"',"+I+",'"+D+"','"+l+"')",[]).then(t=>(console.log(t),!0)).catch(t=>{console.log("error "+JSON.stringify(t))})}fetchAttemptedCompletedAuditByUser(t){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='"+t+"' AND AUDIT_STATUS='Close'",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedCompletedAuditByUser.push(t.rows.item(e));return this.AttemptedCompletedAuditByUser}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchImageNotPushedAttemptedQuestionBySQL(t,e){this.databaseObj.executeSql("SELECT AUDIT_ID,SECTION_ID,QUESTION_ID,0 AS KEY_FIELD_VALUE_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE QUESTION_STATUS='Done' AND ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null' UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTION_FIELD X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+e+" UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.VALUE_ID AS KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID="+t+" AND X.AUDIT_ID="+e,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.ImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(e));return this.ImageNotPushedAttemptedQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedOpenAuditCount(){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_STATUS='Open'",[]).then(t=>{if(this.Count_AttemptedOpenAuditCount=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.Count_AttemptedOpenAuditCount.push(t.rows.item(e));return console.log(this.Count_AttemptedOpenAuditCount),this.Count_AttemptedOpenAuditCount}}).catch(t=>{alert("error "+JSON.stringify(t))})}deletAttemptedAuditById(t){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_RECIVING_QUESTIONS WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_OPTION WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))}),this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t,[]).then(t=>{console.log(t)}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedQuestionBySQL(t,e,T){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+" ORDER BY QUESTION_ORDER",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedQuestionBySQL.push(t.rows.item(e));return this.AttemptedQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedQuestionChoiceBySQL(t,e,T){this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.QUESTION_ID="+T,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedQuestionBySQL.push(t.rows.item(e));return this.AttemptedQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedAuditPrevQuestionBySQL(t,e,T,E){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+T+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+T+" AND QUESTION_ID="+E+"))",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedAuditPrevQuestionBySQL.push(t.rows.item(e));return this.AttemptedAuditPrevQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchPrevAttemptedSection(t,e,T){this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+"))",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.PrevAttemptedSection.push(t.rows.item(e));return this.PrevAttemptedSection}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedAuditNextQuestionBySQL(t,e,T,E){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND SECTION_ID="+e+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+T+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND SECTION_ID="+e+" AND AUDIT_ID="+T+" AND QUESTION_ID="+E+"))",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedAuditNextQuestionBySQL.push(t.rows.item(e));return this.AttemptedAuditNextQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchNextAttemptedSection(t,e,T){this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+t+" AND A.AUDIT_ID="+e+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND SECTION_ID="+T+")",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.NextAttemptedSection.push(t.rows.item(e));return this.NextAttemptedSection}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchQuestionById(t,e,T){this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.QuestionById.push(t.rows.item(e));return this.QuestionById}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchQuestionBased(t,e,T){this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+t+" AND QUESTION_ID="+T,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.QuestionBased.push(t.rows.item(e));return this.QuestionBased}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchQuestionBasedValues(t,e,T,E){this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.QuestionBasedValues.push(t.rows.item(e));return this.QuestionBasedValues}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchQuestionChoice(t,e,T){this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND QUESTION_ID="+T,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.QuestionChoice.push(t.rows.item(e));return this.QuestionChoice}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchTopAttemptedSection(t,e){this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.QuestionChoice.push(t.rows.item(e));return this.QuestionChoice}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchSLAttemptedSection(t,e,T){this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+T+" AND PARENT_SECTION_ID="+e,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.SLAttemptedSection_check.push(t.rows.item(e));return this.SLAttemptedSection_check}}).catch(t=>{alert("error "+JSON.stringify(t))}),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.SLAttemptedSection.push(t.rows.item(e));return this.SLAttemptedSection}}).catch(t=>{alert("error "+JSON.stringify(t))}):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.SLAttemptedSection.push(t.rows.item(e));return this.SLAttemptedSection}}).catch(t=>{alert("error "+JSON.stringify(t))}):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+t+" AND A.PARENT_SECTION_ID="+e+" ORDER BY A.SECTION_ORDER",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.SLAttemptedSection.push(t.rows.item(e));return this.SLAttemptedSection}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchGenericImageNotPushedAttemptedQuestionBySQL(t,e){this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.GenericImageNotPushedAttemptedQuestionBySQL.push(t.rows.item(e));return this.GenericImageNotPushedAttemptedQuestionBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}DeleteGenericImages(t,e){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+e,[])}SaveGenericImage(t,e,T,E,n,I){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+t+","+T+",'"+E+"','"+e+"','"+n+"','No')",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}UpdateAuditFindings(t,e,T,E){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+E.replace("'","''")+"' WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND UNIQUE_ID='"+e+"'",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}GetAuditFindings(t,e,T){this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+T+" AND UNIQUE_ID='"+e+"'",[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AuditFindings.push(t.rows.item(e));return this.AuditFindings}}).catch(t=>{alert("error "+JSON.stringify(t))})}createQStandard(t,e,T,E,n,I,D,l,A,S,_){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+t+","+e+","+T+","+E+",'"+n+"','"+I+"','"+D+"','"+l+"','"+A+"','"+S+"','"+_+"')",[]).then(()=>{console.log("data inserted")}).catch(t=>{console.log("error "+JSON.stringify(t))})}createQStandardPreDefined(t,e,T,E,n,I){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+t+","+e+","+T+","+E+","+n+",'"+I+"')",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedQuestionStandardBySQL(t,e,T){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND QUESTION_ID="+T,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedQuestionStandardBySQL.push(t.rows.item(e));return this.AttemptedQuestionStandardBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}fetchAttemptedQuestionStandardValueBySQL(t,e,T,E){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+t+" AND AUDIT_ID="+e+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.AttemptedQuestionStandardValueBySQL.push(t.rows.item(e));return this.AttemptedQuestionStandardValueBySQL}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkAudit(t){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_TB WHERE AUDIT_ID="+t,[]).then(t=>{if(this.row_store=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckAudit.push(t.rows.item(e));return this.CheckAudit}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkSection(t,e){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM SECTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e,[]).then(t=>{if(this.CheckSection=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckSection.push(t.rows.item(e));return this.CheckSection}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkQuestion(t,e,T){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T,[]).then(t=>{if(this.CheckQuestion=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckQuestion.push(t.rows.item(e));return this.CheckQuestion}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkQuestionChoice(t,e,T,E){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T+" AND CHOICE_ID="+E,[]).then(t=>{if(this.CheckQuestionChoice=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckQuestionChoice.push(t.rows.item(e));return this.CheckQuestionChoice}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkQuestionStandard(t,e,T,E){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E,[]).then(t=>{if(this.CheckQuestionStandard=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckQuestionStandard.push(t.rows.item(e));return this.CheckQuestionStandard}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkQuestionStandardPreDefined(t,e,T,E,n){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+t+" AND SECTION_ID="+e+" AND QUESTION_ID="+T+" AND STANDARD_ID="+E+" AND VALUE_ID="+n,[]).then(t=>{if(this.CheckQuestionStandardPreDefined=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckQuestionStandardPreDefined.push(t.rows.item(e));return this.CheckQuestionStandardPreDefined}}).catch(t=>{alert("error "+JSON.stringify(t))})}ChkAttemptAudit(t){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_ID="+t,[]).then(t=>{if(this.CheckAttemptAudit=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.CheckAttemptAudit.push(t.rows.item(e));return this.CheckAttemptAudit}}).catch(t=>{alert("error "+JSON.stringify(t))})}createSection1(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,QUESTION_ANSWERED,S_QUESTION_COUNT,C_QUESTION_COUNT) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,'' AS QUESTION_ANSWERED,A.S_QUESTION_COUNT,A.C_QUESTION_COUNT FROM SECTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_SECTION C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID WHERE A.AUDIT_ID="+t+" AND C.SECTION_ID IS NULL",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}createQuestion1(t){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IMAGE_NAME,IS_INCLUDED,IMAGE_PUSHED) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.QUESTION_TYPE_ID,A.QUESTION_NAME,A.QUESTION_TYPE,A.QUESTION_ORDER,A.IS_CRITICAL,A.QUESTION_MARKS,0 AS MARKS_SCORED,'Open' AS QUESTION_STATUS,'' AS QUESTION_COMMENT,'' AS IMAGE_NAME,'Yes' AS IS_INCLUDED,'Yes' AS IMAGE_PUSHED FROM QUESTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_QUESTIONS C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID AND A.QUESTION_ID=C.QUESTION_ID WHERE A.AUDIT_ID="+t+" AND C.QUESTION_ID IS NULL",[]).then(()=>{}).catch(t=>{alert("error "+JSON.stringify(t))})}ValidateUser(t,e){this.databaseObj.executeSql("SELECT COUNT(*) AS CNT FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+e+"'",[]).then(t=>{if(this.ValidateUser_arry=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.ValidateUser_arry.push(t.rows.item(e));return this.ValidateUser_arry}}).catch(t=>{alert("error "+JSON.stringify(t))})}GetUsrDetails(t,e){this.databaseObj.executeSql("SELECT * FROM USER_TB WHERE EMP_ID='"+t+"' AND PASSWORD='"+e+"'",[]).then(t=>{if(this.GetUsrDetails_arry=[],console.log(t),t.rows.length>0){for(var e=0;e<t.rows.length;e++)this.GetUsrDetails_arry.push(t.rows.item(e));return this.GetUsrDetails_arry}}).catch(t=>{alert("error "+JSON.stringify(t))})}}var N=T("iInd"),O=E.ob({encapsulation:0,styles:[["ion-content.background[_ngcontent-%COMP%]{--ion-background-color:black!important}.div_button[_ngcontent-%COMP%]{background-color:#fff}.main_div[_ngcontent-%COMP%]{margin-top:5em;margin-left:1em;margin-right:1em}"]],data:{}});function u(t){return E.Hb(0,[(t()(),E.qb(0,0,null,null,1,"ion-spinner",[["color","secondary"],["name","bubble"]],null,null,null,D.D,D.o)),E.pb(1,49152,null,0,l.mb,[E.h,E.k,E.x],{color:[0,"color"],name:[1,"name"]},null)],(function(t,e){t(e,1,0,"secondary","bubble")}),null)}function a(t){return E.Hb(0,[(t()(),E.qb(0,0,null,null,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),E.Gb(1,null,["User : ",""]))],null,(function(t,e){t(e,1,0,e.context.$implicit.EMP_NAME)}))}function c(t){return E.Hb(0,[(t()(),E.qb(0,0,null,null,13,"ion-header",[],null,null,null,D.u,D.f)),E.pb(1,49152,null,0,l.y,[E.h,E.k,E.x],null,null),(t()(),E.qb(2,0,null,0,11,"div",[["style","background-color: black; align-content: center;"]],null,null,null,null,null)),(t()(),E.qb(3,0,null,null,10,"table",[["style","margin-left: 10px; margin-top: 5px; margin-bottom: 2px;"]],null,null,null,null,null)),(t()(),E.qb(4,0,null,null,9,"tbody",[],null,null,null,null,null)),(t()(),E.qb(5,0,null,null,8,"tr",[],null,null,null,null,null)),(t()(),E.qb(6,0,null,null,2,"td",[],null,null,null,null,null)),(t()(),E.qb(7,0,null,null,1,"span",[["style","margin-top:20px; margin-left: 5px; margin-top: 1px;"]],null,null,null,null,null)),(t()(),E.qb(8,0,null,null,0,"img",[["height","35"],["src","../../assets/tablez.png"],["width","35"]],null,null,null,null,null)),(t()(),E.qb(9,0,null,null,1,"td",[],null,null,null,null,null)),(t()(),E.Gb(-1,null,["\xa0"])),(t()(),E.qb(11,0,null,null,2,"td",[],null,null,null,null,null)),(t()(),E.qb(12,0,null,null,1,"span",[["style","color: white; margin-top: 1px;"]],null,null,null,null,null)),(t()(),E.Gb(-1,null,["Home"])),(t()(),E.qb(14,0,null,null,31,"ion-content",[],null,null,null,D.r,D.c)),E.pb(15,49152,null,0,l.r,[E.h,E.k,E.x],null,null),(t()(),E.qb(16,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(17,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(18,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(19,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),E.qb(20,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,T){var E=!0;return"click"===e&&(E=!1!==t.component.Get_Sync()&&E),E}),D.q,D.b)),E.pb(21,49152,null,0,l.h,[E.h,E.k,E.x],{expand:[0,"expand"]},null),(t()(),E.Gb(-1,0,["Sync Definition"])),(t()(),E.qb(23,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.fb(16777216,null,0,1,null,u)),E.pb(25,16384,null,0,A.i,[E.L,E.I],{ngIf:[0,"ngIf"]},null),(t()(),E.qb(26,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),E.qb(27,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,T){var E=!0;return"click"===e&&(E=!1!==t.component.GotoNewAudit()&&E),E}),D.q,D.b)),E.pb(28,49152,null,0,l.h,[E.h,E.k,E.x],{expand:[0,"expand"]},null),(t()(),E.Gb(-1,0,["New Audit"])),(t()(),E.qb(30,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(31,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),E.qb(32,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,T){var E=!0;return"click"===e&&(E=!1!==t.component.GotoOpenAudit()&&E),E}),D.q,D.b)),E.pb(33,49152,null,0,l.h,[E.h,E.k,E.x],{expand:[0,"expand"]},null),(t()(),E.Gb(-1,0,["Open Audit(s)"])),(t()(),E.qb(35,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(36,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),E.qb(37,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,T){var E=!0;return"click"===e&&(E=!1!==t.component.GotoCloseAudit()&&E),E}),D.q,D.b)),E.pb(38,49152,null,0,l.h,[E.h,E.k,E.x],{expand:[0,"expand"]},null),(t()(),E.Gb(-1,0,["Close Audit(s)"])),(t()(),E.qb(40,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(41,0,null,0,3,"div",[["style","background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;"]],null,null,null,null,null)),(t()(),E.qb(42,0,null,null,2,"ion-button",[["expand","full"]],null,[[null,"click"]],(function(t,e,T){var E=!0;return"click"===e&&(E=!1!==t.component.logoff()&&E),E}),D.q,D.b)),E.pb(43,49152,null,0,l.h,[E.h,E.k,E.x],{expand:[0,"expand"]},null),(t()(),E.Gb(-1,0,["Log Off"])),(t()(),E.qb(45,0,null,0,0,"br",[],null,null,null,null,null)),(t()(),E.qb(46,0,null,null,7,"ion-footer",[["class","ion-no-border"]],null,null,null,D.t,D.e)),E.pb(47,49152,null,0,l.w,[E.h,E.k,E.x],null,null),(t()(),E.fb(16777216,null,0,1,null,a)),E.pb(49,278528,null,0,A.h,[E.L,E.I,E.q],{ngForOf:[0,"ngForOf"]},null),(t()(),E.qb(50,0,null,0,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),E.Gb(-1,null,["Powered by : SoftEra Audit v3.0"])),(t()(),E.qb(52,0,null,0,1,"div",[["style","text-align: center;"]],null,null,null,null,null)),(t()(),E.Gb(-1,null,["Copyright \xa9 2020 SoftEra Technologies"]))],(function(t,e){var T=e.component;t(e,21,0,"full"),t(e,25,0,T.showSpinner),t(e,28,0,"full"),t(e,33,0,"full"),t(e,38,0,"full"),t(e,43,0,"full"),t(e,49,0,T.row_data)}),null)}function U(t){return E.Hb(0,[(t()(),E.qb(0,0,null,null,1,"app-dash-board",[],null,null,null,c,O)),E.pb(1,114688,null,0,s,[l.Cb,_.a,i.a,N.m,r.a],null,null)],(function(t,e){t(e,1,0)}),null)}var h=E.mb("app-dash-board",s,U,{},{},[]),C=T("s7LF");class R{}T.d(e,"DashBoardPageModuleNgFactory",(function(){return M}));var M=E.nb(n,[],(function(t){return E.zb([E.Ab(512,E.j,E.Y,[[8,[I.a,h]],[3,E.j],E.v]),E.Ab(4608,A.k,A.j,[E.s,[2,A.q]]),E.Ab(4608,C.n,C.n,[]),E.Ab(4608,l.a,l.a,[E.x,E.g]),E.Ab(4608,l.Ab,l.Ab,[l.a,E.j,E.p]),E.Ab(4608,l.Db,l.Db,[l.a,E.j,E.p]),E.Ab(1073742336,A.b,A.b,[]),E.Ab(1073742336,C.m,C.m,[]),E.Ab(1073742336,C.g,C.g,[]),E.Ab(1073742336,l.yb,l.yb,[]),E.Ab(1073742336,N.n,N.n,[[2,N.s],[2,N.m]]),E.Ab(1073742336,R,R,[]),E.Ab(1073742336,n,n,[]),E.Ab(1024,N.k,(function(){return[[{path:"",component:s}]]}),[])])}))}}]);