(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{WNRU:function(T,t,E){"use strict";E.r(t);var e=E("8Y7J");class l{}var I=E("MKJQ"),n=E("sZkV"),D=E("s7LF");class A{constructor(T,t){this.navParams=T,this.modalController=t,this.comment=this.navParams.get("comment")}ngOnInit(){}save_Comment(){this.comment="this is not good thing",this.dismiss()}close_Comment(){this.dismiss()}dismiss(){this.modalController.dismiss(this.comment)}}var _=e.ob({encapsulation:0,styles:[[""]],data:{}});function S(T){return e.Hb(0,[(T()(),e.qb(0,0,null,null,18,"ion-content",[],null,null,null,I.w,I.d)),e.pb(1,49152,null,0,n.r,[e.h,e.k,e.x],null,null),(T()(),e.qb(2,0,null,0,9,"ion-item",[],null,null,null,I.C,I.j)),e.pb(3,49152,null,0,n.E,[e.h,e.k,e.x],null,null),(T()(),e.qb(4,0,null,0,2,"ion-label",[],null,null,null,I.D,I.k)),e.pb(5,49152,null,0,n.K,[e.h,e.k,e.x],null,null),(T()(),e.Gb(-1,0,["Comment"])),(T()(),e.qb(7,0,null,0,4,"ion-textarea",[["cols","20"],["placeholder","Enter any Comment here..."],["rows","6"]],null,[[null,"ionBlur"],[null,"ionChange"]],(function(T,t,E){var l=!0;return"ionBlur"===t&&(l=!1!==e.Cb(T,10)._handleBlurEvent(E.target)&&l),"ionChange"===t&&(l=!1!==e.Cb(T,10)._handleInputEvent(E.target)&&l),l}),I.L,I.s)),e.Db(5120,null,D.h,(function(T){return[T]}),[n.Hb]),e.pb(9,49152,null,0,n.sb,[e.h,e.k,e.x],{cols:[0,"cols"],placeholder:[1,"placeholder"],rows:[2,"rows"]},null),e.pb(10,16384,null,0,n.Hb,[e.k],null,null),(T()(),e.Gb(11,0,["",""])),(T()(),e.qb(12,0,null,0,6,"div",[],null,null,null,null,null)),(T()(),e.qb(13,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.close_Comment()&&e),e}),I.u,I.b)),e.pb(14,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Exit"])),(T()(),e.qb(16,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.save_Comment()&&e),e}),I.u,I.b)),e.pb(17,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Save"]))],(function(T,t){T(t,9,0,"20","Enter any Comment here...","6"),T(t,14,0,"medium"),T(t,17,0,"medium")}),(function(T,t){T(t,11,0,t.component.comment)}))}function u(T){return e.Hb(0,[(T()(),e.qb(0,0,null,null,1,"app-question-comment",[],null,null,null,S,_)),e.pb(1,114688,null,0,A,[n.Cb,n.Ab],null,null)],(function(T,t){T(t,1,0)}),null)}var N=e.mb("app-question-comment",A,u,{},{},[]),i=E("pMnS"),o=E("SVse"),s=E("mrSG"),O=E("6GXZ"),r=E("xoVG"),h=E("kwUn"),a=E("Pn9U");class U{constructor(T,t,E,e,l,I,n,D){this.userService=T,this.router=t,this.network=E,this.platform=e,this.sqlite=l,this.activatedRoute=I,this.camera=n,this.modalController=D,this.database_name="AUDIT_DB.db",this.image="",this.activatedRoute.queryParams.subscribe(T=>{console.log(JSON.parse(T.value)),this.Query_data=JSON.parse(T.value),console.log("list page"),console.log(this.Query_data.AttemptedId)}),this.platform.ready().then(()=>{this.createDB()}).catch(T=>{console.log(T)})}ngOnInit(){}openCam(){this.camera.getPicture({quality:100,destinationType:this.camera.DestinationType.FILE_URI,encodingType:this.camera.EncodingType.JPEG,mediaType:this.camera.MediaType.PICTURE}).then(T=>{this.imageData=T,this.image=window.Ionic.WebView.convertFileSrc(T)},T=>{alert("error "+JSON.stringify(T))})}upload(){const T=(new Date).valueOf()+".jpeg",t=this.dataURItoBlob(this.imageData),E=new File([t],T,{type:"image/jpeg"});(new FormData).append("file",E)}dataURItoBlob(T){const t=window.atob(T),E=new ArrayBuffer(t.length),e=new Uint8Array(E);for(let l=0;l<t.length;l++)e[l]=t.charCodeAt(l);return new Blob([e],{type:"image/jpeg"})}Previous_Question(){1===this.Question_order?this.fetchPrevAttemptedSection(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id)):this.fetchAttemptedAuditPrevQuestionBySQL(Number(this.Attempted_id),Number(this.Section_id),Number(this.Query_data.AuditId),Number(this.Question_id))}Review_page(){this.router.navigate(["/list-audit"],{queryParams:{value:JSON.stringify({AttemptedId:this.Attempted_id,AuditId:this.Query_data.AuditId,Storeid:this.Query_data.Store_id})}})}Next_Question(){this.Total_Question===this.Question_order?this.fetchNextAttemptedSection(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id)):this.fetchAttemptedAuditNextQuestionBySQL(Number(this.Attempted_id),Number(this.Section_id),Number(this.Query_data.AuditId),Number(this.Question_id))}Add_Comment(){return s.a(this,void 0,void 0,(function*(){const T=yield this.modalController.create({component:A,componentProps:{comment:"Ok  Nice Job but"}});return T.onDidDismiss().then(T=>{console.log("data from model popup"),console.log(T)}),yield T.present()}))}View_Comment(){}createDB(){console.log("database created"),this.sqlite.create({name:this.database_name,location:"default"}).then(T=>{this.databaseObj=T,this.fetchAttemptedSection(Number(this.Query_data.AttemptedId),Number(this.Query_data.AuditId),Number(this.Query_data.SectionId)),this.fetchAttemptedQuestionBySQL(Number(this.Query_data.AttemptedId),Number(this.Query_data.AuditId),Number(this.Query_data.SectionId),Number(this.Query_data.QuestionID)),console.log("questionid: "+this.Query_data.QuestionID),this.fetchQuestionChoice(Number(this.Query_data.AuditId),Number(this.Query_data.SectionId),Number(this.Query_data.QuestionID))}).catch(T=>{alert("error "+JSON.stringify(T))})}Value_for_the_page(){if(this.AttemptedSection.length>0)for(var T=0;T<=this.AttemptedSection.length;T++)this.AttemptedSection[T].SECTION_ID===this.Query_data.SectionId&&(this.Attempted_id=this.AttemptedSection[T].ATTEMPTED_ID,this.Section_id=this.AttemptedSection[T].SECTION_ID,this.Section_Name=this.AttemptedSection[T].SECTION_NAME,this.Total_Question=this.AttemptedSection[T].T_QUESTION_COUNT)}value_for_the_page_question_choice(){"Yes/No"==this.Question_type||"Choice"==this.Question_type?this.fetchQuestionChoice(Number(this.Query_data.AuditId),Number(this.Section_id),Number(this.Question_id)):"Standard"==this.Question_type&&this.fetchAttemptedQuestionStandardBySQL(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Question_id))}fetchAttemptedSection(T,t,E){this.databaseObj.executeSql("SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.S_QUESTION_COUNT>0",[]).then(T=>{if(this.AttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedSection.push(T.rows.item(t));console.log("section in choice"),console.log(this.AttemptedSection)}}).catch(T=>{console.log("error "+JSON.stringify(T))})}fetchAttemptedQuestionBySQL(T,t,E,e){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+" ORDER BY QUESTION_ORDER",[]).then(T=>{if(this.AttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedQuestionBySQL.push(T.rows.item(t)),this.AttemptedQuestionBySQL[t].QUESTION_ID===this.Query_data.QuestionID&&(this.Question_id=this.AttemptedQuestionBySQL[t].QUESTION_ID,this.Question_order=this.AttemptedQuestionBySQL[t].QUESTION_ORDER,this.Question_name=this.AttemptedQuestionBySQL[t].QUESTION_NAME,this.Question_type=this.AttemptedQuestionBySQL[t].QUESTION_TYPE,this.Question_Marks=this.AttemptedQuestionBySQL[t].QUESTION_MARKS,this.Value_for_the_page(),this.value_for_the_page_question_choice());console.log("question in choice Value_for_the_page"),console.log(this.AttemptedQuestionBySQL)}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchAttemptedQuestionChoiceBySQL(T,t,E){this.databaseObj.executeSql("SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+t+" AND A.QUESTION_ID="+E,[]).then(T=>{if(this.AttemptedQuestionChoiceBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedQuestionChoiceBySQL.push(T.rows.item(t));console.log("choice of the  question"),console.log(this.AttemptedQuestionChoiceBySQL)}}).catch(T=>{alert("error "+JSON.stringify(T))}),console.log("akshay")}fetchAttemptedAuditPrevQuestionBySQL(T,t,E,e){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+t+" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+t+" AND AUDIT_ID="+E+" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+t+" AND AUDIT_ID="+E+" AND QUESTION_ID="+e+"))",[]).then(T=>{if(this.AttemptedAuditPrevQuestionBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedAuditPrevQuestionBySQL.push(T.rows.item(t));return this.Question_id=this.AttemptedAuditPrevQuestionBySQL[0].QUESTION_ID,this.Question_order=this.AttemptedAuditPrevQuestionBySQL[0].QUESTION_ORDER,this.Question_name=this.AttemptedAuditPrevQuestionBySQL[0].QUESTION_NAME,this.Question_type=this.AttemptedQuestionBySQL[0].QUESTION_TYPE,this.Question_Marks=this.AttemptedAuditPrevQuestionBySQL[0].QUESTION_MARKS,this.value_for_the_page_question_choice(),this.AttemptedAuditPrevQuestionBySQL}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchPrevAttemptedSection(T,t,E){this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+t+" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+"))",[]).then(T=>{if(this.PrevAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.PrevAttemptedSection.push(T.rows.item(t));this.Attempted_id=this.PrevAttemptedSection[0].ATTEMPTED_ID,this.Section_id=this.PrevAttemptedSection[0].SECTION_ID,this.Section_Name=this.PrevAttemptedSection[0].SECTION_NAME,this.Total_Question=this.PrevAttemptedSection[0].T_QUESTION_COUNT,this.fetchAttemptedQuestionBySQLForSectionChange(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id))}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchAttemptedAuditNextQuestionBySQL(T,t,E,e){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND SECTION_ID="+t+" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+t+" AND AUDIT_ID="+E+" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND SECTION_ID="+t+" AND AUDIT_ID="+E+" AND QUESTION_ID="+e+"))",[]).then(T=>{if(this.AttemptedAuditNextQuestionBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedAuditNextQuestionBySQL.push(T.rows.item(t));this.Question_id=this.AttemptedAuditNextQuestionBySQL[0].QUESTION_ID,this.Question_order=this.AttemptedAuditNextQuestionBySQL[0].QUESTION_ORDER,this.Question_name=this.AttemptedAuditNextQuestionBySQL[0].QUESTION_NAME,this.Question_type=this.AttemptedAuditNextQuestionBySQL[0].QUESTION_TYPE,this.Question_Marks=this.AttemptedAuditNextQuestionBySQL[0].QUESTION_MARKS,this.value_for_the_page_question_choice()}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchNextAttemptedSection(T,t,E){this.databaseObj.executeSql("SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID="+T+" AND A.AUDIT_ID="+t+" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+")",[]).then(T=>{if(this.NextAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.NextAttemptedSection.push(T.rows.item(t));this.Attempted_id=this.NextAttemptedSection[0].ATTEMPTED_ID,this.Section_id=this.NextAttemptedSection[0].SECTION_ID,this.Section_Name=this.NextAttemptedSection[0].SECTION_NAME,this.Total_Question=this.NextAttemptedSection[0].T_QUESTION_COUNT,this.fetchAttemptedQuestionBySQLForSectionChange(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Section_id))}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchAttemptedQuestionBySQLForSectionChange(T,t,E){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND SECTION_ID="+E+" ORDER BY QUESTION_ORDER",[]).then(T=>{if(this.AttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedQuestionBySQL.push(T.rows.item(t));this.Question_id=this.AttemptedQuestionBySQL[0].QUESTION_ID,this.Question_order=this.AttemptedQuestionBySQL[0].QUESTION_ORDER,this.Question_name=this.AttemptedQuestionBySQL[0].QUESTION_NAME,this.Question_type=this.AttemptedQuestionBySQL[0].QUESTION_TYPE,this.Question_Marks=this.AttemptedQuestionBySQL[0].QUESTION_MARKS,console.log("question in choice Value_for_the_page"),console.log(this.AttemptedQuestionBySQL),this.value_for_the_page_question_choice()}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchQuestionById(T,t,E){this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+t+") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID="+T+" AND SECTION_ID="+t+" AND QUESTION_ID="+E,[]).then(T=>{if(this.QuestionById=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.QuestionById.push(T.rows.item(t));return this.Value_for_the_page(),this.QuestionById}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchQuestionBased(T,t,E){this.databaseObj.executeSql("SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID="+T+" AND QUESTION_ID="+E,[]).then(T=>{if(this.QuestionBased=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.QuestionBased.push(T.rows.item(t));return this.QuestionBased}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchQuestionBasedValues(T,t,E,e){this.databaseObj.executeSql("SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID="+T+" AND SECTION_ID="+t+" AND QUESTION_ID="+E+" AND STANDARD_ID="+e,[]).then(T=>{if(this.QuestionBasedValues=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.QuestionBasedValues.push(T.rows.item(t));return this.QuestionBasedValues}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchQuestionChoice(T,t,E){this.databaseObj.executeSql("SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID="+T+" AND QUESTION_ID="+E,[]).then(T=>{if(this.QuestionChoice=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.QuestionChoice.push(T.rows.item(t));console.log("choice value of this question"),console.log(this.QuestionChoice)}}).catch(T=>{console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))})}fetchTopAttemptedSection(T,t){this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER",[]).then(T=>{if(this.TopAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.QuestionChoice.push(T.rows.item(t));return this.QuestionChoice}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchSLAttemptedSection(T,t,E){this.databaseObj.executeSql("SELECT * FROM SECTION_TB WHERE AUDIT_ID="+E+" AND PARENT_SECTION_ID="+t,[]).then(T=>{if(this.SLAttemptedSection_check=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.SLAttemptedSection_check.push(T.rows.item(t));return this.SLAttemptedSection_check}}).catch(T=>{alert("error "+JSON.stringify(T))}),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then(T=>{if(this.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.SLAttemptedSection.push(T.rows.item(t));return this.SLAttemptedSection}}).catch(T=>{alert("error "+JSON.stringify(T))}):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then(T=>{if(this.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.SLAttemptedSection.push(T.rows.item(t));return this.SLAttemptedSection}}).catch(T=>{alert("error "+JSON.stringify(T))}):this.databaseObj.executeSql("SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID="+T+" AND A.PARENT_SECTION_ID="+t+" ORDER BY A.SECTION_ORDER",[]).then(T=>{if(this.SLAttemptedSection=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.SLAttemptedSection.push(T.rows.item(t));return this.SLAttemptedSection}}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchGenericImageNotPushedAttemptedQuestionBySQL(T,t){this.databaseObj.executeSql("SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'",[]).then(T=>{if(this.GenericImageNotPushedAttemptedQuestionBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.GenericImageNotPushedAttemptedQuestionBySQL.push(T.rows.item(t));return this.GenericImageNotPushedAttemptedQuestionBySQL}}).catch(T=>{alert("error "+JSON.stringify(T))})}DeleteGenericImages(T,t){this.databaseObj.executeSql("DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID="+t,[])}SaveGenericImage(T,t,E,e,l,I){this.databaseObj.executeSql("INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES("+T+","+E+",'"+e+"','"+t+"','"+l+"','No')",[]).then(()=>{}).catch(T=>{alert("error "+JSON.stringify(T))})}UpdateAuditFindings(T,t,E,e){this.databaseObj.executeSql("UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='"+e.replace("'","''")+"' WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND UNIQUE_ID='"+t+"'",[]).then(()=>{}).catch(T=>{alert("error "+JSON.stringify(T))})}GetAuditFindings(T,t,E){this.databaseObj.executeSql("SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+E+" AND UNIQUE_ID='"+t+"'",[]).then(T=>{if(this.AuditFindings=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AuditFindings.push(T.rows.item(t));return this.AuditFindings}}).catch(T=>{alert("error "+JSON.stringify(T))})}createQStandard(T,t,E,e,l,I,n,D,A,_,S){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES("+T+","+t+","+E+","+e+",'"+l+"','"+I+"','"+n+"','"+D+"','"+A+"','"+_+"','"+S+"')",[]).then(()=>{console.log("data inserted")}).catch(T=>{console.log("error "+JSON.stringify(T))})}createQStandardPreDefined(T,t,E,e,l,I){this.databaseObj.executeSql("INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES("+T+","+t+","+E+","+e+","+l+",'"+I+"')",[]).then(()=>{}).catch(T=>{alert("error "+JSON.stringify(T))})}fetchAttemptedQuestionStandardBySQL(T,t,E){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND QUESTION_ID="+E,[]).then(T=>{if(this.AttemptedQuestionStandardBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedQuestionStandardBySQL.push(T.rows.item(t));console.log("standard for this qustion"),console.log(this.AttemptedQuestionStandardBySQL),this.fetchAttemptedQuestionStandardValueBySQL(Number(this.Attempted_id),Number(this.Query_data.AuditId),Number(this.Question_id),Number(this.AttemptedQuestionStandardBySQL[0].STANDARD_ID))}}).catch(T=>{console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))})}fetchAttemptedQuestionStandardValueBySQL(T,t,E,e){this.databaseObj.executeSql("SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID="+T+" AND AUDIT_ID="+t+" AND QUESTION_ID="+E+" AND STANDARD_ID="+e,[]).then(T=>{if(this.AttemptedQuestionStandardValueBySQL=[],console.log(T),T.rows.length>0){for(var t=0;t<T.rows.length;t++)this.AttemptedQuestionStandardValueBySQL.push(T.rows.item(t));console.log("Attempted Question Standard Value"),console.log("AttemptedQuestionStandardValueBySQL")}}).catch(T=>{console.log("error "+JSON.stringify(T)),alert("error "+JSON.stringify(T))})}}var c=E("iInd"),C=e.ob({encapsulation:0,styles:[[""]],data:{}});function M(T){return e.Hb(0,[(T()(),e.qb(0,0,null,null,9,"div",[],null,null,null,null,null)),(T()(),e.qb(1,0,null,null,8,"ion-item",[],null,null,null,I.C,I.j)),e.pb(2,49152,null,0,n.E,[e.h,e.k,e.x],null,null),(T()(),e.qb(3,0,null,0,2,"ion-label",[],null,null,null,I.D,I.k)),e.pb(4,49152,null,0,n.K,[e.h,e.k,e.x],null,null),(T()(),e.Gb(5,0,["",""])),(T()(),e.qb(6,0,null,0,3,"ion-radio",[["color","tertiary"],["slot","start"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(T,t,E){var l=!0;return"ionBlur"===t&&(l=!1!==e.Cb(T,9)._handleBlurEvent(E.target)&&l),"ionSelect"===t&&(l=!1!==e.Cb(T,9)._handleIonSelect(E.target)&&l),l}),I.G,I.m)),e.Db(5120,null,D.h,(function(T){return[T]}),[n.Fb]),e.pb(8,49152,null,0,n.U,[e.h,e.k,e.x],{color:[0,"color"],value:[1,"value"]},null),e.pb(9,16384,null,0,n.Fb,[e.k],null,null)],(function(T,t){T(t,8,0,"tertiary",e.ub(1,"",t.context.$implicit.POINTS,""))}),(function(T,t){T(t,5,0,t.context.$implicit.CHOICE_TEXT)}))}function d(T){return e.Hb(0,[(T()(),e.qb(0,0,null,null,13,"ion-header",[],null,null,null,I.A,I.h)),e.pb(1,49152,null,0,n.y,[e.h,e.k,e.x],null,null),(T()(),e.qb(2,0,null,0,11,"div",[["style","background-color: black; align-content: center;"]],null,null,null,null,null)),(T()(),e.qb(3,0,null,null,10,"table",[["style","margin-left: 10px; margin-top: 5px; margin-bottom: 2px;"]],null,null,null,null,null)),(T()(),e.qb(4,0,null,null,9,"tbody",[],null,null,null,null,null)),(T()(),e.qb(5,0,null,null,8,"tr",[],null,null,null,null,null)),(T()(),e.qb(6,0,null,null,2,"td",[],null,null,null,null,null)),(T()(),e.qb(7,0,null,null,1,"span",[["style","margin-top:20px; margin-left: 5px; margin-top: 1px;"]],null,null,null,null,null)),(T()(),e.qb(8,0,null,null,0,"img",[["height","35"],["src","../../assets/tablez.png"],["width","35"]],null,null,null,null,null)),(T()(),e.qb(9,0,null,null,1,"td",[],null,null,null,null,null)),(T()(),e.Gb(-1,null,["\xa0"])),(T()(),e.qb(11,0,null,null,2,"td",[],null,null,null,null,null)),(T()(),e.qb(12,0,null,null,1,"span",[["style","color: white; margin-top: 1px;"]],null,null,null,null,null)),(T()(),e.Gb(-1,null,["Audit Choice Question"])),(T()(),e.qb(14,0,null,null,36,"ion-content",[],null,null,null,I.w,I.d)),e.pb(15,49152,null,0,n.r,[e.h,e.k,e.x],null,null),(T()(),e.qb(16,0,null,0,4,"div",[],null,null,null,null,null)),(T()(),e.qb(17,0,null,null,1,"h3",[["style","color: cornflowerblue;"]],null,null,null,null,null)),(T()(),e.Gb(18,null,["",""])),(T()(),e.qb(19,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(20,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(21,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.Gb(22,null,["Question "," of ",""])),(T()(),e.qb(23,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(24,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(25,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.Gb(26,null,[" Points: ","\xa0 \xa0\xa0\xa0 Score:"])),(T()(),e.qb(27,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(28,0,null,null,0,"br",[],null,null,null,null,null)),(T()(),e.qb(29,0,null,0,2,"div",[],null,null,null,null,null)),(T()(),e.qb(30,0,null,null,1,"h4",[],null,null,null,null,null)),(T()(),e.Gb(31,null,[""," "])),(T()(),e.qb(32,0,null,0,18,"div",[],null,null,null,null,null)),(T()(),e.qb(33,0,null,null,16,"ion-list",[],null,null,null,I.E,I.l)),e.pb(34,49152,null,0,n.L,[e.h,e.k,e.x],null,null),(T()(),e.qb(35,0,null,0,14,"ion-radio-group",[["value","0"]],null,[[null,"ionBlur"],[null,"ionChange"]],(function(T,t,E){var l=!0;return"ionBlur"===t&&(l=!1!==e.Cb(T,38)._handleBlurEvent(E.target)&&l),"ionChange"===t&&(l=!1!==e.Cb(T,38)._handleChangeEvent(E.target)&&l),l}),I.F,I.n)),e.Db(5120,null,D.h,(function(T){return[T]}),[n.Gb]),e.pb(37,49152,null,0,n.V,[e.h,e.k,e.x],{value:[0,"value"]},null),e.pb(38,16384,null,0,n.Gb,[e.k],null,null),(T()(),e.fb(16777216,null,0,1,null,M)),e.pb(40,278528,null,0,o.h,[e.L,e.I,e.q],{ngForOf:[0,"ngForOf"]},null),(T()(),e.qb(41,0,null,0,8,"ion-item",[],null,null,null,I.C,I.j)),e.pb(42,49152,null,0,n.E,[e.h,e.k,e.x],null,null),(T()(),e.qb(43,0,null,0,2,"ion-label",[],null,null,null,I.D,I.k)),e.pb(44,49152,null,0,n.K,[e.h,e.k,e.x],null,null),(T()(),e.Gb(-1,0,["NA"])),(T()(),e.qb(46,0,null,0,3,"ion-radio",[["color","tertiary"],["slot","start"],["value","0"]],null,[[null,"ionBlur"],[null,"ionSelect"]],(function(T,t,E){var l=!0;return"ionBlur"===t&&(l=!1!==e.Cb(T,49)._handleBlurEvent(E.target)&&l),"ionSelect"===t&&(l=!1!==e.Cb(T,49)._handleIonSelect(E.target)&&l),l}),I.G,I.m)),e.Db(5120,null,D.h,(function(T){return[T]}),[n.Fb]),e.pb(48,49152,null,0,n.U,[e.h,e.k,e.x],{color:[0,"color"],value:[1,"value"]},null),e.pb(49,16384,null,0,n.Fb,[e.k],null,null),(T()(),e.qb(50,0,null,null,0,"img",[],[[8,"src",4]],null,null,null,null)),(T()(),e.qb(51,0,null,null,43,"ion-footer",[["class","ion-no-border"]],null,null,null,I.y,I.f)),e.pb(52,49152,null,0,n.w,[e.h,e.k,e.x],null,null),(T()(),e.qb(53,0,null,0,41,"ion-grid",[],null,null,null,I.z,I.g)),e.pb(54,49152,null,0,n.x,[e.h,e.k,e.x],null,null),(T()(),e.qb(55,0,null,0,19,"ion-row",[],null,null,null,I.H,I.o)),e.pb(56,49152,null,0,n.db,[e.h,e.k,e.x],null,null),(T()(),e.qb(57,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(58,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(59,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(60,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.Add_Comment()&&e),e}),I.u,I.b)),e.pb(61,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Add Comm"])),(T()(),e.qb(63,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(64,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(65,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(66,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.View_Comment()&&e),e}),I.u,I.b)),e.pb(67,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["View Comm"])),(T()(),e.qb(69,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(70,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(71,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(72,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.openCam()&&e),e}),I.u,I.b)),e.pb(73,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Photo"])),(T()(),e.qb(75,0,null,0,19,"ion-row",[],null,null,null,I.H,I.o)),e.pb(76,49152,null,0,n.db,[e.h,e.k,e.x],null,null),(T()(),e.qb(77,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(78,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(79,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(80,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.Previous_Question()&&e),e}),I.u,I.b)),e.pb(81,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Previous"])),(T()(),e.qb(83,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(84,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(85,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(86,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.Review_page()&&e),e}),I.u,I.b)),e.pb(87,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Review"])),(T()(),e.qb(89,0,null,0,5,"ion-col",[],null,null,null,I.v,I.c)),e.pb(90,49152,null,0,n.q,[e.h,e.k,e.x],null,null),(T()(),e.qb(91,0,null,0,3,"div",[],null,null,null,null,null)),(T()(),e.qb(92,0,null,null,2,"ion-button",[["color","medium"]],null,[[null,"click"]],(function(T,t,E){var e=!0;return"click"===t&&(e=!1!==T.component.Next_Question()&&e),e}),I.u,I.b)),e.pb(93,49152,null,0,n.h,[e.h,e.k,e.x],{color:[0,"color"]},null),(T()(),e.Gb(-1,0,["Next"]))],(function(T,t){var E=t.component;T(t,37,0,"0"),T(t,40,0,E.QuestionChoice),T(t,48,0,"tertiary","0"),T(t,61,0,"medium"),T(t,67,0,"medium"),T(t,73,0,"medium"),T(t,81,0,"medium"),T(t,87,0,"medium"),T(t,93,0,"medium")}),(function(T,t){var E=t.component;T(t,18,0,E.Section_Name),T(t,22,0,E.Question_order,E.Total_Question),T(t,26,0,E.Question_Marks),T(t,31,0,E.Question_name),T(t,50,0,e.ub(1,"",E.image,""))}))}function Q(T){return e.Hb(0,[(T()(),e.qb(0,0,null,null,1,"app-audit-choice-question",[],null,null,null,d,C)),e.pb(1,114688,null,0,U,[h.a,c.m,r.a,n.Db,O.a,c.a,a.a,n.Ab],null,null)],(function(T,t){T(t,1,0)}),null)}var R=e.mb("app-audit-choice-question",U,Q,{},{},[]);class m{}class b{}E.d(t,"AuditChoiceQuestionPageModuleNgFactory",(function(){return P}));var P=e.nb(l,[],(function(T){return e.zb([e.Ab(512,e.j,e.Y,[[8,[N,i.a,R]],[3,e.j],e.v]),e.Ab(4608,o.k,o.j,[e.s,[2,o.q]]),e.Ab(4608,D.n,D.n,[]),e.Ab(4608,n.a,n.a,[e.x,e.g]),e.Ab(4608,n.Ab,n.Ab,[n.a,e.j,e.p]),e.Ab(4608,n.Eb,n.Eb,[n.a,e.j,e.p]),e.Ab(4608,a.a,a.a,[]),e.Ab(1073742336,o.b,o.b,[]),e.Ab(1073742336,D.m,D.m,[]),e.Ab(1073742336,D.g,D.g,[]),e.Ab(1073742336,n.yb,n.yb,[]),e.Ab(1073742336,m,m,[]),e.Ab(1073742336,c.n,c.n,[[2,c.s],[2,c.m]]),e.Ab(1073742336,b,b,[]),e.Ab(1073742336,l,l,[]),e.Ab(1024,c.k,(function(){return[[{path:"",component:U}]]}),[])])}))}}]);