{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{mWic:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var core=__webpack_require__(\"8Y7J\");class DashBoardPageModule{}var router_ngfactory=__webpack_require__(\"pMnS\"),ionic_angular_ngfactory=__webpack_require__(\"MKJQ\"),ionic_angular=__webpack_require__(\"sZkV\"),common=__webpack_require__(\"SVse\"),tslib_es6=__webpack_require__(\"mrSG\"),ngx=__webpack_require__(\"6GXZ\"),Store=__webpack_require__(\"9mtz\"),user_login_service=__webpack_require__(\"kwUn\"),network_service_service=__webpack_require__(\"ZNON\"),screen_orientation_ngx=__webpack_require__(\"b6o4\");let loader_service_service_LoaderServiceService=(()=>{class LoaderServiceService{constructor(loadingController){this.loadingController=loadingController}showLoader(){this.loadingController.create({message:\"Please wait...\"}).then(res=>{res.present()})}hideLoader(){this.loadingController.dismiss().then(res=>{console.log(\"Loading dismissed!\",res)}).catch(error=>{console.log(\"error\",error)})}}return LoaderServiceService.ngInjectableDef=core.Nb({factory:function(){return new LoaderServiceService(core.Ob(ionic_angular.Bb))},token:LoaderServiceService,providedIn:\"root\"}),LoaderServiceService})();class dash_board_page_DashBoardPage{constructor(platform,sqlite,userService,router,networkServiceService,screenOrientation,ionLoader){this.platform=platform,this.sqlite=sqlite,this.userService=userService,this.router=router,this.networkServiceService=networkServiceService,this.screenOrientation=screenOrientation,this.ionLoader=ionLoader,this.database_name=\"AUDIT_DB.db\",this.showSpinner=!1,this.store=new Store.a,this.platform.ready().then(()=>{this.setPortrait(),this.createDB()}).catch(error=>{console.log(error)})}showLoader(){this.ionLoader.showLoader(),setTimeout(()=>{this.hideLoader()},2e3)}hideLoader(){this.ionLoader.hideLoader()}setPortrait(){this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT)}unlockScreen(){}checkconnection_serve(){this.check_status=this.networkServiceService.getCurrentNetworkStatus()}logoff(){this.router.navigate([\"home\"])}GotoNewAudit(){this.router.navigate([\"new-audit\"])}GotoCloseAudit(){this.router.navigate([\"close-audit\"])}GotoOpenAudit(){this.router.navigate([\"open-audit\"])}createDB(){console.log(\"database created\"),this.sqlite.create({name:this.database_name,location:\"default\"}).then(db=>{this.databaseObj=db,this.getRows(),this.CreateAllTables(),this.create_storetable(),this.fetchAttemptedOpenAuditCount()}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}getRows(){this.databaseObj.executeSql(\"SELECT * FROM USER_TB\",[]).then(res=>{if(this.row_data=[],res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.row_data.push(res.rows.item(i)),console.log(this.row_data[i].toString())}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ngOnInit(){this.setPortrait()}Get_Sync(){return tslib_es6.a(this,void 0,void 0,(function*(){this.checkconnection_serve(),this.fetchAttemptedOpenAuditCount(),console.log(\"Total Count AttemptedOpen AuditCount\"),console.log(this.Count_AttemptedOpenAuditCount),console.log(this.Count_AttemptedOpenAuditCount[0].CNT),0===this.Count_AttemptedOpenAuditCount[0].CNT?0===this.check_status?(this.get_all_store_api(),this.Delelete_All_data(),this.showSpinner=!0,this.Get_AllAudit()):1===this.check_status&&alert(\"Please Check Connection\"):alert(\"Please Close Open Audit\")}))}Get_AllAudit(){var Auditor_id=\"00\"+this.row_data[0].EMP_ID.toString();console.log(\"auditor id: \"+Auditor_id);try{this.userService.Get_Audit_By_Auditor(Auditor_id).subscribe(response=>{if(console.log(response),this.yser_ss=response,console.log(this.yser_ss.Audits[0].AuditName),console.log(this.yser_ss.Audits[0].AuditId),this.yser_ss.Audits.length>0){var tempVariable=this.yser_ss;this.showLoader();for(var i=0;i<=this.yser_ss.Audits.length-1;i++)console.log(this.yser_ss),this.Get_all_Audit_with_question(tempVariable.Audits[i].AuditId);this.hideLoader()}})}catch(error){alert(\"Please Check Connection\")}}Get_all_Audit_with_question(AuditID){try{this.userService.Get_Audit_By_Id(AuditID).subscribe(response=>{this.auditResponce=response,this.datafrom_server()})}catch(error){alert(\"Please Check Connection\")}}datafrom_server(){if(console.log(\"NEW AUDIT iNSERTION\"),console.log(this.auditResponce),console.log(this.auditResponce.StatusFl),this.createAudit(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.AuditName,this.auditResponce.Audt.AuditTypeId.toString(),this.auditResponce.Audt.AuditType,this.auditResponce.Audt.AuditStage,this.auditResponce.Audt.AuditPoints.toString(),this.auditResponce.Audt.QuestionCount.toString()),this.auditResponce.Audt.Sections.length>0)for(var i=0;i<=this.auditResponce.Audt.Sections.length-1;i++)if(this.createSection(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].ParentSectionId.toString(),this.auditResponce.Audt.Sections[i].SectionName,this.auditResponce.Audt.Sections[i].SectionDesc,this.auditResponce.Audt.Sections[i].SectionOrder.toString(),this.auditResponce.Audt.Sections[i].SectionPoint.toString(),this.auditResponce.Audt.Sections[i].TQuestionCount.toString(),this.auditResponce.Audt.Sections[i].QuestionCount.toString(),this.auditResponce.Audt.Sections[i].CQuestionCount.toString()),this.auditResponce.Audt.Sections[i].Questions.length>0)for(var j=0;j<=this.auditResponce.Audt.Sections[i].Questions.length-1;j++){if(this.createQuestion(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionTypeId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionName.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionType,this.auditResponce.Audt.Sections[i].Questions[j].QuestionOrder.toString(),this.auditResponce.Audt.Sections[i].Questions[j].IsNC,this.auditResponce.Audt.Sections[i].Questions[j].QuestionPoint.toString()),console.log(\"insering question\"),console.log(this.auditResponce.Audt.Sections[i].Questions[j].QuestionName),console.log(this.auditResponce.Audt.Sections[i].Questions[j].QuestionType),\"Choice\"==this.auditResponce.Audt.Sections[i].Questions[j].QuestionType&&this.auditResponce.Audt.Sections[i].Questions[j].Choice.length>0)for(var d=0;d<this.auditResponce.Audt.Sections[i].Questions[j].Choice.length-1;d++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Choice[d].ChoiceId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Choice[d].Choice,this.auditResponce.Audt.Sections[i].Questions[j].Choice[d].Marks.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Choice[d].Comments.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Choice[d].IsNegative);if(\"Yes/No\"==this.auditResponce.Audt.Sections[i].Questions[j].QuestionType&&this.auditResponce.Audt.Sections[i].Questions[j].YesNo.length>0)for(var e=0;e<this.auditResponce.Audt.Sections[i].Questions[j].YesNo.length-1;e++)this.createQChoice(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].YesNo[e].ChoiceId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].YesNo[e].Choice,this.auditResponce.Audt.Sections[i].Questions[j].YesNo[e].Marks.toString(),this.auditResponce.Audt.Sections[i].Questions[j].YesNo[e].Comments,this.auditResponce.Audt.Sections[i].Questions[j].YesNo[e].IsNegative);if(\"Standard\"==this.auditResponce.Audt.Sections[i].Questions[j].QuestionType&&0!=this.auditResponce.Audt.Sections[i].Questions[j].Standard.Id&&(this.createQStandard(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Standard.Id.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Standard.Type,this.auditResponce.Audt.Sections[i].Questions[j].Standard.MinRange,this.auditResponce.Audt.Sections[i].Questions[j].Standard.MaxRange,this.auditResponce.Audt.Sections[i].Questions[j].Standard.Fix,this.auditResponce.Audt.Sections[i].Questions[j].Standard.UoM,this.auditResponce.Audt.Sections[i].Questions[j].Standard.Field,this.auditResponce.Audt.Sections[i].Questions[j].Standard.Multiple),this.auditResponce.Audt.Sections[i].Questions[j].Standard.PreDefinedValues.length>0))for(var c=0;c<this.auditResponce.Audt.Sections[i].Questions[j].Standard.PreDefinedValues.length-1;c++)this.createQStandardPreDefined(this.auditResponce.Audt.AuditId.toString(),this.auditResponce.Audt.Sections[i].SectionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].QuestionId.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Standard.Id.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Standard.PreDefinedValues[c].Id.toString(),this.auditResponce.Audt.Sections[i].Questions[j].Standard.PreDefinedValues[c].Name.toString())}}CreateAllTables(){this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,AUDIT_TYPE_ID integer not null,AUDIT_TYPE text not null,AUDIT_STAGE text not null,AUDIT_PT integer not null,QUESTION_COUNT integer not null);\",[]).then(()=>{console.log(\"Table Audit Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS SECTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);\",[]).then(()=>{console.log(\"Table section Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS QUESTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null);\",[]).then(()=>{console.log(\"Table section Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS QUESTION_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS_REQUIRED text not null,IS_NEGATIVE text not null);\",[]).then(()=>{console.log(\"Table QUESTION_CHOICE_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS QUESTION_STANDARD_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,STANDARD_TYPE text not null,MIN_RANGE text,MAX_RANGE text,FIX text,UOM text,FIELD_LABEL text,IS_PREDEFINED text);\",[]).then(()=>{console.log(\"Table QUESTION_STANDARD_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS QUESTION_STANDARD_PREDEFINED_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null);\",[]).then(()=>{console.log(\"Table section Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS QUESTION_OPTION_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,SCORABLE_FL text not null);\",[]).then(()=>{console.log(\"Table section Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS QUESTION_RANGE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS_REQUIRED text not null);\",[]).then(()=>{console.log(\"Table QUESTION_STANDARD_PREDEFINED_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS QUESTION_FIELDS_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,FIELD_NAME text not null,FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null);\",[]).then(()=>{console.log(\"Table QUESTION_FIELDS_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS FIELDS_VALUE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,VALUE_ID not null,VALUE_NAME text not null,DEFAULT_VALUE text not null);\",[]).then(()=>{console.log(\"Table section Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS FIELDS_CHOICE_TB(_id integer primary key autoincrement,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,FIELD_ID integer not null,CHOICE_ID not null,CHOICE_TEXT text not null,CHOICE_PT integer not null);\",[]).then(()=>{console.log(\"Table FIELDS_VALUE_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_TB(ATTEMPTED_ID integer primary key autoincrement,AUDIT_ID integer not null,AUDIT_NAME text not null,STR_CODE text not null,STR_NAME text not null,USER_ID text not null,STR_MANAGER text not null,AUDIT_DT text not null,AUDIT_STATUS text not null,UNIQUE_ID text not null,AUDIT_FINDINGS text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,PARENT_SECTION_ID integer not null,SECTION_NAME text not null,SECTION_DESC text not null,SECTION_ORDER integer not null,SECTION_PT integer not null,T_QUESTION_COUNT integer not null,QUESTION_ANSWERED integer not null,S_QUESTION_COUNT integer not null,C_QUESTION_COUNT integer not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_SECTION Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_TYPE_ID integer not null,QUESTION_NAME text not null,QUESTION_TYPE text not null,QUESTION_ORDER integer not null,IS_CRITICAL text not null,QUESTION_MARKS integer not null,MARKS_SCORED integer not null,QUESTION_STATUS text not null,QUESTION_COMMENT text not null,IMAGE_NAME text not null,IS_INCLUDED text not null,IMAGE_PUSHED text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS_CHOICE Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,STANDARD_ID integer not null,FIELD_VALUE text,COMMENTS text,CHOICE_VALUE text,POINTS integer not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,STANDARD_ID integer not null,VALUE_ID integer not null,VALUE_NAME text not null,VALUE_OBSERVED text not null,POINTS integer not null,COMMENTS text,CHOICE_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_OPTION(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,OPTION_ID integer not null,OPTION_TEXT text not null,OPTION_TEXT_VALUE text not null,POINTS integer not null,ISSCORABLE text);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS_OPTION Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTIONS_RANGE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,RANGE_ID integer not null,MIN_RANGE text not null,MAX_RANGE text not null,POINTS integer not null,COMMENTS text);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTIONS_RANGE Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_RECIVING_QUESTIONS(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,QUESTION_NAME text not null,UNLOAD_START_TIME text,UNLOAD_END_TIME text,VEHICLE_NO text,TEMPERATURE text);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_RECIVING_QUESTIONS Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_TYPE text not null,ISKEY text not null,ISSCORABLE text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTION_FIELD Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,OTHER_FIELD_ID integer not null,OTHER_FIELD_NAME text not null,OTHER_FIELD_TYPE text not null,OTHER_FIELD_ISKEY text not null,OTHER_FIELD_VALUE_ID integer not null,OTHER_FIELD_VALUE text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE Table IF NOT EXISTS AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,SECTION_ID integer not null,QUESTION_ID integer not null,KEY_FIELD_ID integer not null,KEY_FIELD_NAME text not null,KEY_FIELD_VALUE_ID integer not null,KEY_FIELD_VALUE text not null,CHOICE_FIELD_ID integer not null,CHOIC_FIELD_NAME text not null,CHOICE_FIELD_TYPE text not null,CHOICE_FIELD_ISKEY text not null,CHOICE_ID integer not null,CHOICE_TEXT text not null,CHOICE_PT integer not null,CHECKED Text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE  IF NOT EXISTS AUDIT_ERROR_LOG(ID integer primary key autoincrement,SCREEN_NAME text not null,FUNCTION_NAME text not null,EXCEPTION text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ERROR_LOG Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID integer not null,AUDIT_ID integer not null,STR_CODE text not null,UNIQUE_ID text not null,IMAGE_NAME text not null,IMAGE_PUSHED text not null);\",[]).then(()=>{console.log(\"Table AUDIT_ATTEMPTED_IMAGES_TB Created!\")}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}create_storetable(){this.databaseObj.executeSql(\"CREATE TABLE IF NOT EXISTS STORE_TB(_id integer primary key autoincrement,STR_CODE text not null,STR_NAME text not null);\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}get_all_store_api(){var Bu_id=this.row_data[0].BU_ID.toString(),empid=\"00\"+this.row_data[0].EMP_ID.toString();this.store.StrCode=Bu_id,this.store.StrName=empid,console.log(this.store),this.userService.Get_All_Store(this.store).subscribe(response=>{if(this.storeResponse=response,console.log(this.storeResponse),this.storeResponse.Stores.length>0)for(var i=0;i<=this.storeResponse.Stores.length-1;i++)console.log(this.yser_ss),this.insert_store(this.storeResponse.Stores[i].StrCode,this.storeResponse.Stores[i].StrName)})}insert_store(StrCode,StrName){this.databaseObj.executeSql(\"INSERT INTO STORE_TB(STR_CODE,STR_NAME) VALUES('\"+StrCode+\"','\"+StrName+\"')\",[]).then(()=>{this.getstore()}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}getstore(){this.databaseObj.executeSql(\"SELECT * FROM STORE_TB\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.row_store.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteStore(){this.databaseObj.executeSql(\"DELETE FROM STORE_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}AttemptedOpenAuditCount(lAuditId,_sStoreCode){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB t WHERE AUDIT_ID=\"+lAuditId+\" AND AUDIT_STATUS='Open' AND STR_CODE='\"+_sStoreCode+\"'\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.count_AttemptedOpenAuditCount.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}Delelete_All_data(){this.databaseObj.executeSql(\"DELETE FROM AUDIT_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM SECTION_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_CHOICE_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_RANGE_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_FIELDS_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM FIELDS_VALUE_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM FIELDS_CHOICE_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_OPTION_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_STANDARD_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_STANDARD_PREDEFINED_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_SECTION\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM QUESTION_STANDARD_PREDEFINED_TB\",[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteAudit(lAuditId){this.databaseObj.executeSql(\"DELETE FROM AUDIT_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteSection(lAuditId){this.databaseObj.executeSql(\"DELETE FROM SECTION_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQuestion(lAuditId){this.databaseObj.executeSql(\"DELETE FROM QUESTION_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQChoice(lAuditId){this.databaseObj.executeSql(\"DELETE FROM QUESTION_CHOICE_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQOption(lAuditId){this.databaseObj.executeSql(\"DELETE FROM QUESTION_OPTION_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQRange(lAuditId){this.databaseObj.executeSql(\"DELETE FROM QUESTION_RANGE_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQField(lAuditId){this.databaseObj.executeSql(\"DELETE FROM QUESTION_FIELDS_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQFieldValue(lAuditId){this.databaseObj.executeSql(\"DELETE FROM FIELDS_VALUE_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deleteQFieldChoice(lAuditId){this.databaseObj.executeSql(\"DELETE FROM FIELDS_CHOICE_TB WHERE AUDIT_ID=\"+lAuditId,[]).then(res=>(console.log(res),!0)).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAllAudits(){this.databaseObj.executeSql(\"SELECT *  FROM AUDIT_TB\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AllAudits.push(res.rows.item(i));return this.AllAudits}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}createAudit(sAuditID,sAuditName,sAuditTypeId,sAuditTyp,sAuditStage,sAuditPt,sQuestionCnt){this.databaseObj.executeSql(\"INSERT INTO AUDIT_TB (AUDIT_ID, AUDIT_NAME,AUDIT_TYPE_ID,AUDIT_TYPE,AUDIT_STAGE,AUDIT_PT, QUESTION_COUNT) VALUES(\"+sAuditID+\",'\"+sAuditName+\"',\"+sAuditTypeId+\",'\"+sAuditTyp+\"','\"+sAuditStage+\"',\"+sAuditPt+\",\"+sQuestionCnt+\")\",[]).then(res=>(console.log(res),!0)).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}createSection(sAuditID,sSectionId,sParentSectionId,sSectionName,sSectionDesc,sSectionOrder,sSectionPt,sTQuestionCnt,sSQuestionCnt,sCQuestionCnt){this.databaseObj.executeSql(\"INSERT INTO SECTION_TB(AUDIT_ID, SECTION_ID, PARENT_SECTION_ID, SECTION_NAME, SECTION_DESC, SECTION_ORDER, SECTION_PT, T_QUESTION_COUNT, S_QUESTION_COUNT, C_QUESTION_COUNT ) VALUES(\"+sAuditID+\",\"+sSectionId+\",\"+sParentSectionId+\",'\"+sSectionName+\"','\"+sSectionDesc+\"',\"+sSectionOrder+\",\"+sSectionPt+\",\"+sTQuestionCnt+\",\"+sSQuestionCnt+\",\"+sCQuestionCnt+\")\",[]).then(res=>!0).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}createQuestion(sAuditID,sSectionId,sQuestionId,sQuestionTypeId,sQuestionName,sQuestionType,sQuestionOrder,sIsCritical,sQuestionMarks){this.databaseObj.executeSql(\"INSERT INTO QUESTION_TB(AUDIT_ID, SECTION_ID, QUESTION_ID, QUESTION_TYPE_ID, QUESTION_NAME, QUESTION_TYPE, QUESTION_ORDER, IS_CRITICAL, QUESTION_MARKS) VALUES(\"+sAuditID+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sQuestionTypeId+\",'\"+sQuestionName+\"','\"+sQuestionType+\"',\"+sQuestionOrder+\",'\"+sIsCritical+\"',\"+sQuestionMarks+\")\",[]).then(res=>!0).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}createQChoice(sAuditId,sSectionId,sQuestionId,sChoiceId,sChoiceText,sMarks,sComntReq,sIsNegative){this.databaseObj.executeSql(\"INSERT INTO QUESTION_CHOICE_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,CHOICE_ID,CHOICE_TEXT,POINTS,COMMENTS_REQUIRED,IS_NEGATIVE) VALUES(\"+sAuditId+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sChoiceId+\",'\"+sChoiceText+\"',\"+sMarks+\",'\"+sComntReq+\"','\"+sIsNegative+\"')\",[]).then(res=>!0).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}fetchAttemptedCompletedAuditByUser(_sUserId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,AUDIT_STATUS,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID) AS TOTALQUESTION,(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND AUDIT_ID=t.AUDIT_ID AND QUESTION_STATUS<>'Open') AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND IS_INCLUDED='Yes') AS AUDIT_POINTS,IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=t.ATTEMPTED_ID AND QUESTION_STATUS<>'Open'),0) MARKS_SCORED,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB t WHERE USER_ID='\"+_sUserId+\"' AND AUDIT_STATUS='Close'\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedCompletedAuditByUser.push(res.rows.item(i));return this.AttemptedCompletedAuditByUser}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchImageNotPushedAttemptedQuestionBySQL(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_ID,SECTION_ID,QUESTION_ID,0 AS KEY_FIELD_VALUE_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE QUESTION_STATUS='Done' AND ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null' UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTION_FIELD X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID=\"+lAttemptedId+\" AND X.AUDIT_ID=\"+lAuditId+\" UNION SELECT Y.AUDIT_ID,Y.SECTION_ID,Y.QUESTION_ID,X.VALUE_ID AS KEY_FIELD_VALUE_ID,X.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED X,AUDIT_ATTEMPTED_QUESTIONS Y WHERE X.AUDIT_ID=Y.AUDIT_ID AND X.SECTION_ID=Y.SECTION_ID AND X.QUESTION_ID=Y.QUESTION_ID AND Y.QUESTION_STATUS='Done' AND X.IMAGE_NAME<>'' AND X.IMAGE_NAME<>'null' AND X.IMAGE_PUSHED='No' AND X.ATTEMPTED_ID=\"+lAttemptedId+\" AND X.AUDIT_ID=\"+lAuditId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.ImageNotPushedAttemptedQuestionBySQL.push(res.rows.item(i));return this.ImageNotPushedAttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedOpenAuditCount(){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_STATUS='Open'\",[]).then(res=>{if(this.Count_AttemptedOpenAuditCount=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.Count_AttemptedOpenAuditCount.push(res.rows.item(i));return console.log(this.Count_AttemptedOpenAuditCount),this.Count_AttemptedOpenAuditCount}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}deletAttemptedAuditById(attemtedId){this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_RECIVING_QUESTIONS WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_OPTION WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_RANGE WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_VALUE WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTION_FIELD_CHOICE WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID=\"+attemtedId,[]).then(res=>{console.log(res)}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionBySQL(lAttemptedId,lAuditId,lSectionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" ORDER BY QUESTION_ORDER\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionBySQL.push(res.rows.item(i));return this.AttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionChoiceBySQL(lAttemptedId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionBySQL.push(res.rows.item(i));return this.AttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditPrevQuestionBySQL(lAttemptedId,lSectionId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\"))\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditPrevQuestionBySQL.push(res.rows.item(i));return this.AttemptedAuditPrevQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchPrevAttemptedSection(lAttemptedId,lAuditId,lSectionId){this.databaseObj.executeSql(\"SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\"))\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.PrevAttemptedSection.push(res.rows.item(i));return this.PrevAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditNextQuestionBySQL(lAttemptedId,lSectionId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\"))\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditNextQuestionBySQL.push(res.rows.item(i));return this.AttemptedAuditNextQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchNextAttemptedSection(lAttemptedId,lAuditId,lSectionId){this.databaseObj.executeSql(\"SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\")\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.NextAttemptedSection.push(res.rows.item(i));return this.NextAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionById(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionById.push(res.rows.item(i));return this.QuestionById}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionBased(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionBased.push(res.rows.item(i));return this.QuestionBased}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionBasedValues(lAuditId,lSectionId,lQuestionId,lStandardId){this.databaseObj.executeSql(\"SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ID=\"+lQuestionId+\" AND STANDARD_ID=\"+lStandardId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionBasedValues.push(res.rows.item(i));return this.QuestionBasedValues}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionChoice(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionChoice.push(res.rows.item(i));return this.QuestionChoice}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchTopAttemptedSection(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionChoice.push(res.rows.item(i));return this.QuestionChoice}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchSLAttemptedSection(lAttemptedId,lSectionId,lAuditId){this.databaseObj.executeSql(\"SELECT * FROM SECTION_TB WHERE AUDIT_ID=\"+lAuditId+\" AND PARENT_SECTION_ID=\"+lSectionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection_check.push(res.rows.item(i));return this.SLAttemptedSection_check}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchGenericImageNotPushedAttemptedQuestionBySQL(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.GenericImageNotPushedAttemptedQuestionBySQL.push(res.rows.item(i));return this.GenericImageNotPushedAttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}DeleteGenericImages(sUniqueID,sAttemptedId){this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID=\"+sAttemptedId,[])}SaveGenericImage(sAttemptedId,sUniqueID,sAuditId,sStoreId,sImageNm,i){this.databaseObj.executeSql(\"INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES(\"+sAttemptedId+\",\"+sAuditId+\",'\"+sStoreId+\"','\"+sUniqueID+\"','\"+sImageNm+\"','No')\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}UpdateAuditFindings(sAttemptedId,sUniqueID,sAuditId,sAuditFindings){this.databaseObj.executeSql(\"UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='\"+sAuditFindings.replace(\"'\",\"''\")+\"' WHERE ATTEMPTED_ID=\"+sAttemptedId+\" AND AUDIT_ID=\"+sAuditId+\" AND UNIQUE_ID='\"+sUniqueID+\"'\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}GetAuditFindings(sAttemptedId,sUniqueID,sAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID=\"+sAttemptedId+\" AND AUDIT_ID=\"+sAuditId+\" AND UNIQUE_ID='\"+sUniqueID+\"'\",[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AuditFindings.push(res.rows.item(i));return this.AuditFindings}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}createQStandard(sAuditId,sSectionId,sQuestionId,sStandardId,sStandardTyp,sMinRng,sMaxRng,sFix,sUOM,sFieldLbl,sPreDefined){this.databaseObj.executeSql(\"INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES(\"+sAuditId+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sStandardId+\",'\"+sStandardTyp+\"','\"+sMinRng+\"','\"+sMaxRng+\"','\"+sFix+\"','\"+sUOM+\"','\"+sFieldLbl+\"','\"+sPreDefined+\"')\",[]).then(()=>!0).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}createQStandardPreDefined(sAuditId,sSectionId,sQuestionId,sStandardId,sValueId,sValueNm){this.databaseObj.executeSql(\"INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES(\"+sAuditId+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sStandardId+\",\"+sValueId+\",'\"+sValueNm+\"')\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionStandardBySQL(lAttemptedId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionStandardBySQL.push(res.rows.item(i));return this.AttemptedQuestionStandardBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionStandardValueBySQL(lAttemptedId,lAuditId,lQuestionId,lStandardId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\" AND STANDARD_ID=\"+lStandardId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionStandardValueBySQL.push(res.rows.item(i));return this.AttemptedQuestionStandardValueBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkAudit(sAuditId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM AUDIT_TB WHERE AUDIT_ID=\"+sAuditId,[]).then(res=>{if(this.row_store=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckAudit.push(res.rows.item(i));return this.CheckAudit}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkSection(sAuditId,sSectionId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM SECTION_TB WHERE AUDIT_ID=\"+sAuditId+\" AND SECTION_ID=\"+sSectionId,[]).then(res=>{if(this.CheckSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckSection.push(res.rows.item(i));return this.CheckSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkQuestion(sAuditId,sSectionId,sQuestionId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM QUESTION_TB WHERE AUDIT_ID=\"+sAuditId+\" AND SECTION_ID=\"+sSectionId+\" AND QUESTION_ID=\"+sQuestionId,[]).then(res=>{if(this.CheckQuestion=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckQuestion.push(res.rows.item(i));return this.CheckQuestion}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkQuestionChoice(sAuditId,sSectionId,sQuestionId,sChoiceId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM QUESTION_CHOICE_TB WHERE AUDIT_ID=\"+sAuditId+\" AND SECTION_ID=\"+sSectionId+\" AND QUESTION_ID=\"+sQuestionId+\" AND CHOICE_ID=\"+sChoiceId,[]).then(res=>{if(this.CheckQuestionChoice=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckQuestionChoice.push(res.rows.item(i));return this.CheckQuestionChoice}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkQuestionStandard(sAuditId,sSectionId,sQuestionId,sStandardId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_TB WHERE AUDIT_ID=\"+sAuditId+\" AND SECTION_ID=\"+sSectionId+\" AND QUESTION_ID=\"+sQuestionId+\" AND STANDARD_ID=\"+sStandardId,[]).then(res=>{if(this.CheckQuestionStandard=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckQuestionStandard.push(res.rows.item(i));return this.CheckQuestionStandard}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkQuestionStandardPreDefined(sAuditId,sSectionId,sQuestionId,sStandardId,sValueId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID=\"+sAuditId+\" AND SECTION_ID=\"+sSectionId+\" AND QUESTION_ID=\"+sQuestionId+\" AND STANDARD_ID=\"+sStandardId+\" AND VALUE_ID=\"+sValueId,[]).then(res=>{if(this.CheckQuestionStandardPreDefined=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckQuestionStandardPreDefined.push(res.rows.item(i));return this.CheckQuestionStandardPreDefined}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ChkAttemptAudit(sAuditId){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM AUDIT_ATTEMPTED_TB WHERE AUDIT_ID=\"+sAuditId,[]).then(res=>{if(this.CheckAttemptAudit=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.CheckAttemptAudit.push(res.rows.item(i));return this.CheckAttemptAudit}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}createSection1(sAuditId){this.databaseObj.executeSql(\"INSERT INTO AUDIT_ATTEMPTED_SECTION(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,PARENT_SECTION_ID,SECTION_NAME,SECTION_DESC,SECTION_ORDER,SECTION_PT,T_QUESTION_COUNT,QUESTION_ANSWERED,S_QUESTION_COUNT,C_QUESTION_COUNT) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,'' AS QUESTION_ANSWERED,A.S_QUESTION_COUNT,A.C_QUESTION_COUNT FROM SECTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_SECTION C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID WHERE A.AUDIT_ID=\"+sAuditId+\" AND C.SECTION_ID IS NULL\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}createQuestion1(sAuditId){this.databaseObj.executeSql(\"INSERT INTO AUDIT_ATTEMPTED_QUESTIONS(ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IMAGE_NAME,IS_INCLUDED,IMAGE_PUSHED) SELECT B.ATTEMPTED_ID,B.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.QUESTION_TYPE_ID,A.QUESTION_NAME,A.QUESTION_TYPE,A.QUESTION_ORDER,A.IS_CRITICAL,A.QUESTION_MARKS,0 AS MARKS_SCORED,'Open' AS QUESTION_STATUS,'' AS QUESTION_COMMENT,'' AS IMAGE_NAME,'Yes' AS IS_INCLUDED,'Yes' AS IMAGE_PUSHED FROM QUESTION_TB A INNER JOIN AUDIT_ATTEMPTED_TB B ON A.AUDIT_ID=B.AUDIT_ID LEFT JOIN AUDIT_ATTEMPTED_QUESTIONS C ON B.ATTEMPTED_ID=C.ATTEMPTED_ID AND B.AUDIT_ID=C.AUDIT_ID AND A.SECTION_ID=C.SECTION_ID AND A.QUESTION_ID=C.QUESTION_ID WHERE A.AUDIT_ID=\"+sAuditId+\" AND C.QUESTION_ID IS NULL\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}ValidateUser(sUserId,sPassword){this.databaseObj.executeSql(\"SELECT COUNT(*) AS CNT FROM USER_TB WHERE EMP_ID='\"+sUserId+\"' AND PASSWORD='\"+sPassword+\"'\",[]).then(res=>{if(this.ValidateUser_arry=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.ValidateUser_arry.push(res.rows.item(i));return this.ValidateUser_arry}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}GetUsrDetails(sUserId,sPassword){this.databaseObj.executeSql(\"SELECT * FROM USER_TB WHERE EMP_ID='\"+sUserId+\"' AND PASSWORD='\"+sPassword+\"'\",[]).then(res=>{if(this.GetUsrDetails_arry=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.GetUsrDetails_arry.push(res.rows.item(i));return this.GetUsrDetails_arry}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}}var fesm2015_router=__webpack_require__(\"iInd\"),RenderType_DashBoardPage=core.ob({encapsulation:0,styles:[[\"ion-content.background[_ngcontent-%COMP%]{--ion-background-color:black!important}.div_button[_ngcontent-%COMP%]{background-color:#fff}.main_div[_ngcontent-%COMP%]{margin-top:5em;margin-left:1em;margin-right:1em}\"]],data:{}});function View_DashBoardPage_1(_l){return core.Jb(0,[(_l()(),core.qb(0,0,null,null,1,\"ion-spinner\",[[\"color\",\"secondary\"],[\"name\",\"bubble\"]],null,null,null,ionic_angular_ngfactory.O,ionic_angular_ngfactory.t)),core.pb(1,49152,null,0,ionic_angular.nb,[core.h,core.k,core.x],{color:[0,\"color\"],name:[1,\"name\"]},null)],(function(_ck,_v){_ck(_v,1,0,\"secondary\",\"bubble\")}),null)}function View_DashBoardPage_2(_l){return core.Jb(0,[(_l()(),core.qb(0,0,null,null,1,\"div\",[[\"style\",\"text-align: center;\"]],null,null,null,null,null)),(_l()(),core.Hb(1,null,[\"User : \",\"\"]))],null,(function(_ck,_v){_ck(_v,1,0,_v.context.$implicit.EMP_NAME)}))}function View_DashBoardPage_0(_l){return core.Jb(0,[(_l()(),core.qb(0,0,null,null,13,\"ion-header\",[],null,null,null,ionic_angular_ngfactory.D,ionic_angular_ngfactory.i)),core.pb(1,49152,null,0,ionic_angular.z,[core.h,core.k,core.x],null,null),(_l()(),core.qb(2,0,null,0,11,\"div\",[[\"style\",\"background-color: black; align-content: center;\"]],null,null,null,null,null)),(_l()(),core.qb(3,0,null,null,10,\"table\",[[\"style\",\"margin-left: 10px; margin-top: 5px; margin-bottom: 2px;\"]],null,null,null,null,null)),(_l()(),core.qb(4,0,null,null,9,\"tbody\",[],null,null,null,null,null)),(_l()(),core.qb(5,0,null,null,8,\"tr\",[],null,null,null,null,null)),(_l()(),core.qb(6,0,null,null,2,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(7,0,null,null,1,\"span\",[[\"style\",\"margin-top:20px; margin-left: 5px; margin-top: 1px;\"]],null,null,null,null,null)),(_l()(),core.qb(8,0,null,null,0,\"img\",[[\"height\",\"35\"],[\"src\",\"../../assets/tablez.png\"],[\"width\",\"35\"]],null,null,null,null,null)),(_l()(),core.qb(9,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.Hb(-1,null,[\" \"])),(_l()(),core.qb(11,0,null,null,2,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(12,0,null,null,1,\"span\",[[\"style\",\"color: white; margin-top: 1px;\"]],null,null,null,null,null)),(_l()(),core.Hb(-1,null,[\"Home\"])),(_l()(),core.qb(14,0,null,null,31,\"ion-content\",[],null,null,null,ionic_angular_ngfactory.z,ionic_angular_ngfactory.e)),core.pb(15,49152,null,0,ionic_angular.s,[core.h,core.k,core.x],null,null),(_l()(),core.qb(16,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(17,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(18,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(19,0,null,0,3,\"div\",[[\"style\",\"background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;\"]],null,null,null,null,null)),(_l()(),core.qb(20,0,null,null,2,\"ion-button\",[[\"expand\",\"full\"]],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.Get_Sync()&&ad),ad}),ionic_angular_ngfactory.w,ionic_angular_ngfactory.b)),core.pb(21,49152,null,0,ionic_angular.i,[core.h,core.k,core.x],{expand:[0,\"expand\"]},null),(_l()(),core.Hb(-1,0,[\"Sync Definition\"])),(_l()(),core.qb(23,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.fb(16777216,null,0,1,null,View_DashBoardPage_1)),core.pb(25,16384,null,0,common.i,[core.L,core.I],{ngIf:[0,\"ngIf\"]},null),(_l()(),core.qb(26,0,null,0,3,\"div\",[[\"style\",\"background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;\"]],null,null,null,null,null)),(_l()(),core.qb(27,0,null,null,2,\"ion-button\",[[\"expand\",\"full\"]],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.GotoNewAudit()&&ad),ad}),ionic_angular_ngfactory.w,ionic_angular_ngfactory.b)),core.pb(28,49152,null,0,ionic_angular.i,[core.h,core.k,core.x],{expand:[0,\"expand\"]},null),(_l()(),core.Hb(-1,0,[\"New Audit\"])),(_l()(),core.qb(30,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(31,0,null,0,3,\"div\",[[\"style\",\"background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;\"]],null,null,null,null,null)),(_l()(),core.qb(32,0,null,null,2,\"ion-button\",[[\"expand\",\"full\"]],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.GotoOpenAudit()&&ad),ad}),ionic_angular_ngfactory.w,ionic_angular_ngfactory.b)),core.pb(33,49152,null,0,ionic_angular.i,[core.h,core.k,core.x],{expand:[0,\"expand\"]},null),(_l()(),core.Hb(-1,0,[\"Open Audit(s)\"])),(_l()(),core.qb(35,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(36,0,null,0,3,\"div\",[[\"style\",\"background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;\"]],null,null,null,null,null)),(_l()(),core.qb(37,0,null,null,2,\"ion-button\",[[\"expand\",\"full\"]],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.GotoCloseAudit()&&ad),ad}),ionic_angular_ngfactory.w,ionic_angular_ngfactory.b)),core.pb(38,49152,null,0,ionic_angular.i,[core.h,core.k,core.x],{expand:[0,\"expand\"]},null),(_l()(),core.Hb(-1,0,[\"Compleated Audit(s)\"])),(_l()(),core.qb(40,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(41,0,null,0,3,\"div\",[[\"style\",\"background-color: #3986b2; text-align: center; margin-left: 10px; margin-right: 10px;\"]],null,null,null,null,null)),(_l()(),core.qb(42,0,null,null,2,\"ion-button\",[[\"expand\",\"full\"]],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.logoff()&&ad),ad}),ionic_angular_ngfactory.w,ionic_angular_ngfactory.b)),core.pb(43,49152,null,0,ionic_angular.i,[core.h,core.k,core.x],{expand:[0,\"expand\"]},null),(_l()(),core.Hb(-1,0,[\"Log Off\"])),(_l()(),core.qb(45,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.qb(46,0,null,null,7,\"ion-footer\",[[\"class\",\"ion-no-border\"]],null,null,null,ionic_angular_ngfactory.B,ionic_angular_ngfactory.g)),core.pb(47,49152,null,0,ionic_angular.x,[core.h,core.k,core.x],null,null),(_l()(),core.fb(16777216,null,0,1,null,View_DashBoardPage_2)),core.pb(49,278528,null,0,common.h,[core.L,core.I,core.q],{ngForOf:[0,\"ngForOf\"]},null),(_l()(),core.qb(50,0,null,0,1,\"div\",[[\"style\",\"text-align: center;\"]],null,null,null,null,null)),(_l()(),core.Hb(-1,null,[\"Powered by : SoftEra Audit v3.0\"])),(_l()(),core.qb(52,0,null,0,1,\"div\",[[\"style\",\"text-align: center;\"]],null,null,null,null,null)),(_l()(),core.Hb(-1,null,[\"Copyright © 2020 SoftEra Technologies\"]))],(function(_ck,_v){var _co=_v.component;_ck(_v,21,0,\"full\"),_ck(_v,25,0,_co.showSpinner),_ck(_v,28,0,\"full\"),_ck(_v,33,0,\"full\"),_ck(_v,38,0,\"full\"),_ck(_v,43,0,\"full\"),_ck(_v,49,0,_co.row_data)}),null)}function View_DashBoardPage_Host_0(_l){return core.Jb(0,[(_l()(),core.qb(0,0,null,null,1,\"app-dash-board\",[],null,null,null,View_DashBoardPage_0,RenderType_DashBoardPage)),core.pb(1,114688,null,0,dash_board_page_DashBoardPage,[ionic_angular.Fb,ngx.a,user_login_service.a,fesm2015_router.m,network_service_service.a,screen_orientation_ngx.a,loader_service_service_LoaderServiceService],null,null)],(function(_ck,_v){_ck(_v,1,0)}),null)}var DashBoardPageNgFactory=core.mb(\"app-dash-board\",dash_board_page_DashBoardPage,View_DashBoardPage_Host_0,{},{},[]),fesm2015_forms=__webpack_require__(\"s7LF\");class DashBoardPageRoutingModule{}__webpack_require__.d(__webpack_exports__,\"DashBoardPageModuleNgFactory\",(function(){return DashBoardPageModuleNgFactory}));var DashBoardPageModuleNgFactory=core.nb(DashBoardPageModule,[],(function(_l){return core.zb([core.Ab(512,core.j,core.Y,[[8,[router_ngfactory.a,DashBoardPageNgFactory]],[3,core.j],core.v]),core.Ab(4608,common.k,common.j,[core.s,[2,common.r]]),core.Ab(4608,fesm2015_forms.o,fesm2015_forms.o,[]),core.Ab(4608,ionic_angular.a,ionic_angular.a,[core.x,core.g]),core.Ab(4608,ionic_angular.Cb,ionic_angular.Cb,[ionic_angular.a,core.j,core.p]),core.Ab(4608,ionic_angular.Gb,ionic_angular.Gb,[ionic_angular.a,core.j,core.p]),core.Ab(1073742336,common.b,common.b,[]),core.Ab(1073742336,fesm2015_forms.n,fesm2015_forms.n,[]),core.Ab(1073742336,fesm2015_forms.g,fesm2015_forms.g,[]),core.Ab(1073742336,ionic_angular.zb,ionic_angular.zb,[]),core.Ab(1073742336,fesm2015_router.n,fesm2015_router.n,[[2,fesm2015_router.s],[2,fesm2015_router.m]]),core.Ab(1073742336,DashBoardPageRoutingModule,DashBoardPageRoutingModule,[]),core.Ab(1073742336,DashBoardPageModule,DashBoardPageModule,[]),core.Ab(1024,fesm2015_router.k,(function(){return[[{path:\"\",component:dash_board_page_DashBoardPage}]]}),[])])}))}}]);","extractedComments":[]}