{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{\"+plB\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var core=__webpack_require__(\"8Y7J\");class ListAuditPageModule{}var router_ngfactory=__webpack_require__(\"pMnS\"),ionic_angular_ngfactory=__webpack_require__(\"MKJQ\"),ionic_angular=__webpack_require__(\"sZkV\"),common=__webpack_require__(\"SVse\"),ngx=__webpack_require__(\"6GXZ\"),network_ngx=__webpack_require__(\"xoVG\"),user_login_service=__webpack_require__(\"kwUn\");class ListAuditPage{constructor(userService,router,network,platform,sqlite,activatedRoute){this.userService=userService,this.router=router,this.network=network,this.platform=platform,this.sqlite=sqlite,this.activatedRoute=activatedRoute,this.database_name=\"AUDIT_DB.db\",this.show_Section=!1,this.show_Question=!1,this.myImgUrl=\"../../assets/red_lock_48.png\",this.activatedRoute.queryParams.subscribe(res=>{console.log(JSON.parse(res.value)),this.Query_data=JSON.parse(res.value),console.log(\"list page\"),console.log(this.Query_data.AttemptedId)}),this.platform.ready().then(()=>{this.createDB()}).catch(error=>{console.log(error)})}ngOnInit(){}createDB(){console.log(\"database created\"),this.sqlite.create({name:this.database_name,location:\"default\"}).then(db=>{this.databaseObj=db,this.fetchAttemptedAuditForStore(Number(this.Query_data.AuditId),String(this.Query_data.Storeid)),this.fetchAttemptedSection(Number(this.Query_data.AttemptedId),Number(this.Query_data.AuditId))}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditForStore(lAuditId,_sStoreCode){this.databaseObj.executeSql(\"SELECT * from AUDIT_ATTEMPTED_TB where AUDIT_ID=\"+lAuditId+\" AND STR_CODE='\"+_sStoreCode+\"' ORDER BY ATTEMPTED_ID DESC\",[]).then(res=>{if(this.AttemptedAuditForStore=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditForStore.push(res.rows.item(i));console.log(this.AttemptedAuditForStore),this.AuditStore=this.AttemptedAuditForStore[0].STR_NAME,this.AuditDate=this.AttemptedAuditForStore[0].AUDIT_DT}}).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}fetchAttemptedSection(lAttemptedId,lAuditId){this.show_Section=!this.show_Section,this.databaseObj.executeSql(\"SELECT B.SECTION_NAME AS P_SECTION_NAME,A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.PARENT_SECTION_ID,A.SECTION_NAME,A.SECTION_DESC,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes') AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.S_QUESTION_COUNT>0\",[]).then(res=>{if(this.AttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedSection.push(res.rows.item(i));console.log(this.AttemptedSection)}}).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditBySQL(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_ID,AUDIT_NAME,STR_CODE,STR_NAME,USER_ID,STR_MANAGER,AUDIT_DT,UNIQUE_ID FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId,[]).then(res=>{if(this.AttemptedAuditBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditBySQL.push(res.rows.item(i));return this.AttemptedAuditBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedSectionQuestionBySQL(sType,lAttemptedId,lAuditId,lId){if(\"Audit\"==sType?this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId,[]).then(res=>{if(this.AttemptedSectionQuestionBySQL=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.AttemptedSectionQuestionBySQL.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):\"Section\"==sType?this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.SECTION_ID=\"+lId,[]).then(res=>{if(this.AttemptedSectionQuestionBySQL=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.AttemptedSectionQuestionBySQL.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):\"Question\"==sType?this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND B.QUESTION_ID=\"+lId,[]).then(res=>{if(this.AttemptedSectionQuestionBySQL=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.AttemptedSectionQuestionBySQL.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,B.QUESTION_ID,B.QUESTION_NAME,B.QUESTION_ORDER,B.QUESTION_TYPE_ID,B.QUESTION_TYPE,B.QUESTION_COMMENT,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_SECTION A,AUDIT_ATTEMPTED_QUESTIONS B WHERE A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND 1=2\",[]).then(res=>{if(this.AttemptedSectionQuestionBySQL=[],console.log(res),res.rows.length>0)for(var i=0;i<res.rows.length;i++)this.AttemptedSectionQuestionBySQL.push(res.rows.item(i))}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),this.AttemptedSectionQuestionBySQL.length>0)return this.AttemptedSectionQuestionBySQL}fetchAttemptedQuestionBySQL(lAttemptedId,lAuditId,lSectionId){this.show_Question=!this.show_Question,console.log(lAttemptedId),console.log(\"Entered in fetched question\"),this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,CASE WHEN IS_INCLUDED='Yes' THEN QUESTION_MARKS ELSE 0 END AS QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED,IS_CRITICAL FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" ORDER BY QUESTION_ORDER\",[]).then(res=>{if(this.AttemptedQuestionBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionBySQL.push(res.rows.item(i));return this.AttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionChoiceBySQL(lAttemptedId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT A.ATTEMPTED_ID,A.AUDIT_ID,A.SECTION_ID,A.QUESTION_ID,A.CHOICE_ID,A.CHOICE_TEXT,A.POINTS,A.COMMENTS,A.CHOICE_VALUE,B.IMAGE_NAME FROM AUDIT_ATTEMPTED_QUESTIONS_CHOICE A INNER JOIN AUDIT_ATTEMPTED_QUESTIONS B ON A.ATTEMPTED_ID=B.ATTEMPTED_ID AND A.AUDIT_ID=B.AUDIT_ID AND A.SECTION_ID=B.SECTION_ID AND A.QUESTION_ID=B.QUESTION_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.AttemptedQuestionChoiceBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionChoiceBySQL.push(res.rows.item(i));return this.AttemptedQuestionChoiceBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditPrevQuestionBySQL(lAttemptedId,lSectionId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ORDER<(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\"))\",[]).then(res=>{if(this.AttemptedAuditPrevQuestionBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditPrevQuestionBySQL.push(res.rows.item(i));return this.AttemptedAuditPrevQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchPrevAttemptedSection(lAttemptedId,lAuditId,lSectionId){this.databaseObj.executeSql(\"SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MAX(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.SECTION_ORDER=(SELECT MAX(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ORDER<(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\"))\",[]).then(res=>{if(this.PrevAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.PrevAttemptedSection.push(res.rows.item(i));return this.PrevAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedAuditNextQuestionBySQL(lAttemptedId,lSectionId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_TYPE_ID,QUESTION_ORDER,QUESTION_MARKS,MARKS_SCORED,QUESTION_STATUS,QUESTION_COMMENT,IS_INCLUDED FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ORDER>(SELECT QUESTION_ORDER FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND SECTION_ID=\"+lSectionId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\"))\",[]).then(res=>{if(this.AttemptedAuditNextQuestionBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedAuditNextQuestionBySQL.push(res.rows.item(i));return this.AttemptedAuditNextQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchNextAttemptedSection(lAttemptedId,lAuditId,lSectionId){this.databaseObj.executeSql(\"SELECT (SELECT QUESTION_ID FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_ID,A.SECTION_ID,A.SECTION_NAME,(SELECT QUESTION_NAME FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_NAME,(SELECT QUESTION_TYPE FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID AND QUESTION_ORDER=(SELECT MIN(QUESTION_ORDER) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=A.SECTION_ID)) AS QUESTION_TYPE FROM AUDIT_ATTEMPTED_SECTION A WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.AUDIT_ID=\"+lAuditId+\" AND A.SECTION_ORDER=(SELECT MIN(SECTION_ORDER) FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\") AND SECTION_ORDER>(SELECT SECTION_ORDER FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\")) AND A.PARENT_SECTION_ID=(SELECT PARENT_SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\")\",[]).then(res=>{if(this.NextAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.NextAttemptedSection.push(res.rows.item(i));return this.NextAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionById(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_TYPE_ID,QUESTION_NAME,QUESTION_TYPE,QUESTION_ORDER,IS_CRITICAL,QUESTION_MARKS,(SELECT COUNT(*) FROM QUESTION_TB WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\") AS CNT FROM QUESTION_TB t WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.QuestionById=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionById.push(res.rows.item(i));return this.QuestionById}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionBased(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT *  FROM QUESTION_STANDARD_TBWHERE AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.QuestionBased=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionBased.push(res.rows.item(i));return this.QuestionBased}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionBasedValues(lAuditId,lSectionId,lQuestionId,lStandardId){this.databaseObj.executeSql(\"SELECT _id,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME FROM QUESTION_STANDARD_PREDEFINED_TB WHERE AUDIT_ID=\"+lAuditId+\" AND SECTION_ID=\"+lSectionId+\" AND QUESTION_ID=\"+lQuestionId+\" AND STANDARD_ID=\"+lStandardId,[]).then(res=>{if(this.QuestionBasedValues=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionBasedValues.push(res.rows.item(i));return this.QuestionBasedValues}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchQuestionChoice(lAuditId,lSectionId,lQuestionId){this.databaseObj.executeSql(\"SELECT * FROM QUESTION_CHOICE_TB WHERE AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.QuestionBasedValues=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionChoice.push(res.rows.item(i));return this.QuestionChoice}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchTopAttemptedSection(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=0 ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.TopAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.QuestionChoice.push(res.rows.item(i));return this.QuestionChoice}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchSLAttemptedSection(lAttemptedId,lSectionId,lAuditId){this.databaseObj.executeSql(\"SELECT * FROM SECTION_TB WHERE AUDIT_ID=\"+lAuditId+\" AND PARENT_SECTION_ID=\"+lSectionId,[]).then(res=>{if(this.SLAttemptedSection_check=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection_check.push(res.rows.item(i));return this.SLAttemptedSection_check}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}),null!=this.SLAttemptedSection_check?this.SLAttemptedSection_check.length>0?this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.SLAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.SLAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))}):this.databaseObj.executeSql(\"SELECT A.SECTION_ID,A.SECTION_NAME,A.SECTION_ORDER,A.SECTION_PT,A.T_QUESTION_COUNT,((SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND SECTION_ID=A.SECTION_ID AND QUESTION_STATUS<>'Open')+(SELECT COUNT(*) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND AUDIT_ID=A.AUDIT_ID AND QUESTION_STATUS<>'Open' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID))) AS ATTEMPTQUESTION,(IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(QUESTION_MARKS) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS SECTION_MARKS,(IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND SECTION_ID=A.SECTION_ID AND IS_INCLUDED='Yes'),0)+IFNULL((SELECT SUM(MARKS_SCORED) FROM AUDIT_ATTEMPTED_QUESTIONS WHERE ATTEMPTED_ID=A.ATTEMPTED_ID AND IS_INCLUDED='Yes' AND SECTION_ID IN(SELECT SECTION_ID FROM AUDIT_ATTEMPTED_SECTION WHERE PARENT_SECTION_ID=A.SECTION_ID)),0)) AS MARKS_SCORED FROM AUDIT_ATTEMPTED_SECTION A LEFT JOIN AUDIT_ATTEMPTED_SECTION B ON A.PARENT_SECTION_ID=B.SECTION_ID AND A.ATTEMPTED_ID=B.ATTEMPTED_ID WHERE A.ATTEMPTED_ID=\"+lAttemptedId+\" AND A.PARENT_SECTION_ID=\"+lSectionId+\" ORDER BY A.SECTION_ORDER\",[]).then(res=>{if(this.SLAttemptedSection=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.SLAttemptedSection.push(res.rows.item(i));return this.SLAttemptedSection}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchGenericImageNotPushedAttemptedQuestionBySQL(lAttemptedId,lAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_ID,IMAGE_NAME FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND IMAGE_PUSHED='No' AND IMAGE_NAME<>'' AND IMAGE_NAME<>'null'\",[]).then(res=>{if(this.GenericImageNotPushedAttemptedQuestionBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.GenericImageNotPushedAttemptedQuestionBySQL.push(res.rows.item(i));return this.GenericImageNotPushedAttemptedQuestionBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}DeleteGenericImages(sUniqueID,sAttemptedId){this.databaseObj.executeSql(\"DELETE FROM AUDIT_ATTEMPTED_IMAGES_TB WHERE ATTEMPTED_ID=\"+sAttemptedId,[])}SaveGenericImage(sAttemptedId,sUniqueID,sAuditId,sStoreId,sImageNm,i){this.databaseObj.executeSql(\"INSERT INTO AUDIT_ATTEMPTED_IMAGES_TB(ATTEMPTED_ID,AUDIT_ID,STR_CODE,UNIQUE_ID,IMAGE_NAME,IMAGE_PUSHED) VALUES(\"+sAttemptedId+\",\"+sAuditId+\",'\"+sStoreId+\"','\"+sUniqueID+\"','\"+sImageNm+\"','No')\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}UpdateAuditFindings(sAttemptedId,sUniqueID,sAuditId,sAuditFindings){this.databaseObj.executeSql(\"UPDATE AUDIT_ATTEMPTED_TB SET AUDIT_FINDINGS='\"+sAuditFindings.replace(\"'\",\"''\")+\"' WHERE ATTEMPTED_ID=\"+sAttemptedId+\" AND AUDIT_ID=\"+sAuditId+\" AND UNIQUE_ID='\"+sUniqueID+\"'\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}GetAuditFindings(sAttemptedId,sUniqueID,sAuditId){this.databaseObj.executeSql(\"SELECT AUDIT_FINDINGS FROM AUDIT_ATTEMPTED_TB WHERE ATTEMPTED_ID=\"+sAttemptedId+\" AND AUDIT_ID=\"+sAuditId+\" AND UNIQUE_ID='\"+sUniqueID+\"'\",[]).then(res=>{if(this.AuditFindings=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AuditFindings.push(res.rows.item(i));return this.AuditFindings}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}createQStandard(sAuditId,sSectionId,sQuestionId,sStandardId,sStandardTyp,sMinRng,sMaxRng,sFix,sUOM,sFieldLbl,sPreDefined){this.databaseObj.executeSql(\"INSERT INTO QUESTION_STANDARD_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,STANDARD_TYPE,MIN_RANGE,MAX_RANGE,FIX,UOM,FIELD_LABEL,IS_PREDEFINED) VALUES(\"+sAuditId+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sStandardId+\",'\"+sStandardTyp+\"','\"+sMinRng+\"','\"+sMaxRng+\"','\"+sFix+\"','\"+sUOM+\"','\"+sFieldLbl+\"','\"+sPreDefined+\"')\",[]).then(()=>{console.log(\"data inserted\")}).catch(e=>{console.log(\"error \"+JSON.stringify(e))})}createQStandardPreDefined(sAuditId,sSectionId,sQuestionId,sStandardId,sValueId,sValueNm){this.databaseObj.executeSql(\"INSERT INTO QUESTION_STANDARD_PREDEFINED_TB(AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,VALUE_ID,VALUE_NAME) VALUES(\"+sAuditId+\",\"+sSectionId+\",\"+sQuestionId+\",\"+sStandardId+\",\"+sValueId+\",'\"+sValueNm+\"')\",[]).then(()=>{}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionStandardBySQL(lAttemptedId,lAuditId,lQuestionId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,STANDARD_ID,FIELD_VALUE,COMMENTS,CHOICE_VALUE,POINTS,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId,[]).then(res=>{if(this.AttemptedQuestionStandardBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionStandardBySQL.push(res.rows.item(i));return this.AttemptedQuestionStandardBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}fetchAttemptedQuestionStandardValueBySQL(lAttemptedId,lAuditId,lQuestionId,lStandardId){this.databaseObj.executeSql(\"SELECT ATTEMPTED_ID,AUDIT_ID,SECTION_ID,QUESTION_ID,QUESTION_NAME,STANDARD_ID,VALUE_ID,VALUE_NAME,VALUE_OBSERVED,POINTS,COMMENTS,CHOICE_VALUE,IMAGE_NAME,IMAGE_PUSHED FROM AUDIT_ATTEMPTED_QUESTIONS_STANDATD_PREDEFINED WHERE ATTEMPTED_ID=\"+lAttemptedId+\" AND AUDIT_ID=\"+lAuditId+\" AND QUESTION_ID=\"+lQuestionId+\" AND STANDARD_ID=\"+lStandardId,[]).then(res=>{if(this.AttemptedQuestionStandardValueBySQL=[],console.log(res),res.rows.length>0){for(var i=0;i<res.rows.length;i++)this.AttemptedQuestionStandardValueBySQL.push(res.rows.item(i));return this.AttemptedQuestionStandardValueBySQL}}).catch(e=>{alert(\"error \"+JSON.stringify(e))})}}var router=__webpack_require__(\"iInd\"),RenderType_ListAuditPage=core.ob({encapsulation:0,styles:[[\"\"]],data:{}});function View_ListAuditPage_1(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,11,\"div\",[],null,null,null,null,null)),(_l()(),core.qb(1,0,null,null,10,\"div\",[],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.fetchAttemptedSection(_v.context.$implicit.ATTEMPTED_ID,_v.context.$implicit.AUDIT_ID)&&ad),ad}),null,null)),(_l()(),core.qb(2,0,null,null,9,\"ion-item\",[],null,null,null,ionic_angular_ngfactory.s,ionic_angular_ngfactory.h)),core.pb(3,49152,null,0,ionic_angular.E,[core.h,core.k,core.x],null,null),(_l()(),core.qb(4,0,null,0,7,\"table\",[],null,null,null,null,null)),(_l()(),core.qb(5,0,null,null,6,\"tbody\",[],null,null,null,null,null)),(_l()(),core.qb(6,0,null,null,5,\"tr\",[],null,null,null,null,null)),(_l()(),core.qb(7,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(8,0,null,null,0,\"img\",[[\"height\",\"25\"],[\"src\",\"../../assets/tablez.png\"],[\"width\",\"25\"]],null,null,null,null,null)),(_l()(),core.qb(9,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.Gb(10,null,[\" Audit: \",\"\"])),(_l()(),core.qb(11,0,null,null,0,\"td\",[],null,null,null,null,null))],null,(function(_ck,_v){_ck(_v,10,0,_v.context.$implicit.AUDIT_NAME)}))}function View_ListAuditPage_4(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,8,\"div\",[],null,null,null,null,null)),(_l()(),core.qb(1,0,null,null,7,\"div\",[[\"style\",\"margin-left: 20px;\"]],null,null,null,null,null)),(_l()(),core.qb(2,0,null,null,6,\"ion-item\",[],null,null,null,ionic_angular_ngfactory.s,ionic_angular_ngfactory.h)),core.pb(3,49152,null,0,ionic_angular.E,[core.h,core.k,core.x],null,null),(_l()(),core.qb(4,0,null,0,0,\"img\",[[\"height\",\"25\"],[\"src\",\"../../assets/red_lock_48.png\"],[\"width\",\"25\"]],null,null,null,null,null)),(_l()(),core.qb(5,0,null,0,1,\"span\",[[\"style\",\"font-size: large;\"]],null,null,null,null,null)),(_l()(),core.Gb(6,null,[\"\",\"\"])),(_l()(),core.qb(7,0,null,0,0,\"br\",[],null,null,null,null,null)),(_l()(),core.Gb(8,0,[\" Marks : \",\"     Scored(%): \",\" \"]))],null,(function(_ck,_v){_ck(_v,6,0,_v.context.$implicit.QUESTION_NAME),_ck(_v,8,0,_v.context.$implicit.QUESTION_MARKS,_v.context.$implicit.MARKS_SCORED)}))}function View_ListAuditPage_3(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,2,\"div\",[],null,null,null,null,null)),(_l()(),core.fb(16777216,null,null,1,null,View_ListAuditPage_4)),core.pb(2,278528,null,0,common.h,[core.L,core.I,core.q],{ngForOf:[0,\"ngForOf\"]},null)],(function(_ck,_v){_ck(_v,2,0,_v.component.AttemptedQuestionBySQL)}),null)}function View_ListAuditPage_2(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,19,\"div\",[],null,null,null,null,null)),(_l()(),core.qb(1,0,null,null,16,\"div\",[],null,[[null,\"click\"]],(function(_v,en,$event){var ad=!0;return\"click\"===en&&(ad=!1!==_v.component.fetchAttemptedQuestionBySQL(_v.context.$implicit.ATTEMPTED_ID,_v.context.$implicit.AUDIT_ID,_v.context.$implicit.SECTION_ID)&&ad),ad}),null,null)),(_l()(),core.qb(2,0,null,null,15,\"ion-item\",[],null,null,null,ionic_angular_ngfactory.s,ionic_angular_ngfactory.h)),core.pb(3,49152,null,0,ionic_angular.E,[core.h,core.k,core.x],null,null),(_l()(),core.qb(4,0,null,0,13,\"table\",[],null,null,null,null,null)),(_l()(),core.qb(5,0,null,null,12,\"tbody\",[],null,null,null,null,null)),(_l()(),core.qb(6,0,null,null,7,\"tr\",[],null,null,null,null,null)),(_l()(),core.qb(7,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(8,0,null,null,0,\"img\",[[\"height\",\"25\"],[\"src\",\"../../assets/red_lock_48.png\"],[\"width\",\"25\"]],null,null,null,null,null)),(_l()(),core.qb(9,0,null,null,3,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(10,0,null,null,1,\"span\",[[\"style\",\"font-size: large;\"]],null,null,null,null,null)),(_l()(),core.Gb(11,null,[\"\",\": \",\"\"])),(_l()(),core.Gb(12,null,[\" \",\"\"])),(_l()(),core.qb(13,0,null,null,0,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(14,0,null,null,3,\"tr\",[],null,null,null,null,null)),(_l()(),core.qb(15,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.Gb(16,null,[\"\",\" Total Questions: \",\" Question Answered: \",\" Markes Scored(%): \",\" \"])),(_l()(),core.qb(17,0,null,null,0,\"td\",[],null,null,null,null,null)),(_l()(),core.fb(16777216,null,null,1,null,View_ListAuditPage_3)),core.pb(19,16384,null,0,common.i,[core.L,core.I],{ngIf:[0,\"ngIf\"]},null)],(function(_ck,_v){_ck(_v,19,0,_v.component.show_Question)}),(function(_ck,_v){var _co=_v.component;_ck(_v,11,0,_v.context.$implicit.SECTION_NAME,_v.context.$implicit.SECTION_DESC),_ck(_v,12,0,_co.AuditStore),_ck(_v,16,0,_co.AuditDate,_v.context.$implicit.A.T_QUESTION_COUNT,_v.context.$implicit.A.ATTEMPTQUESTION,_v.context.$implicit.MARKS_SCORED)}))}function View_ListAuditPage_0(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,13,\"ion-header\",[],null,null,null,ionic_angular_ngfactory.q,ionic_angular_ngfactory.f)),core.pb(1,49152,null,0,ionic_angular.y,[core.h,core.k,core.x],null,null),(_l()(),core.qb(2,0,null,0,11,\"div\",[[\"style\",\"background-color: black; align-content: center;\"]],null,null,null,null,null)),(_l()(),core.qb(3,0,null,null,10,\"table\",[[\"style\",\"margin-left: 10px; margin-top: 5px; margin-bottom: 2px;\"]],null,null,null,null,null)),(_l()(),core.qb(4,0,null,null,9,\"tbody\",[],null,null,null,null,null)),(_l()(),core.qb(5,0,null,null,8,\"tr\",[],null,null,null,null,null)),(_l()(),core.qb(6,0,null,null,2,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(7,0,null,null,1,\"span\",[[\"style\",\"margin-top:20px; margin-left: 5px; margin-top: 1px;\"]],null,null,null,null,null)),(_l()(),core.qb(8,0,null,null,0,\"img\",[[\"height\",\"35\"],[\"src\",\"../../assets/tablez.png\"],[\"width\",\"35\"]],null,null,null,null,null)),(_l()(),core.qb(9,0,null,null,1,\"td\",[],null,null,null,null,null)),(_l()(),core.Gb(-1,null,[\" \"])),(_l()(),core.qb(11,0,null,null,2,\"td\",[],null,null,null,null,null)),(_l()(),core.qb(12,0,null,null,1,\"span\",[[\"style\",\"color: white; margin-top: 1px;\"]],null,null,null,null,null)),(_l()(),core.Gb(-1,null,[\"Open Audit\"])),(_l()(),core.qb(14,0,null,null,5,\"ion-content\",[],null,null,null,ionic_angular_ngfactory.n,ionic_angular_ngfactory.c)),core.pb(15,49152,null,0,ionic_angular.r,[core.h,core.k,core.x],null,null),(_l()(),core.fb(16777216,null,0,1,null,View_ListAuditPage_1)),core.pb(17,278528,null,0,common.h,[core.L,core.I,core.q],{ngForOf:[0,\"ngForOf\"]},null),(_l()(),core.fb(16777216,null,0,1,null,View_ListAuditPage_2)),core.pb(19,278528,null,0,common.h,[core.L,core.I,core.q],{ngForOf:[0,\"ngForOf\"]},null)],(function(_ck,_v){var _co=_v.component;_ck(_v,17,0,_co.AttemptedAuditForStore),_ck(_v,19,0,_co.AttemptedSection)}),null)}function View_ListAuditPage_Host_0(_l){return core.Hb(0,[(_l()(),core.qb(0,0,null,null,1,\"app-list-audit\",[],null,null,null,View_ListAuditPage_0,RenderType_ListAuditPage)),core.pb(1,114688,null,0,ListAuditPage,[user_login_service.a,router.m,network_ngx.a,ionic_angular.Cb,ngx.a,router.a],null,null)],(function(_ck,_v){_ck(_v,1,0)}),null)}var ListAuditPageNgFactory=core.mb(\"app-list-audit\",ListAuditPage,View_ListAuditPage_Host_0,{},{},[]),fesm2015_forms=__webpack_require__(\"s7LF\");class ListAuditPageRoutingModule{}__webpack_require__.d(__webpack_exports__,\"ListAuditPageModuleNgFactory\",(function(){return ListAuditPageModuleNgFactory}));var ListAuditPageModuleNgFactory=core.nb(ListAuditPageModule,[],(function(_l){return core.zb([core.Ab(512,core.j,core.Y,[[8,[router_ngfactory.a,ListAuditPageNgFactory]],[3,core.j],core.v]),core.Ab(4608,common.k,common.j,[core.s,[2,common.q]]),core.Ab(4608,fesm2015_forms.n,fesm2015_forms.n,[]),core.Ab(4608,ionic_angular.a,ionic_angular.a,[core.x,core.g]),core.Ab(4608,ionic_angular.Ab,ionic_angular.Ab,[ionic_angular.a,core.j,core.p]),core.Ab(4608,ionic_angular.Db,ionic_angular.Db,[ionic_angular.a,core.j,core.p]),core.Ab(1073742336,common.b,common.b,[]),core.Ab(1073742336,fesm2015_forms.m,fesm2015_forms.m,[]),core.Ab(1073742336,fesm2015_forms.g,fesm2015_forms.g,[]),core.Ab(1073742336,ionic_angular.yb,ionic_angular.yb,[]),core.Ab(1073742336,router.n,router.n,[[2,router.s],[2,router.m]]),core.Ab(1073742336,ListAuditPageRoutingModule,ListAuditPageRoutingModule,[]),core.Ab(1073742336,ListAuditPageModule,ListAuditPageModule,[]),core.Ab(1024,router.k,(function(){return[[{path:\"\",component:ListAuditPage}]]}),[])])}))}}]);","extractedComments":[]}